{"ast":null,"code":"import { BaseListChatMessageHistory } from \"../../schema/index.js\";\n/**\n * Class for storing chat message history in-memory. It extends the\n * BaseListChatMessageHistory class and provides methods to get, add, and\n * clear messages.\n */\nexport class ChatMessageHistory extends BaseListChatMessageHistory {\n  constructor(messages) {\n    super(...arguments);\n    Object.defineProperty(this, \"lc_namespace\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: [\"langchain\", \"stores\", \"message\", \"in_memory\"]\n    });\n    Object.defineProperty(this, \"messages\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    this.messages = messages ?? [];\n  }\n  /**\n   * Method to get all the messages stored in the ChatMessageHistory\n   * instance.\n   * @returns Array of stored BaseMessage instances.\n   */\n  async getMessages() {\n    return this.messages;\n  }\n  /**\n   * Method to add a new message to the ChatMessageHistory instance.\n   * @param message The BaseMessage instance to add.\n   * @returns A promise that resolves when the message has been added.\n   */\n  async addMessage(message) {\n    this.messages.push(message);\n  }\n  /**\n   * Method to clear all the messages from the ChatMessageHistory instance.\n   * @returns A promise that resolves when all messages have been cleared.\n   */\n  async clear() {\n    this.messages = [];\n  }\n}","map":{"version":3,"names":["BaseListChatMessageHistory","ChatMessageHistory","constructor","messages","arguments","Object","defineProperty","enumerable","configurable","writable","value","getMessages","addMessage","message","push","clear"],"sources":["/Users/mayamagavi/instalily/case-study/node_modules/langchain/dist/stores/message/in_memory.js"],"sourcesContent":["import { BaseListChatMessageHistory } from \"../../schema/index.js\";\n/**\n * Class for storing chat message history in-memory. It extends the\n * BaseListChatMessageHistory class and provides methods to get, add, and\n * clear messages.\n */\nexport class ChatMessageHistory extends BaseListChatMessageHistory {\n    constructor(messages) {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"stores\", \"message\", \"in_memory\"]\n        });\n        Object.defineProperty(this, \"messages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        this.messages = messages ?? [];\n    }\n    /**\n     * Method to get all the messages stored in the ChatMessageHistory\n     * instance.\n     * @returns Array of stored BaseMessage instances.\n     */\n    async getMessages() {\n        return this.messages;\n    }\n    /**\n     * Method to add a new message to the ChatMessageHistory instance.\n     * @param message The BaseMessage instance to add.\n     * @returns A promise that resolves when the message has been added.\n     */\n    async addMessage(message) {\n        this.messages.push(message);\n    }\n    /**\n     * Method to clear all the messages from the ChatMessageHistory instance.\n     * @returns A promise that resolves when all messages have been cleared.\n     */\n    async clear() {\n        this.messages = [];\n    }\n}\n"],"mappings":"AAAA,SAASA,0BAA0B,QAAQ,uBAAuB;AAClE;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,kBAAkB,SAASD,0BAA0B,CAAC;EAC/DE,WAAWA,CAACC,QAAQ,EAAE;IAClB,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnBC,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,cAAc,EAAE;MACxCC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,CAAC,WAAW,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW;IACzD,CAAC,CAAC;IACFL,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,UAAU,EAAE;MACpCC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE;IACX,CAAC,CAAC;IACF,IAAI,CAACP,QAAQ,GAAGA,QAAQ,IAAI,EAAE;EAClC;EACA;AACJ;AACA;AACA;AACA;EACI,MAAMQ,WAAWA,CAAA,EAAG;IAChB,OAAO,IAAI,CAACR,QAAQ;EACxB;EACA;AACJ;AACA;AACA;AACA;EACI,MAAMS,UAAUA,CAACC,OAAO,EAAE;IACtB,IAAI,CAACV,QAAQ,CAACW,IAAI,CAACD,OAAO,CAAC;EAC/B;EACA;AACJ;AACA;AACA;EACI,MAAME,KAAKA,CAAA,EAAG;IACV,IAAI,CAACZ,QAAQ,GAAG,EAAE;EACtB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}