{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2018 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ProtocolError_code, _ProtocolError_originalMessage;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.errors = exports.ProtocolError = exports.AbortError = exports.TimeoutError = exports.CustomError = void 0;\n/**\n * @deprecated Do not use.\n *\n * @public\n */\nclass CustomError extends Error {\n  /**\n   * @internal\n   */\n  constructor(message) {\n    super(message);\n    this.name = this.constructor.name;\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\nexports.CustomError = CustomError;\n/**\n * TimeoutError is emitted whenever certain operations are terminated due to\n * timeout.\n *\n * @remarks\n * Example operations are {@link Page.waitForSelector | page.waitForSelector} or\n * {@link PuppeteerNode.launch | puppeteer.launch}.\n *\n * @public\n */\nclass TimeoutError extends CustomError {}\nexports.TimeoutError = TimeoutError;\n/**\n * AbortError is emitted whenever certain operations are terminated due to\n * an abort request.\n *\n * @remarks\n * Example operations are {@link Page.waitForSelector | page.waitForSelector}.\n *\n * @public\n */\nclass AbortError extends CustomError {}\nexports.AbortError = AbortError;\n/**\n * ProtocolError is emitted whenever there is an error from the protocol.\n *\n * @public\n */\nclass ProtocolError extends CustomError {\n  constructor() {\n    super(...arguments);\n    _ProtocolError_code.set(this, void 0);\n    _ProtocolError_originalMessage.set(this, '');\n  }\n  set code(code) {\n    __classPrivateFieldSet(this, _ProtocolError_code, code, \"f\");\n  }\n  /**\n   * @readonly\n   * @public\n   */\n  get code() {\n    return __classPrivateFieldGet(this, _ProtocolError_code, \"f\");\n  }\n  set originalMessage(originalMessage) {\n    __classPrivateFieldSet(this, _ProtocolError_originalMessage, originalMessage, \"f\");\n  }\n  /**\n   * @readonly\n   * @public\n   */\n  get originalMessage() {\n    return __classPrivateFieldGet(this, _ProtocolError_originalMessage, \"f\");\n  }\n}\nexports.ProtocolError = ProtocolError;\n_ProtocolError_code = new WeakMap(), _ProtocolError_originalMessage = new WeakMap();\n/**\n * @deprecated Import error classes directly.\n *\n * Puppeteer methods might throw errors if they are unable to fulfill a request.\n * For example, `page.waitForSelector(selector[, options])` might fail if the\n * selector doesn't match any nodes during the given timeframe.\n *\n * For certain types of errors Puppeteer uses specific error classes. These\n * classes are available via `puppeteer.errors`.\n *\n * @example\n * An example of handling a timeout error:\n *\n * ```ts\n * try {\n *   await page.waitForSelector('.foo');\n * } catch (e) {\n *   if (e instanceof TimeoutError) {\n *     // Do something if this is a timeout.\n *   }\n * }\n * ```\n *\n * @public\n */\nexports.errors = Object.freeze({\n  TimeoutError,\n  ProtocolError\n});","map":{"version":3,"names":["CustomError","Error","constructor","message","name","captureStackTrace","exports","TimeoutError","AbortError","ProtocolError","_ProtocolError_code","set","_ProtocolError_originalMessage","code","__classPrivateFieldSet","__classPrivateFieldGet","originalMessage","errors","Object","freeze"],"sources":["../../../../src/common/Errors.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA;;;;;AAKA,MAAaA,WAAY,SAAQC,KAAK;EACpC;;;EAGAC,YAAYC,OAAgB;IAC1B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,IAAI,CAACF,WAAW,CAACE,IAAI;IACjCH,KAAK,CAACI,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAACH,WAAW,CAAC;EACjD;;AARFI,OAAA,CAAAN,WAAA,GAAAA,WAAA;AAWA;;;;;;;;;;AAUA,MAAaO,YAAa,SAAQP,WAAW;AAA7CM,OAAA,CAAAC,YAAA,GAAAA,YAAA;AAEA;;;;;;;;;AASA,MAAaC,UAAW,SAAQR,WAAW;AAA3CM,OAAA,CAAAE,UAAA,GAAAA,UAAA;AAEA;;;;;AAKA,MAAaC,aAAc,SAAQT,WAAW;EAA9CE,YAAA;;IACEQ,mBAAA,CAAAC,GAAA;IACAC,8BAAA,CAAAD,GAAA,OAAmB,EAAE;EAuBvB;EArBE,IAAIE,IAAIA,CAACA,IAAwB;IAC/BC,sBAAA,KAAI,EAAAJ,mBAAA,EAASG,IAAI;EACnB;EACA;;;;EAIA,IAAIA,IAAIA,CAAA;IACN,OAAOE,sBAAA,KAAI,EAAAL,mBAAA,MAAM;EACnB;EAEA,IAAIM,eAAeA,CAACA,eAAuB;IACzCF,sBAAA,KAAI,EAAAF,8BAAA,EAAoBI,eAAe;EACzC;EACA;;;;EAIA,IAAIA,eAAeA,CAAA;IACjB,OAAOD,sBAAA,KAAI,EAAAH,8BAAA,MAAiB;EAC9B;;AAxBFN,OAAA,CAAAG,aAAA,GAAAA,aAAA;;AAqCA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBaH,OAAA,CAAAW,MAAM,GAAoBC,MAAM,CAACC,MAAM,CAAC;EACnDZ,YAAY;EACZE;CACD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}