{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EventEmitter = void 0;\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst mitt_1 = __importDefault(require(\"mitt\"));\nclass EventEmitter {\n  #emitter = (0, mitt_1.default)();\n  on(type, handler) {\n    this.#emitter.on(type, handler);\n    return this;\n  }\n  /**\n   * Like `on` but the listener will only be fired once and then it will be removed.\n   * @param event The event you'd like to listen to\n   * @param handler The handler function to run when the event occurs\n   * @return `this` to enable chaining method calls.\n   */\n  once(event, handler) {\n    const onceHandler = eventData => {\n      handler(eventData);\n      this.off(event, onceHandler);\n    };\n    return this.on(event, onceHandler);\n  }\n  off(type, handler) {\n    this.#emitter.off(type, handler);\n    return this;\n  }\n  /**\n   * Emits an event and call any associated listeners.\n   *\n   * @param event The event to emit.\n   * @param eventData Any data to emit with the event.\n   * @return `true` if there are any listeners, `false` otherwise.\n   */\n  emit(event, eventData) {\n    this.#emitter.emit(event, eventData);\n  }\n}\nexports.EventEmitter = EventEmitter;","map":{"version":3,"names":["mitt_1","__importDefault","require","EventEmitter","emitter","default","on","type","handler","once","event","onceHandler","eventData","off","emit","exports"],"sources":["../../../src/utils/EventEmitter.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;AAgBA,MAAAA,MAAA,GAAAC,eAAA,CAAAC,OAAA;AAEA,MAAaC,YAAY;EACvB,CAAAC,OAAQ,GAAoB,IAAAJ,MAAA,CAAAK,OAAI,GAAE;EAalCC,EAAEA,CAACC,IAAS,EAAEC,OAAY;IACxB,IAAI,CAAC,CAAAJ,OAAQ,CAACE,EAAE,CAACC,IAAI,EAAEC,OAAO,CAAC;IAC/B,OAAO,IAAI;EACb;EAEA;;;;;;EAMAC,IAAIA,CAACC,KAAgB,EAAEF,OAAgB;IACrC,MAAMG,WAAW,GAAaC,SAAS,IAAI;MACzCJ,OAAO,CAACI,SAAS,CAAC;MAClB,IAAI,CAACC,GAAG,CAACH,KAAK,EAAEC,WAAW,CAAC;IAC9B,CAAC;IACD,OAAO,IAAI,CAACL,EAAE,CAACI,KAAK,EAAEC,WAAW,CAAC;EACpC;EAaAE,GAAGA,CAACN,IAAS,EAAEC,OAAY;IACzB,IAAI,CAAC,CAAAJ,OAAQ,CAACS,GAAG,CAACN,IAAI,EAAEC,OAAO,CAAC;IAChC,OAAO,IAAI;EACb;EAEA;;;;;;;EAOAM,IAAIA,CAA2BJ,KAAU,EAAEE,SAAsB;IAC/D,IAAI,CAAC,CAAAR,OAAQ,CAACU,IAAI,CAACJ,KAAK,EAAEE,SAAS,CAAC;EACtC;;AA1DFG,OAAA,CAAAZ,YAAA,GAAAA,YAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}