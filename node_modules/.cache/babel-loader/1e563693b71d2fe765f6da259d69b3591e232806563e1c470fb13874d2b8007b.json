{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _CDPElementHandle_instances, _CDPElementHandle_frame, _CDPElementHandle_frameManager_get, _CDPElementHandle_page_get, _CDPElementHandle_checkVisibility, _CDPElementHandle_scrollIntoViewIfNeeded, _CDPElementHandle_getOOPIFOffsets, _CDPElementHandle_getBoxModel, _CDPElementHandle_fromProtocolQuad, _CDPElementHandle_intersectQuadWithViewport;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CDPElementHandle = void 0;\nconst ElementHandle_js_1 = require(\"../api/ElementHandle.js\");\nconst assert_js_1 = require(\"../util/assert.js\");\nconst AsyncIterableUtil_js_1 = require(\"../util/AsyncIterableUtil.js\");\nconst GetQueryHandler_js_1 = require(\"./GetQueryHandler.js\");\nconst IsolatedWorlds_js_1 = require(\"./IsolatedWorlds.js\");\nconst JSHandle_js_1 = require(\"./JSHandle.js\");\nconst LazyArg_js_1 = require(\"./LazyArg.js\");\nconst util_js_1 = require(\"./util.js\");\nconst applyOffsetsToQuad = (quad, offsetX, offsetY) => {\n  return quad.map(part => {\n    return {\n      x: part.x + offsetX,\n      y: part.y + offsetY\n    };\n  });\n};\n/**\n * The CDPElementHandle extends ElementHandle now to keep compatibility\n * with `instanceof` because of that we need to have methods for\n * CDPJSHandle to in this implementation as well.\n *\n * @internal\n */\nclass CDPElementHandle extends ElementHandle_js_1.ElementHandle {\n  constructor(context, remoteObject, frame) {\n    super(new JSHandle_js_1.CDPJSHandle(context, remoteObject));\n    _CDPElementHandle_instances.add(this);\n    _CDPElementHandle_frame.set(this, void 0);\n    __classPrivateFieldSet(this, _CDPElementHandle_frame, frame, \"f\");\n  }\n  /**\n   * @internal\n   */\n  executionContext() {\n    return this.handle.executionContext();\n  }\n  /**\n   * @internal\n   */\n  get client() {\n    return this.handle.client;\n  }\n  remoteObject() {\n    return this.handle.remoteObject();\n  }\n  get frame() {\n    return __classPrivateFieldGet(this, _CDPElementHandle_frame, \"f\");\n  }\n  async $(selector) {\n    const {\n      updatedSelector,\n      QueryHandler\n    } = (0, GetQueryHandler_js_1.getQueryHandlerAndSelector)(selector);\n    return await QueryHandler.queryOne(this, updatedSelector);\n  }\n  async $$(selector) {\n    const {\n      updatedSelector,\n      QueryHandler\n    } = (0, GetQueryHandler_js_1.getQueryHandlerAndSelector)(selector);\n    return AsyncIterableUtil_js_1.AsyncIterableUtil.collect(QueryHandler.queryAll(this, updatedSelector));\n  }\n  async $eval(selector, pageFunction, ...args) {\n    const elementHandle = await this.$(selector);\n    if (!elementHandle) {\n      throw new Error(`Error: failed to find element matching selector \"${selector}\"`);\n    }\n    const result = await elementHandle.evaluate(pageFunction, ...args);\n    await elementHandle.dispose();\n    return result;\n  }\n  async $$eval(selector, pageFunction, ...args) {\n    const results = await this.$$(selector);\n    const elements = await this.evaluateHandle((_, ...elements) => {\n      return elements;\n    }, ...results);\n    const [result] = await Promise.all([elements.evaluate(pageFunction, ...args), ...results.map(results => {\n      return results.dispose();\n    })]);\n    await elements.dispose();\n    return result;\n  }\n  async $x(expression) {\n    if (expression.startsWith('//')) {\n      expression = `.${expression}`;\n    }\n    return this.$$(`xpath/${expression}`);\n  }\n  async waitForSelector(selector, options = {}) {\n    const {\n      updatedSelector,\n      QueryHandler\n    } = (0, GetQueryHandler_js_1.getQueryHandlerAndSelector)(selector);\n    return await QueryHandler.waitFor(this, updatedSelector, options);\n  }\n  async waitForXPath(xpath, options = {}) {\n    if (xpath.startsWith('//')) {\n      xpath = `.${xpath}`;\n    }\n    return this.waitForSelector(`xpath/${xpath}`, options);\n  }\n  async isVisible() {\n    return __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_checkVisibility).call(this, true);\n  }\n  async isHidden() {\n    return __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_checkVisibility).call(this, false);\n  }\n  async toElement(tagName) {\n    const isMatchingTagName = await this.evaluate((node, tagName) => {\n      return node.nodeName === tagName.toUpperCase();\n    }, tagName);\n    if (!isMatchingTagName) {\n      throw new Error(`Element is not a(n) \\`${tagName}\\` element`);\n    }\n    return this;\n  }\n  async contentFrame() {\n    const nodeInfo = await this.client.send('DOM.describeNode', {\n      objectId: this.remoteObject().objectId\n    });\n    if (typeof nodeInfo.node.frameId !== 'string') {\n      return null;\n    }\n    return __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_frameManager_get).frame(nodeInfo.node.frameId);\n  }\n  async scrollIntoView() {\n    await this.assertConnectedElement();\n    try {\n      await this.client.send('DOM.scrollIntoViewIfNeeded', {\n        objectId: this.remoteObject().objectId\n      });\n    } catch (error) {\n      (0, util_js_1.debugError)(error);\n      // Fallback to Element.scrollIntoView if DOM.scrollIntoViewIfNeeded is not supported\n      await this.evaluate(async element => {\n        element.scrollIntoView({\n          block: 'center',\n          inline: 'center',\n          // @ts-expect-error Chrome still supports behavior: instant but\n          // it's not in the spec so TS shouts We don't want to make this\n          // breaking change in Puppeteer yet so we'll ignore the line.\n          behavior: 'instant'\n        });\n      });\n    }\n  }\n  async clickablePoint(offset) {\n    const [result, layoutMetrics] = await Promise.all([this.client.send('DOM.getContentQuads', {\n      objectId: this.remoteObject().objectId\n    }).catch(util_js_1.debugError), __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get)._client().send('Page.getLayoutMetrics')]);\n    if (!result || !result.quads.length) {\n      throw new Error('Node is either not clickable or not an HTMLElement');\n    }\n    // Filter out quads that have too small area to click into.\n    // Fallback to `layoutViewport` in case of using Firefox.\n    const {\n      clientWidth,\n      clientHeight\n    } = layoutMetrics.cssLayoutViewport || layoutMetrics.layoutViewport;\n    const {\n      offsetX,\n      offsetY\n    } = await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_getOOPIFOffsets).call(this, __classPrivateFieldGet(this, _CDPElementHandle_frame, \"f\"));\n    const quads = result.quads.map(quad => {\n      return __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_fromProtocolQuad).call(this, quad);\n    }).map(quad => {\n      return applyOffsetsToQuad(quad, offsetX, offsetY);\n    }).map(quad => {\n      return __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_intersectQuadWithViewport).call(this, quad, clientWidth, clientHeight);\n    }).filter(quad => {\n      return computeQuadArea(quad) > 1;\n    });\n    if (!quads.length) {\n      throw new Error('Node is either not clickable or not an HTMLElement');\n    }\n    const quad = quads[0];\n    if (offset) {\n      // Return the point of the first quad identified by offset.\n      let minX = Number.MAX_SAFE_INTEGER;\n      let minY = Number.MAX_SAFE_INTEGER;\n      for (const point of quad) {\n        if (point.x < minX) {\n          minX = point.x;\n        }\n        if (point.y < minY) {\n          minY = point.y;\n        }\n      }\n      if (minX !== Number.MAX_SAFE_INTEGER && minY !== Number.MAX_SAFE_INTEGER) {\n        return {\n          x: minX + offset.x,\n          y: minY + offset.y\n        };\n      }\n    }\n    // Return the middle point of the first quad.\n    let x = 0;\n    let y = 0;\n    for (const point of quad) {\n      x += point.x;\n      y += point.y;\n    }\n    return {\n      x: x / 4,\n      y: y / 4\n    };\n  }\n  /**\n   * This method scrolls element into view if needed, and then\n   * uses {@link Page.mouse} to hover over the center of the element.\n   * If the element is detached from DOM, the method throws an error.\n   */\n  async hover() {\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n    const {\n      x,\n      y\n    } = await this.clickablePoint();\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).mouse.move(x, y);\n  }\n  /**\n   * This method scrolls element into view if needed, and then\n   * uses {@link Page.mouse} to click in the center of the element.\n   * If the element is detached from DOM, the method throws an error.\n   */\n  async click(options = {}) {\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n    const {\n      x,\n      y\n    } = await this.clickablePoint(options.offset);\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).mouse.click(x, y, options);\n  }\n  /**\n   * This method creates and captures a dragevent from the element.\n   */\n  async drag(target) {\n    (0, assert_js_1.assert)(__classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).isDragInterceptionEnabled(), 'Drag Interception is not enabled!');\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n    const start = await this.clickablePoint();\n    return await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).mouse.drag(start, target);\n  }\n  async dragEnter(data = {\n    items: [],\n    dragOperationsMask: 1\n  }) {\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n    const target = await this.clickablePoint();\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).mouse.dragEnter(target, data);\n  }\n  async dragOver(data = {\n    items: [],\n    dragOperationsMask: 1\n  }) {\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n    const target = await this.clickablePoint();\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).mouse.dragOver(target, data);\n  }\n  async drop(data = {\n    items: [],\n    dragOperationsMask: 1\n  }) {\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n    const destination = await this.clickablePoint();\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).mouse.drop(destination, data);\n  }\n  async dragAndDrop(target, options) {\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n    const startPoint = await this.clickablePoint();\n    const targetPoint = await target.clickablePoint();\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).mouse.dragAndDrop(startPoint, targetPoint, options);\n  }\n  async select(...values) {\n    for (const value of values) {\n      (0, assert_js_1.assert)((0, util_js_1.isString)(value), 'Values must be strings. Found value \"' + value + '\" of type \"' + typeof value + '\"');\n    }\n    return this.evaluate((element, vals) => {\n      const values = new Set(vals);\n      if (!(element instanceof HTMLSelectElement)) {\n        throw new Error('Element is not a <select> element.');\n      }\n      const selectedValues = new Set();\n      if (!element.multiple) {\n        for (const option of element.options) {\n          option.selected = false;\n        }\n        for (const option of element.options) {\n          if (values.has(option.value)) {\n            option.selected = true;\n            selectedValues.add(option.value);\n            break;\n          }\n        }\n      } else {\n        for (const option of element.options) {\n          option.selected = values.has(option.value);\n          if (option.selected) {\n            selectedValues.add(option.value);\n          }\n        }\n      }\n      element.dispatchEvent(new Event('input', {\n        bubbles: true\n      }));\n      element.dispatchEvent(new Event('change', {\n        bubbles: true\n      }));\n      return [...selectedValues.values()];\n    }, values);\n  }\n  async uploadFile(...filePaths) {\n    const isMultiple = await this.evaluate(element => {\n      return element.multiple;\n    });\n    (0, assert_js_1.assert)(filePaths.length <= 1 || isMultiple, 'Multiple file uploads only work with <input type=file multiple>');\n    // Locate all files and confirm that they exist.\n    let path;\n    try {\n      path = await Promise.resolve().then(() => __importStar(require('path')));\n    } catch (error) {\n      if (error instanceof TypeError) {\n        throw new Error(`JSHandle#uploadFile can only be used in Node-like environments.`);\n      }\n      throw error;\n    }\n    const files = filePaths.map(filePath => {\n      if (path.win32.isAbsolute(filePath) || path.posix.isAbsolute(filePath)) {\n        return filePath;\n      } else {\n        return path.resolve(filePath);\n      }\n    });\n    const {\n      objectId\n    } = this.remoteObject();\n    const {\n      node\n    } = await this.client.send('DOM.describeNode', {\n      objectId\n    });\n    const {\n      backendNodeId\n    } = node;\n    /*  The zero-length array is a special case, it seems that\n         DOM.setFileInputFiles does not actually update the files in that case,\n         so the solution is to eval the element value to a new FileList directly.\n     */\n    if (files.length === 0) {\n      await this.evaluate(element => {\n        element.files = new DataTransfer().files;\n        // Dispatch events for this case because it should behave akin to a user action.\n        element.dispatchEvent(new Event('input', {\n          bubbles: true\n        }));\n        element.dispatchEvent(new Event('change', {\n          bubbles: true\n        }));\n      });\n    } else {\n      await this.client.send('DOM.setFileInputFiles', {\n        objectId,\n        files,\n        backendNodeId\n      });\n    }\n  }\n  async tap() {\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n    const {\n      x,\n      y\n    } = await this.clickablePoint();\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).touchscreen.touchStart(x, y);\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).touchscreen.touchEnd();\n  }\n  async touchStart() {\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n    const {\n      x,\n      y\n    } = await this.clickablePoint();\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).touchscreen.touchStart(x, y);\n  }\n  async touchMove() {\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n    const {\n      x,\n      y\n    } = await this.clickablePoint();\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).touchscreen.touchMove(x, y);\n  }\n  async touchEnd() {\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).touchscreen.touchEnd();\n  }\n  async focus() {\n    await this.evaluate(element => {\n      if (!(element instanceof HTMLElement)) {\n        throw new Error('Cannot focus non-HTMLElement');\n      }\n      return element.focus();\n    });\n  }\n  async type(text, options) {\n    await this.focus();\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).keyboard.type(text, options);\n  }\n  async press(key, options) {\n    await this.focus();\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).keyboard.press(key, options);\n  }\n  async boundingBox() {\n    const result = await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_getBoxModel).call(this);\n    if (!result) {\n      return null;\n    }\n    const {\n      offsetX,\n      offsetY\n    } = await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_getOOPIFOffsets).call(this, __classPrivateFieldGet(this, _CDPElementHandle_frame, \"f\"));\n    const quad = result.model.border;\n    const x = Math.min(quad[0], quad[2], quad[4], quad[6]);\n    const y = Math.min(quad[1], quad[3], quad[5], quad[7]);\n    const width = Math.max(quad[0], quad[2], quad[4], quad[6]) - x;\n    const height = Math.max(quad[1], quad[3], quad[5], quad[7]) - y;\n    return {\n      x: x + offsetX,\n      y: y + offsetY,\n      width,\n      height\n    };\n  }\n  async boxModel() {\n    const result = await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_getBoxModel).call(this);\n    if (!result) {\n      return null;\n    }\n    const {\n      offsetX,\n      offsetY\n    } = await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_getOOPIFOffsets).call(this, __classPrivateFieldGet(this, _CDPElementHandle_frame, \"f\"));\n    const {\n      content,\n      padding,\n      border,\n      margin,\n      width,\n      height\n    } = result.model;\n    return {\n      content: applyOffsetsToQuad(__classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_fromProtocolQuad).call(this, content), offsetX, offsetY),\n      padding: applyOffsetsToQuad(__classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_fromProtocolQuad).call(this, padding), offsetX, offsetY),\n      border: applyOffsetsToQuad(__classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_fromProtocolQuad).call(this, border), offsetX, offsetY),\n      margin: applyOffsetsToQuad(__classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_fromProtocolQuad).call(this, margin), offsetX, offsetY),\n      width,\n      height\n    };\n  }\n  async screenshot(options = {}) {\n    let needsViewportReset = false;\n    let boundingBox = await this.boundingBox();\n    (0, assert_js_1.assert)(boundingBox, 'Node is either not visible or not an HTMLElement');\n    const viewport = __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).viewport();\n    if (viewport && (boundingBox.width > viewport.width || boundingBox.height > viewport.height)) {\n      const newViewport = {\n        width: Math.max(viewport.width, Math.ceil(boundingBox.width)),\n        height: Math.max(viewport.height, Math.ceil(boundingBox.height))\n      };\n      await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).setViewport(Object.assign({}, viewport, newViewport));\n      needsViewportReset = true;\n    }\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n    boundingBox = await this.boundingBox();\n    (0, assert_js_1.assert)(boundingBox, 'Node is either not visible or not an HTMLElement');\n    (0, assert_js_1.assert)(boundingBox.width !== 0, 'Node has 0 width.');\n    (0, assert_js_1.assert)(boundingBox.height !== 0, 'Node has 0 height.');\n    const layoutMetrics = await this.client.send('Page.getLayoutMetrics');\n    // Fallback to `layoutViewport` in case of using Firefox.\n    const {\n      pageX,\n      pageY\n    } = layoutMetrics.cssVisualViewport || layoutMetrics.layoutViewport;\n    const clip = Object.assign({}, boundingBox);\n    clip.x += pageX;\n    clip.y += pageY;\n    const imageData = await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).screenshot(Object.assign({}, {\n      clip\n    }, options));\n    if (needsViewportReset && viewport) {\n      await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).setViewport(viewport);\n    }\n    return imageData;\n  }\n}\nexports.CDPElementHandle = CDPElementHandle;\n_CDPElementHandle_frame = new WeakMap(), _CDPElementHandle_instances = new WeakSet(), _CDPElementHandle_frameManager_get = function _CDPElementHandle_frameManager_get() {\n  return __classPrivateFieldGet(this, _CDPElementHandle_frame, \"f\")._frameManager;\n}, _CDPElementHandle_page_get = function _CDPElementHandle_page_get() {\n  return __classPrivateFieldGet(this, _CDPElementHandle_frame, \"f\").page();\n}, _CDPElementHandle_checkVisibility = async function _CDPElementHandle_checkVisibility(visibility) {\n  const element = await this.frame.worlds[IsolatedWorlds_js_1.PUPPETEER_WORLD].adoptHandle(this);\n  try {\n    return await this.frame.worlds[IsolatedWorlds_js_1.PUPPETEER_WORLD].evaluate(async (PuppeteerUtil, element, visibility) => {\n      return Boolean(PuppeteerUtil.checkVisibility(element, visibility));\n    }, LazyArg_js_1.LazyArg.create(context => {\n      return context.puppeteerUtil;\n    }), element, visibility);\n  } finally {\n    await element.dispose();\n  }\n}, _CDPElementHandle_scrollIntoViewIfNeeded = async function _CDPElementHandle_scrollIntoViewIfNeeded() {\n  if (await this.isIntersectingViewport({\n    threshold: 1\n  })) {\n    return;\n  }\n  await this.scrollIntoView();\n}, _CDPElementHandle_getOOPIFOffsets = async function _CDPElementHandle_getOOPIFOffsets(frame) {\n  let offsetX = 0;\n  let offsetY = 0;\n  let currentFrame = frame;\n  while (currentFrame && currentFrame.parentFrame()) {\n    const parent = currentFrame.parentFrame();\n    if (!currentFrame.isOOPFrame() || !parent) {\n      currentFrame = parent;\n      continue;\n    }\n    const {\n      backendNodeId\n    } = await parent._client().send('DOM.getFrameOwner', {\n      frameId: currentFrame._id\n    });\n    const result = await parent._client().send('DOM.getBoxModel', {\n      backendNodeId: backendNodeId\n    });\n    if (!result) {\n      break;\n    }\n    const contentBoxQuad = result.model.content;\n    const topLeftCorner = __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_fromProtocolQuad).call(this, contentBoxQuad)[0];\n    offsetX += topLeftCorner.x;\n    offsetY += topLeftCorner.y;\n    currentFrame = parent;\n  }\n  return {\n    offsetX,\n    offsetY\n  };\n}, _CDPElementHandle_getBoxModel = function _CDPElementHandle_getBoxModel() {\n  const params = {\n    objectId: this.id\n  };\n  return this.client.send('DOM.getBoxModel', params).catch(error => {\n    return (0, util_js_1.debugError)(error);\n  });\n}, _CDPElementHandle_fromProtocolQuad = function _CDPElementHandle_fromProtocolQuad(quad) {\n  return [{\n    x: quad[0],\n    y: quad[1]\n  }, {\n    x: quad[2],\n    y: quad[3]\n  }, {\n    x: quad[4],\n    y: quad[5]\n  }, {\n    x: quad[6],\n    y: quad[7]\n  }];\n}, _CDPElementHandle_intersectQuadWithViewport = function _CDPElementHandle_intersectQuadWithViewport(quad, width, height) {\n  return quad.map(point => {\n    return {\n      x: Math.min(Math.max(point.x, 0), width),\n      y: Math.min(Math.max(point.y, 0), height)\n    };\n  });\n};\nfunction computeQuadArea(quad) {\n  /* Compute sum of all directed areas of adjacent triangles\n     https://en.wikipedia.org/wiki/Polygon#Simple_polygons\n   */\n  let area = 0;\n  for (let i = 0; i < quad.length; ++i) {\n    const p1 = quad[i];\n    const p2 = quad[(i + 1) % quad.length];\n    area += (p1.x * p2.y - p2.x * p1.y) / 2;\n  }\n  return Math.abs(area);\n}","map":{"version":3,"names":["ElementHandle_js_1","require","assert_js_1","AsyncIterableUtil_js_1","GetQueryHandler_js_1","IsolatedWorlds_js_1","JSHandle_js_1","LazyArg_js_1","util_js_1","applyOffsetsToQuad","quad","offsetX","offsetY","map","part","x","y","CDPElementHandle","ElementHandle","constructor","context","remoteObject","frame","CDPJSHandle","_CDPElementHandle_frame","set","__classPrivateFieldSet","executionContext","handle","client","__classPrivateFieldGet","$","selector","updatedSelector","QueryHandler","getQueryHandlerAndSelector","queryOne","$$","AsyncIterableUtil","collect","queryAll","$eval","pageFunction","args","elementHandle","Error","result","evaluate","dispose","$$eval","results","elements","evaluateHandle","_","Promise","all","$x","expression","startsWith","waitForSelector","options","waitFor","waitForXPath","xpath","isVisible","_CDPElementHandle_instances","_CDPElementHandle_checkVisibility","call","isHidden","toElement","tagName","isMatchingTagName","node","nodeName","toUpperCase","contentFrame","nodeInfo","send","objectId","frameId","_CDPElementHandle_frameManager_get","scrollIntoView","assertConnectedElement","error","debugError","element","block","inline","behavior","clickablePoint","offset","layoutMetrics","catch","_CDPElementHandle_page_get","_client","quads","length","clientWidth","clientHeight","cssLayoutViewport","layoutViewport","_CDPElementHandle_getOOPIFOffsets","_CDPElementHandle_fromProtocolQuad","_CDPElementHandle_intersectQuadWithViewport","filter","computeQuadArea","minX","Number","MAX_SAFE_INTEGER","minY","point","hover","_CDPElementHandle_scrollIntoViewIfNeeded","mouse","move","click","drag","target","assert","isDragInterceptionEnabled","start","dragEnter","data","items","dragOperationsMask","dragOver","drop","destination","dragAndDrop","startPoint","targetPoint","select","values","value","isString","vals","Set","HTMLSelectElement","selectedValues","multiple","option","selected","has","add","dispatchEvent","Event","bubbles","uploadFile","filePaths","isMultiple","path","resolve","then","__importStar","TypeError","files","filePath","win32","isAbsolute","posix","backendNodeId","DataTransfer","tap","touchscreen","touchStart","touchEnd","touchMove","focus","HTMLElement","type","text","keyboard","press","key","boundingBox","_CDPElementHandle_getBoxModel","model","border","Math","min","width","max","height","boxModel","content","padding","margin","screenshot","needsViewportReset","viewport","newViewport","ceil","setViewport","Object","assign","pageX","pageY","cssVisualViewport","clip","imageData","exports","_frameManager","page","visibility","worlds","PUPPETEER_WORLD","adoptHandle","PuppeteerUtil","Boolean","checkVisibility","LazyArg","create","puppeteerUtil","isIntersectingViewport","threshold","currentFrame","parentFrame","parent","isOOPFrame","_id","contentBoxQuad","topLeftCorner","params","id","area","i","p1","p2","abs"],"sources":["../../../../src/common/ElementHandle.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,MAAAA,kBAAA,GAAAC,OAAA;AAUA,MAAAC,WAAA,GAAAD,OAAA;AACA,MAAAE,sBAAA,GAAAF,OAAA;AAMA,MAAAG,oBAAA,GAAAH,OAAA;AAEA,MAAAI,mBAAA,GAAAJ,OAAA;AACA,MAAAK,aAAA,GAAAL,OAAA;AACA,MAAAM,YAAA,GAAAN,OAAA;AAIA,MAAAO,SAAA,GAAAP,OAAA;AAEA,MAAMQ,kBAAkB,GAAGA,CACzBC,IAAa,EACbC,OAAe,EACfC,OAAe,KACb;EACF,OAAOF,IAAI,CAACG,GAAG,CAACC,IAAI,IAAG;IACrB,OAAO;MAACC,CAAC,EAAED,IAAI,CAACC,CAAC,GAAGJ,OAAO;MAAEK,CAAC,EAAEF,IAAI,CAACE,CAAC,GAAGJ;IAAO,CAAC;EACnD,CAAC,CAAC;AACJ,CAAC;AAED;;;;;;;AAOA,MAAaK,gBAEX,SAAQjB,kBAAA,CAAAkB,aAA0B;EAIlCC,YACEC,OAAyB,EACzBC,YAA2C,EAC3CC,KAAY;IAEZ,KAAK,CAAC,IAAIhB,aAAA,CAAAiB,WAAW,CAACH,OAAO,EAAEC,YAAY,CAAC,CAAC;;IAR/CG,uBAAA,CAAAC,GAAA;IASEC,sBAAA,KAAI,EAAAF,uBAAA,EAAUF,KAAK;EACrB;EAEA;;;EAGSK,gBAAgBA,CAAA;IACvB,OAAO,IAAI,CAACC,MAAM,CAACD,gBAAgB,EAAE;EACvC;EAEA;;;EAGA,IAAaE,MAAMA,CAAA;IACjB,OAAO,IAAI,CAACD,MAAM,CAACC,MAAM;EAC3B;EAESR,YAAYA,CAAA;IACnB,OAAO,IAAI,CAACO,MAAM,CAACP,YAAY,EAAE;EACnC;EAUA,IAAaC,KAAKA,CAAA;IAChB,OAAOQ,sBAAA,KAAI,EAAAN,uBAAA,MAAO;EACpB;EAES,MAAMO,CAACA,CACdC,QAAkB;IAElB,MAAM;MAACC,eAAe;MAAEC;IAAY,CAAC,GACnC,IAAA9B,oBAAA,CAAA+B,0BAA0B,EAACH,QAAQ,CAAC;IACtC,OAAQ,MAAME,YAAY,CAACE,QAAQ,CACjC,IAAI,EACJH,eAAe,CAChB;EACH;EAES,MAAMI,EAAEA,CACfL,QAAkB;IAElB,MAAM;MAACC,eAAe;MAAEC;IAAY,CAAC,GACnC,IAAA9B,oBAAA,CAAA+B,0BAA0B,EAACH,QAAQ,CAAC;IACtC,OAAO7B,sBAAA,CAAAmC,iBAAiB,CAACC,OAAO,CAC9BL,YAAY,CAACM,QAAQ,CAAC,IAAI,EAAEP,eAAe,CAAC,CACU;EAC1D;EAES,MAAMQ,KAAKA,CAQlBT,QAAkB,EAClBU,YAA2B,EAC3B,GAAGC,IAAY;IAEf,MAAMC,aAAa,GAAG,MAAM,IAAI,CAACb,CAAC,CAACC,QAAQ,CAAC;IAC5C,IAAI,CAACY,aAAa,EAAE;MAClB,MAAM,IAAIC,KAAK,CACb,oDAAoDb,QAAQ,GAAG,CAChE;;IAEH,MAAMc,MAAM,GAAG,MAAMF,aAAa,CAACG,QAAQ,CAACL,YAAY,EAAE,GAAGC,IAAI,CAAC;IAClE,MAAMC,aAAa,CAACI,OAAO,EAAE;IAC7B,OAAOF,MAAM;EACf;EAES,MAAMG,MAAMA,CAQnBjB,QAAkB,EAClBU,YAA2B,EAC3B,GAAGC,IAAY;IAEf,MAAMO,OAAO,GAAG,MAAM,IAAI,CAACb,EAAE,CAACL,QAAQ,CAAC;IACvC,MAAMmB,QAAQ,GAAG,MAAM,IAAI,CAACC,cAAc,CAAC,CAACC,CAAC,EAAE,GAAGF,QAAQ,KAAI;MAC5D,OAAOA,QAAQ;IACjB,CAAC,EAAE,GAAGD,OAAO,CAAC;IACd,MAAM,CAACJ,MAAM,CAAC,GAAG,MAAMQ,OAAO,CAACC,GAAG,CAAC,CACjCJ,QAAQ,CAACJ,QAAQ,CAACL,YAAY,EAAE,GAAGC,IAAI,CAAC,EACxC,GAAGO,OAAO,CAACrC,GAAG,CAACqC,OAAO,IAAG;MACvB,OAAOA,OAAO,CAACF,OAAO,EAAE;IAC1B,CAAC,CAAC,CACH,CAAC;IACF,MAAMG,QAAQ,CAACH,OAAO,EAAE;IACxB,OAAOF,MAAM;EACf;EAES,MAAMU,EAAEA,CACfC,UAAkB;IAElB,IAAIA,UAAU,CAACC,UAAU,CAAC,IAAI,CAAC,EAAE;MAC/BD,UAAU,GAAG,IAAIA,UAAU,EAAE;;IAE/B,OAAO,IAAI,CAACpB,EAAE,CAAC,SAASoB,UAAU,EAAE,CAAC;EACvC;EAES,MAAME,eAAeA,CAC5B3B,QAAkB,EAClB4B,OAAA,GAAkC,EAAE;IAEpC,MAAM;MAAC3B,eAAe;MAAEC;IAAY,CAAC,GACnC,IAAA9B,oBAAA,CAAA+B,0BAA0B,EAACH,QAAQ,CAAC;IACtC,OAAQ,MAAME,YAAY,CAAC2B,OAAO,CAChC,IAAI,EACJ5B,eAAe,EACf2B,OAAO,CACR;EACH;EAES,MAAME,YAAYA,CACzBC,KAAa,EACbH,OAAA,GAII,EAAE;IAEN,IAAIG,KAAK,CAACL,UAAU,CAAC,IAAI,CAAC,EAAE;MAC1BK,KAAK,GAAG,IAAIA,KAAK,EAAE;;IAErB,OAAO,IAAI,CAACJ,eAAe,CAAC,SAASI,KAAK,EAAE,EAAEH,OAAO,CAAC;EACxD;EAoBS,MAAMI,SAASA,CAAA;IACtB,OAAOlC,sBAAA,KAAI,EAAAmC,2BAAA,OAAAC,iCAAA,CAAiB,CAAAC,IAAA,CAArB,IAAI,EAAkB,IAAI,CAAC;EACpC;EAES,MAAMC,QAAQA,CAAA;IACrB,OAAOtC,sBAAA,KAAI,EAAAmC,2BAAA,OAAAC,iCAAA,CAAiB,CAAAC,IAAA,CAArB,IAAI,EAAkB,KAAK,CAAC;EACrC;EAES,MAAME,SAASA,CAEtBC,OAAU;IACV,MAAMC,iBAAiB,GAAG,MAAM,IAAI,CAACxB,QAAQ,CAAC,CAACyB,IAAI,EAAEF,OAAO,KAAI;MAC9D,OAAOE,IAAI,CAACC,QAAQ,KAAKH,OAAO,CAACI,WAAW,EAAE;IAChD,CAAC,EAAEJ,OAAO,CAAC;IACX,IAAI,CAACC,iBAAiB,EAAE;MACtB,MAAM,IAAI1B,KAAK,CAAC,yBAAyByB,OAAO,YAAY,CAAC;;IAE/D,OAAO,IAA2C;EACpD;EAES,MAAMK,YAAYA,CAAA;IACzB,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAAC/C,MAAM,CAACgD,IAAI,CAAC,kBAAkB,EAAE;MAC1DC,QAAQ,EAAE,IAAI,CAACzD,YAAY,EAAE,CAACyD;KAC/B,CAAC;IACF,IAAI,OAAOF,QAAQ,CAACJ,IAAI,CAACO,OAAO,KAAK,QAAQ,EAAE;MAC7C,OAAO,IAAI;;IAEb,OAAOjD,sBAAA,KAAI,EAAAmC,2BAAA,OAAAe,kCAAA,CAAc,CAAC1D,KAAK,CAACsD,QAAQ,CAACJ,IAAI,CAACO,OAAO,CAAC;EACxD;EAES,MAAME,cAAcA,CAAA;IAG3B,MAAM,IAAI,CAACC,sBAAsB,EAAE;IAEnC,IAAI;MACF,MAAM,IAAI,CAACrD,MAAM,CAACgD,IAAI,CAAC,4BAA4B,EAAE;QACnDC,QAAQ,EAAE,IAAI,CAACzD,YAAY,EAAE,CAACyD;OAC/B,CAAC;KACH,CAAC,OAAOK,KAAK,EAAE;MACd,IAAA3E,SAAA,CAAA4E,UAAU,EAACD,KAAK,CAAC;MACjB;MACA,MAAM,IAAI,CAACpC,QAAQ,CAAC,MAAOsC,OAAO,IAAmB;QACnDA,OAAO,CAACJ,cAAc,CAAC;UACrBK,KAAK,EAAE,QAAQ;UACfC,MAAM,EAAE,QAAQ;UAChB;UACA;UACA;UACAC,QAAQ,EAAE;SACX,CAAC;MACJ,CAAC,CAAC;;EAEN;EA6CS,MAAMC,cAAcA,CAACC,MAAe;IAC3C,MAAM,CAAC5C,MAAM,EAAE6C,aAAa,CAAC,GAAG,MAAMrC,OAAO,CAACC,GAAG,CAAC,CAChD,IAAI,CAAC1B,MAAM,CACRgD,IAAI,CAAC,qBAAqB,EAAE;MAC3BC,QAAQ,EAAE,IAAI,CAACzD,YAAY,EAAE,CAACyD;KAC/B,CAAC,CACDc,KAAK,CAACpF,SAAA,CAAA4E,UAAU,CAAC,EACnBtD,sBAAA,KAAI,EAAAmC,2BAAA,OAAA4B,0BAAA,CAAkB,CAACC,OAAO,EAAE,CAACjB,IAAI,CAAC,uBAAuB,CAAC,CAChE,CAAC;IACF,IAAI,CAAC/B,MAAM,IAAI,CAACA,MAAM,CAACiD,KAAK,CAACC,MAAM,EAAE;MACnC,MAAM,IAAInD,KAAK,CAAC,oDAAoD,CAAC;;IAEvE;IACA;IACA,MAAM;MAACoD,WAAW;MAAEC;IAAY,CAAC,GAC/BP,aAAa,CAACQ,iBAAiB,IAAIR,aAAa,CAACS,cAAc;IACjE,MAAM;MAACzF,OAAO;MAAEC;IAAO,CAAC,GAAG,MAAMkB,sBAAA,KAAI,EAAAmC,2BAAA,OAAAoC,iCAAA,CAAiB,CAAAlC,IAAA,CAArB,IAAI,EAAkBrC,sBAAA,KAAI,EAAAN,uBAAA,MAAO,CAAC;IACnE,MAAMuE,KAAK,GAAGjD,MAAM,CAACiD,KAAK,CACvBlF,GAAG,CAACH,IAAI,IAAG;MACV,OAAOoB,sBAAA,KAAI,EAAAmC,2BAAA,OAAAqC,kCAAA,CAAkB,CAAAnC,IAAA,CAAtB,IAAI,EAAmBzD,IAAI,CAAC;IACrC,CAAC,CAAC,CACDG,GAAG,CAACH,IAAI,IAAG;MACV,OAAOD,kBAAkB,CAACC,IAAI,EAAEC,OAAO,EAAEC,OAAO,CAAC;IACnD,CAAC,CAAC,CACDC,GAAG,CAACH,IAAI,IAAG;MACV,OAAOoB,sBAAA,KAAI,EAAAmC,2BAAA,OAAAsC,2CAAA,CAA2B,CAAApC,IAAA,CAA/B,IAAI,EAA4BzD,IAAI,EAAEuF,WAAW,EAAEC,YAAY,CAAC;IACzE,CAAC,CAAC,CACDM,MAAM,CAAC9F,IAAI,IAAG;MACb,OAAO+F,eAAe,CAAC/F,IAAI,CAAC,GAAG,CAAC;IAClC,CAAC,CAAC;IACJ,IAAI,CAACqF,KAAK,CAACC,MAAM,EAAE;MACjB,MAAM,IAAInD,KAAK,CAAC,oDAAoD,CAAC;;IAEvE,MAAMnC,IAAI,GAAGqF,KAAK,CAAC,CAAC,CAAE;IACtB,IAAIL,MAAM,EAAE;MACV;MACA,IAAIgB,IAAI,GAAGC,MAAM,CAACC,gBAAgB;MAClC,IAAIC,IAAI,GAAGF,MAAM,CAACC,gBAAgB;MAClC,KAAK,MAAME,KAAK,IAAIpG,IAAI,EAAE;QACxB,IAAIoG,KAAK,CAAC/F,CAAC,GAAG2F,IAAI,EAAE;UAClBA,IAAI,GAAGI,KAAK,CAAC/F,CAAC;;QAEhB,IAAI+F,KAAK,CAAC9F,CAAC,GAAG6F,IAAI,EAAE;UAClBA,IAAI,GAAGC,KAAK,CAAC9F,CAAC;;;MAGlB,IACE0F,IAAI,KAAKC,MAAM,CAACC,gBAAgB,IAChCC,IAAI,KAAKF,MAAM,CAACC,gBAAgB,EAChC;QACA,OAAO;UACL7F,CAAC,EAAE2F,IAAI,GAAGhB,MAAM,CAAC3E,CAAC;UAClBC,CAAC,EAAE6F,IAAI,GAAGnB,MAAM,CAAC1E;SAClB;;;IAGL;IACA,IAAID,CAAC,GAAG,CAAC;IACT,IAAIC,CAAC,GAAG,CAAC;IACT,KAAK,MAAM8F,KAAK,IAAIpG,IAAI,EAAE;MACxBK,CAAC,IAAI+F,KAAK,CAAC/F,CAAC;MACZC,CAAC,IAAI8F,KAAK,CAAC9F,CAAC;;IAEd,OAAO;MACLD,CAAC,EAAEA,CAAC,GAAG,CAAC;MACRC,CAAC,EAAEA,CAAC,GAAG;KACR;EACH;EAiCA;;;;;EAKS,MAAM+F,KAAKA,CAAA;IAClB,MAAMjF,sBAAA,KAAI,EAAAmC,2BAAA,OAAA+C,wCAAA,CAAwB,CAAA7C,IAAA,CAA5B,IAAI,CAA0B;IACpC,MAAM;MAACpD,CAAC;MAAEC;IAAC,CAAC,GAAG,MAAM,IAAI,CAACyE,cAAc,EAAE;IAC1C,MAAM3D,sBAAA,KAAI,EAAAmC,2BAAA,OAAA4B,0BAAA,CAAM,CAACoB,KAAK,CAACC,IAAI,CAACnG,CAAC,EAAEC,CAAC,CAAC;EACnC;EAEA;;;;;EAKS,MAAMmG,KAAKA,CAElBvD,OAAA,GAAkC,EAAE;IAEpC,MAAM9B,sBAAA,KAAI,EAAAmC,2BAAA,OAAA+C,wCAAA,CAAwB,CAAA7C,IAAA,CAA5B,IAAI,CAA0B;IACpC,MAAM;MAACpD,CAAC;MAAEC;IAAC,CAAC,GAAG,MAAM,IAAI,CAACyE,cAAc,CAAC7B,OAAO,CAAC8B,MAAM,CAAC;IACxD,MAAM5D,sBAAA,KAAI,EAAAmC,2BAAA,OAAA4B,0BAAA,CAAM,CAACoB,KAAK,CAACE,KAAK,CAACpG,CAAC,EAAEC,CAAC,EAAE4C,OAAO,CAAC;EAC7C;EAEA;;;EAGS,MAAMwD,IAAIA,CAEjBC,MAAa;IAEb,IAAAnH,WAAA,CAAAoH,MAAM,EACJxF,sBAAA,KAAI,EAAAmC,2BAAA,OAAA4B,0BAAA,CAAM,CAAC0B,yBAAyB,EAAE,EACtC,mCAAmC,CACpC;IACD,MAAMzF,sBAAA,KAAI,EAAAmC,2BAAA,OAAA+C,wCAAA,CAAwB,CAAA7C,IAAA,CAA5B,IAAI,CAA0B;IACpC,MAAMqD,KAAK,GAAG,MAAM,IAAI,CAAC/B,cAAc,EAAE;IACzC,OAAO,MAAM3D,sBAAA,KAAI,EAAAmC,2BAAA,OAAA4B,0BAAA,CAAM,CAACoB,KAAK,CAACG,IAAI,CAACI,KAAK,EAAEH,MAAM,CAAC;EACnD;EAES,MAAMI,SAASA,CAEtBC,IAAA,GAAgC;IAACC,KAAK,EAAE,EAAE;IAAEC,kBAAkB,EAAE;EAAC,CAAC;IAElE,MAAM9F,sBAAA,KAAI,EAAAmC,2BAAA,OAAA+C,wCAAA,CAAwB,CAAA7C,IAAA,CAA5B,IAAI,CAA0B;IACpC,MAAMkD,MAAM,GAAG,MAAM,IAAI,CAAC5B,cAAc,EAAE;IAC1C,MAAM3D,sBAAA,KAAI,EAAAmC,2BAAA,OAAA4B,0BAAA,CAAM,CAACoB,KAAK,CAACQ,SAAS,CAACJ,MAAM,EAAEK,IAAI,CAAC;EAChD;EAES,MAAMG,QAAQA,CAErBH,IAAA,GAAgC;IAACC,KAAK,EAAE,EAAE;IAAEC,kBAAkB,EAAE;EAAC,CAAC;IAElE,MAAM9F,sBAAA,KAAI,EAAAmC,2BAAA,OAAA+C,wCAAA,CAAwB,CAAA7C,IAAA,CAA5B,IAAI,CAA0B;IACpC,MAAMkD,MAAM,GAAG,MAAM,IAAI,CAAC5B,cAAc,EAAE;IAC1C,MAAM3D,sBAAA,KAAI,EAAAmC,2BAAA,OAAA4B,0BAAA,CAAM,CAACoB,KAAK,CAACY,QAAQ,CAACR,MAAM,EAAEK,IAAI,CAAC;EAC/C;EAES,MAAMI,IAAIA,CAEjBJ,IAAA,GAAgC;IAACC,KAAK,EAAE,EAAE;IAAEC,kBAAkB,EAAE;EAAC,CAAC;IAElE,MAAM9F,sBAAA,KAAI,EAAAmC,2BAAA,OAAA+C,wCAAA,CAAwB,CAAA7C,IAAA,CAA5B,IAAI,CAA0B;IACpC,MAAM4D,WAAW,GAAG,MAAM,IAAI,CAACtC,cAAc,EAAE;IAC/C,MAAM3D,sBAAA,KAAI,EAAAmC,2BAAA,OAAA4B,0BAAA,CAAM,CAACoB,KAAK,CAACa,IAAI,CAACC,WAAW,EAAEL,IAAI,CAAC;EAChD;EAES,MAAMM,WAAWA,CAExBX,MAA8B,EAC9BzD,OAAyB;IAEzB,MAAM9B,sBAAA,KAAI,EAAAmC,2BAAA,OAAA+C,wCAAA,CAAwB,CAAA7C,IAAA,CAA5B,IAAI,CAA0B;IACpC,MAAM8D,UAAU,GAAG,MAAM,IAAI,CAACxC,cAAc,EAAE;IAC9C,MAAMyC,WAAW,GAAG,MAAMb,MAAM,CAAC5B,cAAc,EAAE;IACjD,MAAM3D,sBAAA,KAAI,EAAAmC,2BAAA,OAAA4B,0BAAA,CAAM,CAACoB,KAAK,CAACe,WAAW,CAACC,UAAU,EAAEC,WAAW,EAAEtE,OAAO,CAAC;EACtE;EAES,MAAMuE,MAAMA,CAAC,GAAGC,MAAgB;IACvC,KAAK,MAAMC,KAAK,IAAID,MAAM,EAAE;MAC1B,IAAAlI,WAAA,CAAAoH,MAAM,EACJ,IAAA9G,SAAA,CAAA8H,QAAQ,EAACD,KAAK,CAAC,EACf,uCAAuC,GACrCA,KAAK,GACL,aAAa,GACb,OAAOA,KAAK,GACZ,GAAG,CACN;;IAGH,OAAO,IAAI,CAACtF,QAAQ,CAAC,CAACsC,OAAO,EAAEkD,IAAI,KAAc;MAC/C,MAAMH,MAAM,GAAG,IAAII,GAAG,CAACD,IAAI,CAAC;MAC5B,IAAI,EAAElD,OAAO,YAAYoD,iBAAiB,CAAC,EAAE;QAC3C,MAAM,IAAI5F,KAAK,CAAC,oCAAoC,CAAC;;MAGvD,MAAM6F,cAAc,GAAG,IAAIF,GAAG,EAAU;MACxC,IAAI,CAACnD,OAAO,CAACsD,QAAQ,EAAE;QACrB,KAAK,MAAMC,MAAM,IAAIvD,OAAO,CAACzB,OAAO,EAAE;UACpCgF,MAAM,CAACC,QAAQ,GAAG,KAAK;;QAEzB,KAAK,MAAMD,MAAM,IAAIvD,OAAO,CAACzB,OAAO,EAAE;UACpC,IAAIwE,MAAM,CAACU,GAAG,CAACF,MAAM,CAACP,KAAK,CAAC,EAAE;YAC5BO,MAAM,CAACC,QAAQ,GAAG,IAAI;YACtBH,cAAc,CAACK,GAAG,CAACH,MAAM,CAACP,KAAK,CAAC;YAChC;;;OAGL,MAAM;QACL,KAAK,MAAMO,MAAM,IAAIvD,OAAO,CAACzB,OAAO,EAAE;UACpCgF,MAAM,CAACC,QAAQ,GAAGT,MAAM,CAACU,GAAG,CAACF,MAAM,CAACP,KAAK,CAAC;UAC1C,IAAIO,MAAM,CAACC,QAAQ,EAAE;YACnBH,cAAc,CAACK,GAAG,CAACH,MAAM,CAACP,KAAK,CAAC;;;;MAItChD,OAAO,CAAC2D,aAAa,CAAC,IAAIC,KAAK,CAAC,OAAO,EAAE;QAACC,OAAO,EAAE;MAAI,CAAC,CAAC,CAAC;MAC1D7D,OAAO,CAAC2D,aAAa,CAAC,IAAIC,KAAK,CAAC,QAAQ,EAAE;QAACC,OAAO,EAAE;MAAI,CAAC,CAAC,CAAC;MAC3D,OAAO,CAAC,GAAGR,cAAc,CAACN,MAAM,EAAE,CAAC;IACrC,CAAC,EAAEA,MAAM,CAAC;EACZ;EAES,MAAMe,UAAUA,CAEvB,GAAGC,SAAmB;IAEtB,MAAMC,UAAU,GAAG,MAAM,IAAI,CAACtG,QAAQ,CAACsC,OAAO,IAAG;MAC/C,OAAOA,OAAO,CAACsD,QAAQ;IACzB,CAAC,CAAC;IACF,IAAAzI,WAAA,CAAAoH,MAAM,EACJ8B,SAAS,CAACpD,MAAM,IAAI,CAAC,IAAIqD,UAAU,EACnC,iEAAiE,CAClE;IAED;IACA,IAAIC,IAA2B;IAC/B,IAAI;MACFA,IAAI,GAAG,MAAAhG,OAAA,CAAAiG,OAAA,GAAAC,IAAA,OAAAC,YAAA,CAAAxJ,OAAA,CAAa,MAAM,GAAC;KAC5B,CAAC,OAAOkF,KAAK,EAAE;MACd,IAAIA,KAAK,YAAYuE,SAAS,EAAE;QAC9B,MAAM,IAAI7G,KAAK,CACb,iEAAiE,CAClE;;MAEH,MAAMsC,KAAK;;IAEb,MAAMwE,KAAK,GAAGP,SAAS,CAACvI,GAAG,CAAC+I,QAAQ,IAAG;MACrC,IAAIN,IAAI,CAACO,KAAK,CAACC,UAAU,CAACF,QAAQ,CAAC,IAAIN,IAAI,CAACS,KAAK,CAACD,UAAU,CAACF,QAAQ,CAAC,EAAE;QACtE,OAAOA,QAAQ;OAChB,MAAM;QACL,OAAON,IAAI,CAACC,OAAO,CAACK,QAAQ,CAAC;;IAEjC,CAAC,CAAC;IACF,MAAM;MAAC9E;IAAQ,CAAC,GAAG,IAAI,CAACzD,YAAY,EAAE;IACtC,MAAM;MAACmD;IAAI,CAAC,GAAG,MAAM,IAAI,CAAC3C,MAAM,CAACgD,IAAI,CAAC,kBAAkB,EAAE;MACxDC;KACD,CAAC;IACF,MAAM;MAACkF;IAAa,CAAC,GAAGxF,IAAI;IAE5B;;;;IAIA,IAAImF,KAAK,CAAC3D,MAAM,KAAK,CAAC,EAAE;MACtB,MAAM,IAAI,CAACjD,QAAQ,CAACsC,OAAO,IAAG;QAC5BA,OAAO,CAACsE,KAAK,GAAG,IAAIM,YAAY,EAAE,CAACN,KAAK;QAExC;QACAtE,OAAO,CAAC2D,aAAa,CAAC,IAAIC,KAAK,CAAC,OAAO,EAAE;UAACC,OAAO,EAAE;QAAI,CAAC,CAAC,CAAC;QAC1D7D,OAAO,CAAC2D,aAAa,CAAC,IAAIC,KAAK,CAAC,QAAQ,EAAE;UAACC,OAAO,EAAE;QAAI,CAAC,CAAC,CAAC;MAC7D,CAAC,CAAC;KACH,MAAM;MACL,MAAM,IAAI,CAACrH,MAAM,CAACgD,IAAI,CAAC,uBAAuB,EAAE;QAC9CC,QAAQ;QACR6E,KAAK;QACLK;OACD,CAAC;;EAEN;EAES,MAAME,GAAGA,CAAA;IAChB,MAAMpI,sBAAA,KAAI,EAAAmC,2BAAA,OAAA+C,wCAAA,CAAwB,CAAA7C,IAAA,CAA5B,IAAI,CAA0B;IACpC,MAAM;MAACpD,CAAC;MAAEC;IAAC,CAAC,GAAG,MAAM,IAAI,CAACyE,cAAc,EAAE;IAC1C,MAAM3D,sBAAA,KAAI,EAAAmC,2BAAA,OAAA4B,0BAAA,CAAM,CAACsE,WAAW,CAACC,UAAU,CAACrJ,CAAC,EAAEC,CAAC,CAAC;IAC7C,MAAMc,sBAAA,KAAI,EAAAmC,2BAAA,OAAA4B,0BAAA,CAAM,CAACsE,WAAW,CAACE,QAAQ,EAAE;EACzC;EAES,MAAMD,UAAUA,CAAA;IACvB,MAAMtI,sBAAA,KAAI,EAAAmC,2BAAA,OAAA+C,wCAAA,CAAwB,CAAA7C,IAAA,CAA5B,IAAI,CAA0B;IACpC,MAAM;MAACpD,CAAC;MAAEC;IAAC,CAAC,GAAG,MAAM,IAAI,CAACyE,cAAc,EAAE;IAC1C,MAAM3D,sBAAA,KAAI,EAAAmC,2BAAA,OAAA4B,0BAAA,CAAM,CAACsE,WAAW,CAACC,UAAU,CAACrJ,CAAC,EAAEC,CAAC,CAAC;EAC/C;EAES,MAAMsJ,SAASA,CAAA;IACtB,MAAMxI,sBAAA,KAAI,EAAAmC,2BAAA,OAAA+C,wCAAA,CAAwB,CAAA7C,IAAA,CAA5B,IAAI,CAA0B;IACpC,MAAM;MAACpD,CAAC;MAAEC;IAAC,CAAC,GAAG,MAAM,IAAI,CAACyE,cAAc,EAAE;IAC1C,MAAM3D,sBAAA,KAAI,EAAAmC,2BAAA,OAAA4B,0BAAA,CAAM,CAACsE,WAAW,CAACG,SAAS,CAACvJ,CAAC,EAAEC,CAAC,CAAC;EAC9C;EAES,MAAMqJ,QAAQA,CAAA;IACrB,MAAMvI,sBAAA,KAAI,EAAAmC,2BAAA,OAAA+C,wCAAA,CAAwB,CAAA7C,IAAA,CAA5B,IAAI,CAA0B;IACpC,MAAMrC,sBAAA,KAAI,EAAAmC,2BAAA,OAAA4B,0BAAA,CAAM,CAACsE,WAAW,CAACE,QAAQ,EAAE;EACzC;EAES,MAAME,KAAKA,CAAA;IAClB,MAAM,IAAI,CAACxH,QAAQ,CAACsC,OAAO,IAAG;MAC5B,IAAI,EAAEA,OAAO,YAAYmF,WAAW,CAAC,EAAE;QACrC,MAAM,IAAI3H,KAAK,CAAC,8BAA8B,CAAC;;MAEjD,OAAOwC,OAAO,CAACkF,KAAK,EAAE;IACxB,CAAC,CAAC;EACJ;EAES,MAAME,IAAIA,CAACC,IAAY,EAAE9G,OAAyB;IACzD,MAAM,IAAI,CAAC2G,KAAK,EAAE;IAClB,MAAMzI,sBAAA,KAAI,EAAAmC,2BAAA,OAAA4B,0BAAA,CAAM,CAAC8E,QAAQ,CAACF,IAAI,CAACC,IAAI,EAAE9G,OAAO,CAAC;EAC/C;EAES,MAAMgH,KAAKA,CAACC,GAAa,EAAEjH,OAAsB;IACxD,MAAM,IAAI,CAAC2G,KAAK,EAAE;IAClB,MAAMzI,sBAAA,KAAI,EAAAmC,2BAAA,OAAA4B,0BAAA,CAAM,CAAC8E,QAAQ,CAACC,KAAK,CAACC,GAAG,EAAEjH,OAAO,CAAC;EAC/C;EAES,MAAMkH,WAAWA,CAAA;IACxB,MAAMhI,MAAM,GAAG,MAAMhB,sBAAA,KAAI,EAAAmC,2BAAA,OAAA8G,6BAAA,CAAa,CAAA5G,IAAA,CAAjB,IAAI,CAAe;IAExC,IAAI,CAACrB,MAAM,EAAE;MACX,OAAO,IAAI;;IAGb,MAAM;MAACnC,OAAO;MAAEC;IAAO,CAAC,GAAG,MAAMkB,sBAAA,KAAI,EAAAmC,2BAAA,OAAAoC,iCAAA,CAAiB,CAAAlC,IAAA,CAArB,IAAI,EAAkBrC,sBAAA,KAAI,EAAAN,uBAAA,MAAO,CAAC;IACnE,MAAMd,IAAI,GAAGoC,MAAM,CAACkI,KAAK,CAACC,MAAM;IAChC,MAAMlK,CAAC,GAAGmK,IAAI,CAACC,GAAG,CAACzK,IAAI,CAAC,CAAC,CAAE,EAAEA,IAAI,CAAC,CAAC,CAAE,EAAEA,IAAI,CAAC,CAAC,CAAE,EAAEA,IAAI,CAAC,CAAC,CAAE,CAAC;IAC1D,MAAMM,CAAC,GAAGkK,IAAI,CAACC,GAAG,CAACzK,IAAI,CAAC,CAAC,CAAE,EAAEA,IAAI,CAAC,CAAC,CAAE,EAAEA,IAAI,CAAC,CAAC,CAAE,EAAEA,IAAI,CAAC,CAAC,CAAE,CAAC;IAC1D,MAAM0K,KAAK,GAAGF,IAAI,CAACG,GAAG,CAAC3K,IAAI,CAAC,CAAC,CAAE,EAAEA,IAAI,CAAC,CAAC,CAAE,EAAEA,IAAI,CAAC,CAAC,CAAE,EAAEA,IAAI,CAAC,CAAC,CAAE,CAAC,GAAGK,CAAC;IAClE,MAAMuK,MAAM,GAAGJ,IAAI,CAACG,GAAG,CAAC3K,IAAI,CAAC,CAAC,CAAE,EAAEA,IAAI,CAAC,CAAC,CAAE,EAAEA,IAAI,CAAC,CAAC,CAAE,EAAEA,IAAI,CAAC,CAAC,CAAE,CAAC,GAAGM,CAAC;IAEnE,OAAO;MAACD,CAAC,EAAEA,CAAC,GAAGJ,OAAO;MAAEK,CAAC,EAAEA,CAAC,GAAGJ,OAAO;MAAEwK,KAAK;MAAEE;IAAM,CAAC;EACxD;EAES,MAAMC,QAAQA,CAAA;IACrB,MAAMzI,MAAM,GAAG,MAAMhB,sBAAA,KAAI,EAAAmC,2BAAA,OAAA8G,6BAAA,CAAa,CAAA5G,IAAA,CAAjB,IAAI,CAAe;IAExC,IAAI,CAACrB,MAAM,EAAE;MACX,OAAO,IAAI;;IAGb,MAAM;MAACnC,OAAO;MAAEC;IAAO,CAAC,GAAG,MAAMkB,sBAAA,KAAI,EAAAmC,2BAAA,OAAAoC,iCAAA,CAAiB,CAAAlC,IAAA,CAArB,IAAI,EAAkBrC,sBAAA,KAAI,EAAAN,uBAAA,MAAO,CAAC;IAEnE,MAAM;MAACgK,OAAO;MAAEC,OAAO;MAAER,MAAM;MAAES,MAAM;MAAEN,KAAK;MAAEE;IAAM,CAAC,GAAGxI,MAAM,CAACkI,KAAK;IACtE,OAAO;MACLQ,OAAO,EAAE/K,kBAAkB,CACzBqB,sBAAA,KAAI,EAAAmC,2BAAA,OAAAqC,kCAAA,CAAkB,CAAAnC,IAAA,CAAtB,IAAI,EAAmBqH,OAAO,CAAC,EAC/B7K,OAAO,EACPC,OAAO,CACR;MACD6K,OAAO,EAAEhL,kBAAkB,CACzBqB,sBAAA,KAAI,EAAAmC,2BAAA,OAAAqC,kCAAA,CAAkB,CAAAnC,IAAA,CAAtB,IAAI,EAAmBsH,OAAO,CAAC,EAC/B9K,OAAO,EACPC,OAAO,CACR;MACDqK,MAAM,EAAExK,kBAAkB,CACxBqB,sBAAA,KAAI,EAAAmC,2BAAA,OAAAqC,kCAAA,CAAkB,CAAAnC,IAAA,CAAtB,IAAI,EAAmB8G,MAAM,CAAC,EAC9BtK,OAAO,EACPC,OAAO,CACR;MACD8K,MAAM,EAAEjL,kBAAkB,CACxBqB,sBAAA,KAAI,EAAAmC,2BAAA,OAAAqC,kCAAA,CAAkB,CAAAnC,IAAA,CAAtB,IAAI,EAAmBuH,MAAM,CAAC,EAC9B/K,OAAO,EACPC,OAAO,CACR;MACDwK,KAAK;MACLE;KACD;EACH;EAES,MAAMK,UAAUA,CAEvB/H,OAAA,GAA6B,EAAE;IAE/B,IAAIgI,kBAAkB,GAAG,KAAK;IAE9B,IAAId,WAAW,GAAG,MAAM,IAAI,CAACA,WAAW,EAAE;IAC1C,IAAA5K,WAAA,CAAAoH,MAAM,EAACwD,WAAW,EAAE,kDAAkD,CAAC;IAEvE,MAAMe,QAAQ,GAAG/J,sBAAA,KAAI,EAAAmC,2BAAA,OAAA4B,0BAAA,CAAM,CAACgG,QAAQ,EAAE;IAEtC,IACEA,QAAQ,KACPf,WAAW,CAACM,KAAK,GAAGS,QAAQ,CAACT,KAAK,IACjCN,WAAW,CAACQ,MAAM,GAAGO,QAAQ,CAACP,MAAM,CAAC,EACvC;MACA,MAAMQ,WAAW,GAAG;QAClBV,KAAK,EAAEF,IAAI,CAACG,GAAG,CAACQ,QAAQ,CAACT,KAAK,EAAEF,IAAI,CAACa,IAAI,CAACjB,WAAW,CAACM,KAAK,CAAC,CAAC;QAC7DE,MAAM,EAAEJ,IAAI,CAACG,GAAG,CAACQ,QAAQ,CAACP,MAAM,EAAEJ,IAAI,CAACa,IAAI,CAACjB,WAAW,CAACQ,MAAM,CAAC;OAChE;MACD,MAAMxJ,sBAAA,KAAI,EAAAmC,2BAAA,OAAA4B,0BAAA,CAAM,CAACmG,WAAW,CAACC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEL,QAAQ,EAAEC,WAAW,CAAC,CAAC;MAEtEF,kBAAkB,GAAG,IAAI;;IAG3B,MAAM9J,sBAAA,KAAI,EAAAmC,2BAAA,OAAA+C,wCAAA,CAAwB,CAAA7C,IAAA,CAA5B,IAAI,CAA0B;IAEpC2G,WAAW,GAAG,MAAM,IAAI,CAACA,WAAW,EAAE;IACtC,IAAA5K,WAAA,CAAAoH,MAAM,EAACwD,WAAW,EAAE,kDAAkD,CAAC;IACvE,IAAA5K,WAAA,CAAAoH,MAAM,EAACwD,WAAW,CAACM,KAAK,KAAK,CAAC,EAAE,mBAAmB,CAAC;IACpD,IAAAlL,WAAA,CAAAoH,MAAM,EAACwD,WAAW,CAACQ,MAAM,KAAK,CAAC,EAAE,oBAAoB,CAAC;IAEtD,MAAM3F,aAAa,GAAG,MAAM,IAAI,CAAC9D,MAAM,CAACgD,IAAI,CAAC,uBAAuB,CAAC;IACrE;IACA,MAAM;MAACsH,KAAK;MAAEC;IAAK,CAAC,GAClBzG,aAAa,CAAC0G,iBAAiB,IAAI1G,aAAa,CAACS,cAAc;IAEjE,MAAMkG,IAAI,GAAGL,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEpB,WAAW,CAAC;IAC3CwB,IAAI,CAACvL,CAAC,IAAIoL,KAAK;IACfG,IAAI,CAACtL,CAAC,IAAIoL,KAAK;IAEf,MAAMG,SAAS,GAAG,MAAMzK,sBAAA,KAAI,EAAAmC,2BAAA,OAAA4B,0BAAA,CAAM,CAAC8F,UAAU,CAC3CM,MAAM,CAACC,MAAM,CACX,EAAE,EACF;MACEI;KACD,EACD1I,OAAO,CACR,CACF;IAED,IAAIgI,kBAAkB,IAAIC,QAAQ,EAAE;MAClC,MAAM/J,sBAAA,KAAI,EAAAmC,2BAAA,OAAA4B,0BAAA,CAAM,CAACmG,WAAW,CAACH,QAAQ,CAAC;;IAGxC,OAAOU,SAAS;EAClB;;AA5rBFC,OAAA,CAAAvL,gBAAA,GAAAA,gBAAA;;EAkCI,OAAOa,sBAAA,KAAI,EAAAN,uBAAA,MAAO,CAACiL,aAAa;AAClC,CAAC,EAAA5G,0BAAA,YAAAA,2BAAA;EAGC,OAAO/D,sBAAA,KAAI,EAAAN,uBAAA,MAAO,CAACkL,IAAI,EAAE;AAC3B,CAAC,EAAAxI,iCAAA,GAgHD,eAAKA,kCAAkByI,UAAmB;EACxC,MAAMtH,OAAO,GAAG,MAAM,IAAI,CAAC/D,KAAK,CAACsL,MAAM,CAACvM,mBAAA,CAAAwM,eAAe,CAAC,CAACC,WAAW,CAAC,IAAI,CAAC;EAC1E,IAAI;IACF,OAAO,MAAM,IAAI,CAACxL,KAAK,CAACsL,MAAM,CAACvM,mBAAA,CAAAwM,eAAe,CAAC,CAAC9J,QAAQ,CACtD,OAAOgK,aAAa,EAAE1H,OAAO,EAAEsH,UAAU,KAAI;MAC3C,OAAOK,OAAO,CAACD,aAAa,CAACE,eAAe,CAAC5H,OAAO,EAAEsH,UAAU,CAAC,CAAC;IACpE,CAAC,EACDpM,YAAA,CAAA2M,OAAO,CAACC,MAAM,CAAC/L,OAAO,IAAG;MACvB,OAAOA,OAAO,CAACgM,aAAa;IAC9B,CAAC,CAAC,EACF/H,OAAO,EACPsH,UAAU,CACX;GACF,SAAS;IACR,MAAMtH,OAAO,CAACrC,OAAO,EAAE;;AAE3B,CAAC,EAAAgE,wCAAA,GAyDD,eAAKA,yCAAA;EAGH,IACE,MAAM,IAAI,CAACqG,sBAAsB,CAAC;IAChCC,SAAS,EAAE;GACZ,CAAC,EACF;IACA;;EAEF,MAAM,IAAI,CAACrI,cAAc,EAAE;AAC7B,CAAC,EAAAoB,iCAAA,GAED,eAAKA,kCACH/E,KAAY;EAEZ,IAAIX,OAAO,GAAG,CAAC;EACf,IAAIC,OAAO,GAAG,CAAC;EACf,IAAI2M,YAAY,GAAiBjM,KAAK;EACtC,OAAOiM,YAAY,IAAIA,YAAY,CAACC,WAAW,EAAE,EAAE;IACjD,MAAMC,MAAM,GAAGF,YAAY,CAACC,WAAW,EAAE;IACzC,IAAI,CAACD,YAAY,CAACG,UAAU,EAAE,IAAI,CAACD,MAAM,EAAE;MACzCF,YAAY,GAAGE,MAAM;MACrB;;IAEF,MAAM;MAACzD;IAAa,CAAC,GAAG,MAAMyD,MAAM,CAAC3H,OAAO,EAAE,CAACjB,IAAI,CAAC,mBAAmB,EAAE;MACvEE,OAAO,EAAEwI,YAAY,CAACI;KACvB,CAAC;IACF,MAAM7K,MAAM,GAAG,MAAM2K,MAAM,CAAC3H,OAAO,EAAE,CAACjB,IAAI,CAAC,iBAAiB,EAAE;MAC5DmF,aAAa,EAAEA;KAChB,CAAC;IACF,IAAI,CAAClH,MAAM,EAAE;MACX;;IAEF,MAAM8K,cAAc,GAAG9K,MAAM,CAACkI,KAAK,CAACQ,OAAO;IAC3C,MAAMqC,aAAa,GAAG/L,sBAAA,KAAI,EAAAmC,2BAAA,OAAAqC,kCAAA,CAAkB,CAAAnC,IAAA,CAAtB,IAAI,EAAmByJ,cAAc,CAAC,CAAC,CAAC,CAAC;IAC/DjN,OAAO,IAAIkN,aAAc,CAAC9M,CAAC;IAC3BH,OAAO,IAAIiN,aAAc,CAAC7M,CAAC;IAC3BuM,YAAY,GAAGE,MAAM;;EAEvB,OAAO;IAAC9M,OAAO;IAAEC;EAAO,CAAC;AAC3B,CAAC,EAAAmK,6BAAA,YAAAA,8BAAA;EAwEC,MAAM+C,MAAM,GAAoC;IAC9ChJ,QAAQ,EAAE,IAAI,CAACiJ;GAChB;EACD,OAAO,IAAI,CAAClM,MAAM,CAACgD,IAAI,CAAC,iBAAiB,EAAEiJ,MAAM,CAAC,CAAClI,KAAK,CAACT,KAAK,IAAG;IAC/D,OAAO,IAAA3E,SAAA,CAAA4E,UAAU,EAACD,KAAK,CAAC;EAC1B,CAAC,CAAC;AACJ,CAAC,EAAAmB,kCAAA,YAAAA,mCAEiB5F,IAAc;EAC9B,OAAO,CACL;IAACK,CAAC,EAAEL,IAAI,CAAC,CAAC,CAAE;IAAEM,CAAC,EAAEN,IAAI,CAAC,CAAC;EAAE,CAAC,EAC1B;IAACK,CAAC,EAAEL,IAAI,CAAC,CAAC,CAAE;IAAEM,CAAC,EAAEN,IAAI,CAAC,CAAC;EAAE,CAAC,EAC1B;IAACK,CAAC,EAAEL,IAAI,CAAC,CAAC,CAAE;IAAEM,CAAC,EAAEN,IAAI,CAAC,CAAC;EAAE,CAAC,EAC1B;IAACK,CAAC,EAAEL,IAAI,CAAC,CAAC,CAAE;IAAEM,CAAC,EAAEN,IAAI,CAAC,CAAC;EAAE,CAAC,CAC3B;AACH,CAAC,EAAA6F,2CAAA,YAAAA,4CAGC7F,IAAa,EACb0K,KAAa,EACbE,MAAc;EAEd,OAAO5K,IAAI,CAACG,GAAG,CAACiG,KAAK,IAAG;IACtB,OAAO;MACL/F,CAAC,EAAEmK,IAAI,CAACC,GAAG,CAACD,IAAI,CAACG,GAAG,CAACvE,KAAK,CAAC/F,CAAC,EAAE,CAAC,CAAC,EAAEqK,KAAK,CAAC;MACxCpK,CAAC,EAAEkK,IAAI,CAACC,GAAG,CAACD,IAAI,CAACG,GAAG,CAACvE,KAAK,CAAC9F,CAAC,EAAE,CAAC,CAAC,EAAEsK,MAAM;KACzC;EACH,CAAC,CAAC;AACJ,CAAC;AAkVH,SAAS7E,eAAeA,CAAC/F,IAAa;EACpC;;;EAGA,IAAIsN,IAAI,GAAG,CAAC;EACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvN,IAAI,CAACsF,MAAM,EAAE,EAAEiI,CAAC,EAAE;IACpC,MAAMC,EAAE,GAAGxN,IAAI,CAACuN,CAAC,CAAE;IACnB,MAAME,EAAE,GAAGzN,IAAI,CAAC,CAACuN,CAAC,GAAG,CAAC,IAAIvN,IAAI,CAACsF,MAAM,CAAE;IACvCgI,IAAI,IAAI,CAACE,EAAE,CAACnN,CAAC,GAAGoN,EAAE,CAACnN,CAAC,GAAGmN,EAAE,CAACpN,CAAC,GAAGmN,EAAE,CAAClN,CAAC,IAAI,CAAC;;EAEzC,OAAOkK,IAAI,CAACkD,GAAG,CAACJ,IAAI,CAAC;AACvB"},"metadata":{},"sourceType":"script","externalDependencies":[]}