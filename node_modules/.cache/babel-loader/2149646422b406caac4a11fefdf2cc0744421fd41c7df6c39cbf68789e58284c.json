{"ast":null,"code":"/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport path from 'path';\nimport { httpRequest } from '../httpUtil.js';\nimport { BrowserPlatform } from './types.js';\nexport { resolveSystemExecutablePath } from './chrome.js';\nfunction archive(platform, buildId) {\n  switch (platform) {\n    case BrowserPlatform.LINUX:\n      return 'chrome-linux';\n    case BrowserPlatform.MAC_ARM:\n    case BrowserPlatform.MAC:\n      return 'chrome-mac';\n    case BrowserPlatform.WIN32:\n    case BrowserPlatform.WIN64:\n      // Windows archive name changed at r591479.\n      return parseInt(buildId, 10) > 591479 ? 'chrome-win' : 'chrome-win32';\n  }\n}\nfunction folder(platform) {\n  switch (platform) {\n    case BrowserPlatform.LINUX:\n      return 'Linux_x64';\n    case BrowserPlatform.MAC_ARM:\n      return 'Mac_Arm';\n    case BrowserPlatform.MAC:\n      return 'Mac';\n    case BrowserPlatform.WIN32:\n      return 'Win';\n    case BrowserPlatform.WIN64:\n      return 'Win_x64';\n  }\n}\nexport function resolveDownloadUrl(platform, buildId, baseUrl = 'https://storage.googleapis.com/chromium-browser-snapshots') {\n  return `${baseUrl}/${resolveDownloadPath(platform, buildId).join('/')}`;\n}\nexport function resolveDownloadPath(platform, buildId) {\n  return [folder(platform), buildId, `${archive(platform, buildId)}.zip`];\n}\nexport function relativeExecutablePath(platform, _buildId) {\n  switch (platform) {\n    case BrowserPlatform.MAC:\n    case BrowserPlatform.MAC_ARM:\n      return path.join('chrome-mac', 'Chromium.app', 'Contents', 'MacOS', 'Chromium');\n    case BrowserPlatform.LINUX:\n      return path.join('chrome-linux', 'chrome');\n    case BrowserPlatform.WIN32:\n    case BrowserPlatform.WIN64:\n      return path.join('chrome-win', 'chrome.exe');\n  }\n}\nexport async function resolveBuildId(platform,\n// We will need it for other channels/keywords.\n_channel = 'latest') {\n  return new Promise((resolve, reject) => {\n    const request = httpRequest(new URL(`https://storage.googleapis.com/chromium-browser-snapshots/${folder(platform)}/LAST_CHANGE`), 'GET', response => {\n      let data = '';\n      if (response.statusCode && response.statusCode >= 400) {\n        return reject(new Error(`Got status code ${response.statusCode}`));\n      }\n      response.on('data', chunk => {\n        data += chunk;\n      });\n      response.on('end', () => {\n        try {\n          return resolve(String(data));\n        } catch {\n          return reject(new Error('Chrome version not found'));\n        }\n      });\n    }, false);\n    request.on('error', err => {\n      reject(err);\n    });\n  });\n}","map":{"version":3,"names":["path","httpRequest","BrowserPlatform","resolveSystemExecutablePath","archive","platform","buildId","LINUX","MAC_ARM","MAC","WIN32","WIN64","parseInt","folder","resolveDownloadUrl","baseUrl","resolveDownloadPath","join","relativeExecutablePath","_buildId","resolveBuildId","_channel","Promise","resolve","reject","request","URL","response","data","statusCode","Error","on","chunk","String","err"],"sources":["../../../src/browser-data/chromium.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}