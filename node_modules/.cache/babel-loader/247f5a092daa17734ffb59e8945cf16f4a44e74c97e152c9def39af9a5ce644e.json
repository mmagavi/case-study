{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BidiServer = void 0;\nconst EventEmitter_js_1 = require(\"../utils/EventEmitter.js\");\nconst processingQueue_js_1 = require(\"../utils/processingQueue.js\");\nconst CommandProcessor_js_1 = require(\"./CommandProcessor.js\");\nconst browsingContextStorage_js_1 = require(\"./domains/context/browsingContextStorage.js\");\nconst EventManager_js_1 = require(\"./domains/events/EventManager.js\");\nconst realmStorage_js_1 = require(\"./domains/script/realmStorage.js\");\nclass BidiServer extends EventEmitter_js_1.EventEmitter {\n  #messageQueue;\n  #transport;\n  #commandProcessor;\n  #browsingContextStorage;\n  #realmStorage;\n  #logger;\n  #handleIncomingMessage = message => {\n    this.#commandProcessor.processCommand(message);\n  };\n  #processOutgoingMessage = async messageEntry => {\n    const message = messageEntry.message;\n    if (messageEntry.channel !== null) {\n      message['channel'] = messageEntry.channel;\n    }\n    await this.#transport.sendMessage(message);\n  };\n  constructor(bidiTransport, cdpConnection, selfTargetId, parser, logger) {\n    super();\n    this.#logger = logger;\n    this.#browsingContextStorage = new browsingContextStorage_js_1.BrowsingContextStorage();\n    this.#realmStorage = new realmStorage_js_1.RealmStorage();\n    this.#messageQueue = new processingQueue_js_1.ProcessingQueue(this.#processOutgoingMessage, () => Promise.resolve(), this.#logger);\n    this.#transport = bidiTransport;\n    this.#transport.setOnMessage(this.#handleIncomingMessage);\n    this.#commandProcessor = new CommandProcessor_js_1.CommandProcessor(this.#realmStorage, cdpConnection, new EventManager_js_1.EventManager(this), selfTargetId, parser, this.#browsingContextStorage, this.#logger);\n    this.#commandProcessor.on('response', response => {\n      this.emitOutgoingMessage(response);\n    });\n  }\n  static async createAndStart(bidiTransport, cdpConnection, selfTargetId, parser, logger) {\n    const server = new BidiServer(bidiTransport, cdpConnection, selfTargetId, parser, logger);\n    const cdpClient = cdpConnection.browserClient();\n    // Needed to get events about new targets.\n    await cdpClient.sendCommand('Target.setDiscoverTargets', {\n      discover: true\n    });\n    // Needed to automatically attach to new targets.\n    await cdpClient.sendCommand('Target.setAutoAttach', {\n      autoAttach: true,\n      waitForDebuggerOnStart: true,\n      flatten: true\n    });\n    await server.topLevelContextsLoaded();\n    return server;\n  }\n  async topLevelContextsLoaded() {\n    await Promise.all(this.#browsingContextStorage.getTopLevelContexts().map(c => c.awaitLoaded()));\n  }\n  /**\n   * Sends BiDi message.\n   */\n  emitOutgoingMessage(messageEntry) {\n    this.#messageQueue.add(messageEntry);\n  }\n  close() {\n    this.#transport.close();\n  }\n  getBrowsingContextStorage() {\n    return this.#browsingContextStorage;\n  }\n}\nexports.BidiServer = BidiServer;","map":{"version":3,"names":["EventEmitter_js_1","require","processingQueue_js_1","CommandProcessor_js_1","browsingContextStorage_js_1","EventManager_js_1","realmStorage_js_1","BidiServer","EventEmitter","messageQueue","transport","commandProcessor","browsingContextStorage","realmStorage","logger","handleIncomingMessage","message","processCommand","processOutgoingMessage","messageEntry","channel","sendMessage","constructor","bidiTransport","cdpConnection","selfTargetId","parser","BrowsingContextStorage","RealmStorage","ProcessingQueue","Promise","resolve","setOnMessage","CommandProcessor","EventManager","on","response","emitOutgoingMessage","createAndStart","server","cdpClient","browserClient","sendCommand","discover","autoAttach","waitForDebuggerOnStart","flatten","topLevelContextsLoaded","all","getTopLevelContexts","map","c","awaitLoaded","add","close","getBrowsingContextStorage","exports"],"sources":["../../../src/bidiMapper/BidiServer.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AAiBA,MAAAA,iBAAA,GAAAC,OAAA;AAGA,MAAAC,oBAAA,GAAAD,OAAA;AAEA,MAAAE,qBAAA,GAAAF,OAAA;AAEA,MAAAG,2BAAA,GAAAH,OAAA;AAEA,MAAAI,iBAAA,GAAAJ,OAAA;AAEA,MAAAK,iBAAA,GAAAL,OAAA;AAMA,MAAaM,UAAW,SAAQP,iBAAA,CAAAQ,YAA8B;EAC5D,CAAAC,YAAa;EACb,CAAAC,SAAU;EACV,CAAAC,gBAAiB;EACjB,CAAAC,sBAAuB;EACvB,CAAAC,YAAa;EACb,CAAAC,MAAO;EAEP,CAAAC,qBAAsB,GAAIC,OAAkC,IAAI;IAC9D,IAAI,CAAC,CAAAL,gBAAiB,CAACM,cAAc,CAACD,OAAO,CAAC;EAChD,CAAC;EAED,CAAAE,sBAAuB,GAAG,MAAOC,YAAiC,IAAI;IACpE,MAAMH,OAAO,GAAGG,YAAY,CAACH,OAAc;IAE3C,IAAIG,YAAY,CAACC,OAAO,KAAK,IAAI,EAAE;MACjCJ,OAAO,CAAC,SAAS,CAAC,GAAGG,YAAY,CAACC,OAAO;;IAG3C,MAAM,IAAI,CAAC,CAAAV,SAAU,CAACW,WAAW,CAACL,OAAO,CAAC;EAC5C,CAAC;EAEDM,YACEC,aAA4B,EAC5BC,aAA4B,EAC5BC,YAAoB,EACpBC,MAAmB,EACnBZ,MAAiB;IAEjB,KAAK,EAAE;IACP,IAAI,CAAC,CAAAA,MAAO,GAAGA,MAAM;IACrB,IAAI,CAAC,CAAAF,sBAAuB,GAAG,IAAIR,2BAAA,CAAAuB,sBAAsB,EAAE;IAC3D,IAAI,CAAC,CAAAd,YAAa,GAAG,IAAIP,iBAAA,CAAAsB,YAAY,EAAE;IACvC,IAAI,CAAC,CAAAnB,YAAa,GAAG,IAAIP,oBAAA,CAAA2B,eAAe,CACtC,IAAI,CAAC,CAAAX,sBAAuB,EAC5B,MAAMY,OAAO,CAACC,OAAO,EAAE,EACvB,IAAI,CAAC,CAAAjB,MAAO,CACb;IACD,IAAI,CAAC,CAAAJ,SAAU,GAAGa,aAAa;IAC/B,IAAI,CAAC,CAAAb,SAAU,CAACsB,YAAY,CAAC,IAAI,CAAC,CAAAjB,qBAAsB,CAAC;IACzD,IAAI,CAAC,CAAAJ,gBAAiB,GAAG,IAAIR,qBAAA,CAAA8B,gBAAgB,CAC3C,IAAI,CAAC,CAAApB,YAAa,EAClBW,aAAa,EACb,IAAInB,iBAAA,CAAA6B,YAAY,CAAC,IAAI,CAAC,EACtBT,YAAY,EACZC,MAAM,EACN,IAAI,CAAC,CAAAd,sBAAuB,EAC5B,IAAI,CAAC,CAAAE,MAAO,CACb;IACD,IAAI,CAAC,CAAAH,gBAAiB,CAACwB,EAAE,CACvB,UAAU,EACTC,QAAsC,IAAI;MACzC,IAAI,CAACC,mBAAmB,CAACD,QAAQ,CAAC;IACpC,CAAC,CACF;EACH;EAEA,aAAaE,cAAcA,CACzBf,aAA4B,EAC5BC,aAA4B,EAC5BC,YAAoB,EACpBC,MAAmB,EACnBZ,MAAiB;IAEjB,MAAMyB,MAAM,GAAG,IAAIhC,UAAU,CAC3BgB,aAAa,EACbC,aAAa,EACbC,YAAY,EACZC,MAAM,EACNZ,MAAM,CACP;IACD,MAAM0B,SAAS,GAAGhB,aAAa,CAACiB,aAAa,EAAE;IAE/C;IACA,MAAMD,SAAS,CAACE,WAAW,CAAC,2BAA2B,EAAE;MAACC,QAAQ,EAAE;IAAI,CAAC,CAAC;IAE1E;IACA,MAAMH,SAAS,CAACE,WAAW,CAAC,sBAAsB,EAAE;MAClDE,UAAU,EAAE,IAAI;MAChBC,sBAAsB,EAAE,IAAI;MAC5BC,OAAO,EAAE;KACV,CAAC;IAEF,MAAMP,MAAM,CAACQ,sBAAsB,EAAE;IACrC,OAAOR,MAAM;EACf;EAEA,MAAMQ,sBAAsBA,CAAA;IAC1B,MAAMjB,OAAO,CAACkB,GAAG,CACf,IAAI,CAAC,CAAApC,sBAAuB,CACzBqC,mBAAmB,EAAE,CACrBC,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,WAAW,EAAE,CAAC,CAC/B;EACH;EAEA;;;EAGAf,mBAAmBA,CAAClB,YAA0C;IAC5D,IAAI,CAAC,CAAAV,YAAa,CAAC4C,GAAG,CAAClC,YAAY,CAAC;EACtC;EAEAmC,KAAKA,CAAA;IACH,IAAI,CAAC,CAAA5C,SAAU,CAAC4C,KAAK,EAAE;EACzB;EAEAC,yBAAyBA,CAAA;IACvB,OAAO,IAAI,CAAC,CAAA3C,sBAAuB;EACrC;;AA5GF4C,OAAA,CAAAjD,UAAA,GAAAA,UAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}