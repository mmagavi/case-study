{"ast":null,"code":"import { getCacheKey } from \"./base.js\";\nimport { BaseCache } from \"../schema/index.js\";\nconst GLOBAL_MAP = new Map();\n/**\n * A cache for storing LLM generations that stores data in memory.\n */\nexport class InMemoryCache extends BaseCache {\n  constructor(map) {\n    super();\n    Object.defineProperty(this, \"cache\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.cache = map ?? new Map();\n  }\n  /**\n   * Retrieves data from the cache using a prompt and an LLM key. If the\n   * data is not found, it returns null.\n   * @param prompt The prompt used to find the data.\n   * @param llmKey The LLM key used to find the data.\n   * @returns The data corresponding to the prompt and LLM key, or null if not found.\n   */\n  lookup(prompt, llmKey) {\n    return Promise.resolve(this.cache.get(getCacheKey(prompt, llmKey)) ?? null);\n  }\n  /**\n   * Updates the cache with new data using a prompt and an LLM key.\n   * @param prompt The prompt used to store the data.\n   * @param llmKey The LLM key used to store the data.\n   * @param value The data to be stored.\n   */\n  async update(prompt, llmKey, value) {\n    this.cache.set(getCacheKey(prompt, llmKey), value);\n  }\n  /**\n   * Returns a global instance of InMemoryCache using a predefined global\n   * map as the initial cache.\n   * @returns A global instance of InMemoryCache.\n   */\n  static global() {\n    return new InMemoryCache(GLOBAL_MAP);\n  }\n}","map":{"version":3,"names":["getCacheKey","BaseCache","GLOBAL_MAP","Map","InMemoryCache","constructor","map","Object","defineProperty","enumerable","configurable","writable","value","cache","lookup","prompt","llmKey","Promise","resolve","get","update","set","global"],"sources":["/Users/mayamagavi/instalily/case-study/node_modules/langchain/dist/cache/index.js"],"sourcesContent":["import { getCacheKey } from \"./base.js\";\nimport { BaseCache } from \"../schema/index.js\";\nconst GLOBAL_MAP = new Map();\n/**\n * A cache for storing LLM generations that stores data in memory.\n */\nexport class InMemoryCache extends BaseCache {\n    constructor(map) {\n        super();\n        Object.defineProperty(this, \"cache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.cache = map ?? new Map();\n    }\n    /**\n     * Retrieves data from the cache using a prompt and an LLM key. If the\n     * data is not found, it returns null.\n     * @param prompt The prompt used to find the data.\n     * @param llmKey The LLM key used to find the data.\n     * @returns The data corresponding to the prompt and LLM key, or null if not found.\n     */\n    lookup(prompt, llmKey) {\n        return Promise.resolve(this.cache.get(getCacheKey(prompt, llmKey)) ?? null);\n    }\n    /**\n     * Updates the cache with new data using a prompt and an LLM key.\n     * @param prompt The prompt used to store the data.\n     * @param llmKey The LLM key used to store the data.\n     * @param value The data to be stored.\n     */\n    async update(prompt, llmKey, value) {\n        this.cache.set(getCacheKey(prompt, llmKey), value);\n    }\n    /**\n     * Returns a global instance of InMemoryCache using a predefined global\n     * map as the initial cache.\n     * @returns A global instance of InMemoryCache.\n     */\n    static global() {\n        return new InMemoryCache(GLOBAL_MAP);\n    }\n}\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,WAAW;AACvC,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,MAAMC,UAAU,GAAG,IAAIC,GAAG,CAAC,CAAC;AAC5B;AACA;AACA;AACA,OAAO,MAAMC,aAAa,SAASH,SAAS,CAAC;EACzCI,WAAWA,CAACC,GAAG,EAAE;IACb,KAAK,CAAC,CAAC;IACPC,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,OAAO,EAAE;MACjCC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,KAAK;IAChB,CAAC,CAAC;IACF,IAAI,CAACC,KAAK,GAAGP,GAAG,IAAI,IAAIH,GAAG,CAAC,CAAC;EACjC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIW,MAAMA,CAACC,MAAM,EAAEC,MAAM,EAAE;IACnB,OAAOC,OAAO,CAACC,OAAO,CAAC,IAAI,CAACL,KAAK,CAACM,GAAG,CAACnB,WAAW,CAACe,MAAM,EAAEC,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC;EAC/E;EACA;AACJ;AACA;AACA;AACA;AACA;EACI,MAAMI,MAAMA,CAACL,MAAM,EAAEC,MAAM,EAAEJ,KAAK,EAAE;IAChC,IAAI,CAACC,KAAK,CAACQ,GAAG,CAACrB,WAAW,CAACe,MAAM,EAAEC,MAAM,CAAC,EAAEJ,KAAK,CAAC;EACtD;EACA;AACJ;AACA;AACA;AACA;EACI,OAAOU,MAAMA,CAAA,EAAG;IACZ,OAAO,IAAIlB,aAAa,CAACF,UAAU,CAAC;EACxC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}