{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2022 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _WaitTask_world, _WaitTask_polling, _WaitTask_root, _WaitTask_fn, _WaitTask_args, _WaitTask_timeout, _WaitTask_result, _WaitTask_poller, _WaitTask_signal, _TaskManager_tasks;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TaskManager = exports.WaitTask = void 0;\nconst DeferredPromise_js_1 = require(\"../util/DeferredPromise.js\");\nconst Function_js_1 = require(\"../util/Function.js\");\nconst Errors_js_1 = require(\"./Errors.js\");\nconst LazyArg_js_1 = require(\"./LazyArg.js\");\n/**\n * @internal\n */\nclass WaitTask {\n  constructor(world, options, fn, ...args) {\n    var _a;\n    _WaitTask_world.set(this, void 0);\n    _WaitTask_polling.set(this, void 0);\n    _WaitTask_root.set(this, void 0);\n    _WaitTask_fn.set(this, void 0);\n    _WaitTask_args.set(this, void 0);\n    _WaitTask_timeout.set(this, void 0);\n    _WaitTask_result.set(this, (0, DeferredPromise_js_1.createDeferredPromise)());\n    _WaitTask_poller.set(this, void 0);\n    _WaitTask_signal.set(this, void 0);\n    __classPrivateFieldSet(this, _WaitTask_world, world, \"f\");\n    __classPrivateFieldSet(this, _WaitTask_polling, options.polling, \"f\");\n    __classPrivateFieldSet(this, _WaitTask_root, options.root, \"f\");\n    __classPrivateFieldSet(this, _WaitTask_signal, options.signal, \"f\");\n    (_a = __classPrivateFieldGet(this, _WaitTask_signal, \"f\")) === null || _a === void 0 ? void 0 : _a.addEventListener('abort', () => {\n      this.terminate(new Errors_js_1.AbortError('WaitTask has been aborted.'));\n    }, {\n      once: true\n    });\n    switch (typeof fn) {\n      case 'string':\n        __classPrivateFieldSet(this, _WaitTask_fn, `() => {return (${fn});}`, \"f\");\n        break;\n      default:\n        __classPrivateFieldSet(this, _WaitTask_fn, (0, Function_js_1.stringifyFunction)(fn), \"f\");\n        break;\n    }\n    __classPrivateFieldSet(this, _WaitTask_args, args, \"f\");\n    __classPrivateFieldGet(this, _WaitTask_world, \"f\").taskManager.add(this);\n    if (options.timeout) {\n      __classPrivateFieldSet(this, _WaitTask_timeout, setTimeout(() => {\n        this.terminate(new Errors_js_1.TimeoutError(`Waiting failed: ${options.timeout}ms exceeded`));\n      }, options.timeout), \"f\");\n    }\n    this.rerun();\n  }\n  get result() {\n    return __classPrivateFieldGet(this, _WaitTask_result, \"f\");\n  }\n  async rerun() {\n    try {\n      switch (__classPrivateFieldGet(this, _WaitTask_polling, \"f\")) {\n        case 'raf':\n          __classPrivateFieldSet(this, _WaitTask_poller, await __classPrivateFieldGet(this, _WaitTask_world, \"f\").evaluateHandle(({\n            RAFPoller,\n            createFunction\n          }, fn, ...args) => {\n            const fun = createFunction(fn);\n            return new RAFPoller(() => {\n              return fun(...args);\n            });\n          }, LazyArg_js_1.LazyArg.create(context => {\n            return context.puppeteerUtil;\n          }), __classPrivateFieldGet(this, _WaitTask_fn, \"f\"), ...__classPrivateFieldGet(this, _WaitTask_args, \"f\")), \"f\");\n          break;\n        case 'mutation':\n          __classPrivateFieldSet(this, _WaitTask_poller, await __classPrivateFieldGet(this, _WaitTask_world, \"f\").evaluateHandle(({\n            MutationPoller,\n            createFunction\n          }, root, fn, ...args) => {\n            const fun = createFunction(fn);\n            return new MutationPoller(() => {\n              return fun(...args);\n            }, root || document);\n          }, LazyArg_js_1.LazyArg.create(context => {\n            return context.puppeteerUtil;\n          }), __classPrivateFieldGet(this, _WaitTask_root, \"f\"), __classPrivateFieldGet(this, _WaitTask_fn, \"f\"), ...__classPrivateFieldGet(this, _WaitTask_args, \"f\")), \"f\");\n          break;\n        default:\n          __classPrivateFieldSet(this, _WaitTask_poller, await __classPrivateFieldGet(this, _WaitTask_world, \"f\").evaluateHandle(({\n            IntervalPoller,\n            createFunction\n          }, ms, fn, ...args) => {\n            const fun = createFunction(fn);\n            return new IntervalPoller(() => {\n              return fun(...args);\n            }, ms);\n          }, LazyArg_js_1.LazyArg.create(context => {\n            return context.puppeteerUtil;\n          }), __classPrivateFieldGet(this, _WaitTask_polling, \"f\"), __classPrivateFieldGet(this, _WaitTask_fn, \"f\"), ...__classPrivateFieldGet(this, _WaitTask_args, \"f\")), \"f\");\n          break;\n      }\n      await __classPrivateFieldGet(this, _WaitTask_poller, \"f\").evaluate(poller => {\n        poller.start();\n      });\n      const result = await __classPrivateFieldGet(this, _WaitTask_poller, \"f\").evaluateHandle(poller => {\n        return poller.result();\n      });\n      __classPrivateFieldGet(this, _WaitTask_result, \"f\").resolve(result);\n      await this.terminate();\n    } catch (error) {\n      const badError = this.getBadError(error);\n      if (badError) {\n        await this.terminate(badError);\n      }\n    }\n  }\n  async terminate(error) {\n    __classPrivateFieldGet(this, _WaitTask_world, \"f\").taskManager.delete(this);\n    if (__classPrivateFieldGet(this, _WaitTask_timeout, \"f\")) {\n      clearTimeout(__classPrivateFieldGet(this, _WaitTask_timeout, \"f\"));\n    }\n    if (error && !__classPrivateFieldGet(this, _WaitTask_result, \"f\").finished()) {\n      __classPrivateFieldGet(this, _WaitTask_result, \"f\").reject(error);\n    }\n    if (__classPrivateFieldGet(this, _WaitTask_poller, \"f\")) {\n      try {\n        await __classPrivateFieldGet(this, _WaitTask_poller, \"f\").evaluateHandle(async poller => {\n          await poller.stop();\n        });\n        if (__classPrivateFieldGet(this, _WaitTask_poller, \"f\")) {\n          await __classPrivateFieldGet(this, _WaitTask_poller, \"f\").dispose();\n          __classPrivateFieldSet(this, _WaitTask_poller, undefined, \"f\");\n        }\n      } catch {\n        // Ignore errors since they most likely come from low-level cleanup.\n      }\n    }\n  }\n  /**\n   * Not all errors lead to termination. They usually imply we need to rerun the task.\n   */\n  getBadError(error) {\n    if (error instanceof Error) {\n      // When frame is detached the task should have been terminated by the IsolatedWorld.\n      // This can fail if we were adding this task while the frame was detached,\n      // so we terminate here instead.\n      if (error.message.includes('Execution context is not available in detached frame')) {\n        return new Error('Waiting failed: Frame detached');\n      }\n      // When the page is navigated, the promise is rejected.\n      // We will try again in the new execution context.\n      if (error.message.includes('Execution context was destroyed')) {\n        return;\n      }\n      // We could have tried to evaluate in a context which was already\n      // destroyed.\n      if (error.message.includes('Cannot find context with specified id')) {\n        return;\n      }\n    }\n    return error;\n  }\n}\nexports.WaitTask = WaitTask;\n_WaitTask_world = new WeakMap(), _WaitTask_polling = new WeakMap(), _WaitTask_root = new WeakMap(), _WaitTask_fn = new WeakMap(), _WaitTask_args = new WeakMap(), _WaitTask_timeout = new WeakMap(), _WaitTask_result = new WeakMap(), _WaitTask_poller = new WeakMap(), _WaitTask_signal = new WeakMap();\n/**\n * @internal\n */\nclass TaskManager {\n  constructor() {\n    _TaskManager_tasks.set(this, new Set());\n  }\n  add(task) {\n    __classPrivateFieldGet(this, _TaskManager_tasks, \"f\").add(task);\n  }\n  delete(task) {\n    __classPrivateFieldGet(this, _TaskManager_tasks, \"f\").delete(task);\n  }\n  terminateAll(error) {\n    for (const task of __classPrivateFieldGet(this, _TaskManager_tasks, \"f\")) {\n      task.terminate(error);\n    }\n    __classPrivateFieldGet(this, _TaskManager_tasks, \"f\").clear();\n  }\n  async rerunAll() {\n    await Promise.all([...__classPrivateFieldGet(this, _TaskManager_tasks, \"f\")].map(task => {\n      return task.rerun();\n    }));\n  }\n}\nexports.TaskManager = TaskManager;\n_TaskManager_tasks = new WeakMap();","map":{"version":3,"names":["DeferredPromise_js_1","require","Function_js_1","Errors_js_1","LazyArg_js_1","WaitTask","constructor","world","options","fn","args","_WaitTask_world","set","_WaitTask_polling","_WaitTask_root","_WaitTask_fn","_WaitTask_args","_WaitTask_timeout","_WaitTask_result","createDeferredPromise","_WaitTask_poller","_WaitTask_signal","__classPrivateFieldSet","polling","root","signal","_a","__classPrivateFieldGet","addEventListener","terminate","AbortError","once","stringifyFunction","taskManager","add","timeout","setTimeout","TimeoutError","rerun","result","evaluateHandle","RAFPoller","createFunction","fun","LazyArg","create","context","puppeteerUtil","MutationPoller","document","IntervalPoller","ms","evaluate","poller","start","resolve","error","badError","getBadError","delete","clearTimeout","finished","reject","stop","dispose","undefined","Error","message","includes","exports","TaskManager","_TaskManager_tasks","Set","task","terminateAll","clear","rerunAll","Promise","all","map"],"sources":["../../../../src/common/WaitTask.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,MAAAA,oBAAA,GAAAC,OAAA;AACA,MAAAC,aAAA,GAAAD,OAAA;AAEA,MAAAE,WAAA,GAAAF,OAAA;AAEA,MAAAG,YAAA,GAAAH,OAAA;AAaA;;;AAGA,MAAaI,QAAQ;EAenBC,YACEC,KAAoB,EACpBC,OAAwB,EACxBC,EAAiD,EACjD,GAAGC,IAAe;;IAlBpBC,eAAA,CAAAC,GAAA;IACAC,iBAAA,CAAAD,GAAA;IACAE,cAAA,CAAAF,GAAA;IAEAG,YAAA,CAAAH,GAAA;IACAI,cAAA,CAAAJ,GAAA;IAEAK,iBAAA,CAAAL,GAAA;IAEAM,gBAAA,CAAAN,GAAA,OAAU,IAAAZ,oBAAA,CAAAmB,qBAAqB,GAAgB;IAE/CC,gBAAA,CAAAR,GAAA;IACAS,gBAAA,CAAAT,GAAA;IAQEU,sBAAA,KAAI,EAAAX,eAAA,EAAUJ,KAAK;IACnBe,sBAAA,KAAI,EAAAT,iBAAA,EAAYL,OAAO,CAACe,OAAO;IAC/BD,sBAAA,KAAI,EAAAR,cAAA,EAASN,OAAO,CAACgB,IAAI;IACzBF,sBAAA,KAAI,EAAAD,gBAAA,EAAWb,OAAO,CAACiB,MAAM;IAC7B,CAAAC,EAAA,GAAAC,sBAAA,KAAI,EAAAN,gBAAA,MAAQ,cAAAK,EAAA,uBAAAA,EAAA,CAAEE,gBAAgB,CAC5B,OAAO,EACP,MAAK;MACH,IAAI,CAACC,SAAS,CAAC,IAAI1B,WAAA,CAAA2B,UAAU,CAAC,4BAA4B,CAAC,CAAC;IAC9D,CAAC,EACD;MACEC,IAAI,EAAE;KACP,CACF;IAED,QAAQ,OAAOtB,EAAE;MACf,KAAK,QAAQ;QACXa,sBAAA,KAAI,EAAAP,YAAA,EAAO,kBAAkBN,EAAE,KAAK;QACpC;MACF;QACEa,sBAAA,KAAI,EAAAP,YAAA,EAAO,IAAAb,aAAA,CAAA8B,iBAAiB,EAACvB,EAAE,CAAC;QAChC;;IAEJa,sBAAA,KAAI,EAAAN,cAAA,EAASN,IAAI;IAEjBiB,sBAAA,KAAI,EAAAhB,eAAA,MAAO,CAACsB,WAAW,CAACC,GAAG,CAAC,IAAI,CAAC;IAEjC,IAAI1B,OAAO,CAAC2B,OAAO,EAAE;MACnBb,sBAAA,KAAI,EAAAL,iBAAA,EAAYmB,UAAU,CAAC,MAAK;QAC9B,IAAI,CAACP,SAAS,CACZ,IAAI1B,WAAA,CAAAkC,YAAY,CAAC,mBAAmB7B,OAAO,CAAC2B,OAAO,aAAa,CAAC,CAClE;MACH,CAAC,EAAE3B,OAAO,CAAC2B,OAAO,CAAC;;IAGrB,IAAI,CAACG,KAAK,EAAE;EACd;EAEA,IAAIC,MAAMA,CAAA;IACR,OAAOZ,sBAAA,KAAI,EAAAT,gBAAA,MAAQ;EACrB;EAEA,MAAMoB,KAAKA,CAAA;IACT,IAAI;MACF,QAAQX,sBAAA,KAAI,EAAAd,iBAAA,MAAS;QACnB,KAAK,KAAK;UACRS,sBAAA,KAAI,EAAAF,gBAAA,EAAW,MAAMO,sBAAA,KAAI,EAAAhB,eAAA,MAAO,CAAC6B,cAAc,CAC7C,CAAC;YAACC,SAAS;YAAEC;UAAc,CAAC,EAAEjC,EAAE,EAAE,GAAGC,IAAI,KAAI;YAC3C,MAAMiC,GAAG,GAAGD,cAAc,CAACjC,EAAE,CAAC;YAC9B,OAAO,IAAIgC,SAAS,CAAC,MAAK;cACxB,OAAOE,GAAG,CAAC,GAAGjC,IAAI,CAAe;YACnC,CAAC,CAAC;UACJ,CAAC,EACDN,YAAA,CAAAwC,OAAO,CAACC,MAAM,CAACC,OAAO,IAAG;YACvB,OAAOA,OAAO,CAACC,aAAa;UAC9B,CAAC,CAAC,EACFpB,sBAAA,KAAI,EAAAZ,YAAA,MAAI,EACR,GAAGY,sBAAA,KAAI,EAAAX,cAAA,MAAM,CACd;UACD;QACF,KAAK,UAAU;UACbM,sBAAA,KAAI,EAAAF,gBAAA,EAAW,MAAMO,sBAAA,KAAI,EAAAhB,eAAA,MAAO,CAAC6B,cAAc,CAC7C,CAAC;YAACQ,cAAc;YAAEN;UAAc,CAAC,EAAElB,IAAI,EAAEf,EAAE,EAAE,GAAGC,IAAI,KAAI;YACtD,MAAMiC,GAAG,GAAGD,cAAc,CAACjC,EAAE,CAAC;YAC9B,OAAO,IAAIuC,cAAc,CAAC,MAAK;cAC7B,OAAOL,GAAG,CAAC,GAAGjC,IAAI,CAAe;YACnC,CAAC,EAAEc,IAAI,IAAIyB,QAAQ,CAAC;UACtB,CAAC,EACD7C,YAAA,CAAAwC,OAAO,CAACC,MAAM,CAACC,OAAO,IAAG;YACvB,OAAOA,OAAO,CAACC,aAAa;UAC9B,CAAC,CAAC,EACFpB,sBAAA,KAAI,EAAAb,cAAA,MAAM,EACVa,sBAAA,KAAI,EAAAZ,YAAA,MAAI,EACR,GAAGY,sBAAA,KAAI,EAAAX,cAAA,MAAM,CACd;UACD;QACF;UACEM,sBAAA,KAAI,EAAAF,gBAAA,EAAW,MAAMO,sBAAA,KAAI,EAAAhB,eAAA,MAAO,CAAC6B,cAAc,CAC7C,CAAC;YAACU,cAAc;YAAER;UAAc,CAAC,EAAES,EAAE,EAAE1C,EAAE,EAAE,GAAGC,IAAI,KAAI;YACpD,MAAMiC,GAAG,GAAGD,cAAc,CAACjC,EAAE,CAAC;YAC9B,OAAO,IAAIyC,cAAc,CAAC,MAAK;cAC7B,OAAOP,GAAG,CAAC,GAAGjC,IAAI,CAAe;YACnC,CAAC,EAAEyC,EAAE,CAAC;UACR,CAAC,EACD/C,YAAA,CAAAwC,OAAO,CAACC,MAAM,CAACC,OAAO,IAAG;YACvB,OAAOA,OAAO,CAACC,aAAa;UAC9B,CAAC,CAAC,EACFpB,sBAAA,KAAI,EAAAd,iBAAA,MAAS,EACbc,sBAAA,KAAI,EAAAZ,YAAA,MAAI,EACR,GAAGY,sBAAA,KAAI,EAAAX,cAAA,MAAM,CACd;UACD;;MAGJ,MAAMW,sBAAA,KAAI,EAAAP,gBAAA,MAAQ,CAACgC,QAAQ,CAACC,MAAM,IAAG;QACnCA,MAAM,CAACC,KAAK,EAAE;MAChB,CAAC,CAAC;MAEF,MAAMf,MAAM,GAAG,MAAMZ,sBAAA,KAAI,EAAAP,gBAAA,MAAQ,CAACoB,cAAc,CAACa,MAAM,IAAG;QACxD,OAAOA,MAAM,CAACd,MAAM,EAAE;MACxB,CAAC,CAAC;MACFZ,sBAAA,KAAI,EAAAT,gBAAA,MAAQ,CAACqC,OAAO,CAAChB,MAAM,CAAC;MAE5B,MAAM,IAAI,CAACV,SAAS,EAAE;KACvB,CAAC,OAAO2B,KAAK,EAAE;MACd,MAAMC,QAAQ,GAAG,IAAI,CAACC,WAAW,CAACF,KAAK,CAAC;MACxC,IAAIC,QAAQ,EAAE;QACZ,MAAM,IAAI,CAAC5B,SAAS,CAAC4B,QAAQ,CAAC;;;EAGpC;EAEA,MAAM5B,SAASA,CAAC2B,KAAe;IAC7B7B,sBAAA,KAAI,EAAAhB,eAAA,MAAO,CAACsB,WAAW,CAAC0B,MAAM,CAAC,IAAI,CAAC;IAEpC,IAAIhC,sBAAA,KAAI,EAAAV,iBAAA,MAAS,EAAE;MACjB2C,YAAY,CAACjC,sBAAA,KAAI,EAAAV,iBAAA,MAAS,CAAC;;IAG7B,IAAIuC,KAAK,IAAI,CAAC7B,sBAAA,KAAI,EAAAT,gBAAA,MAAQ,CAAC2C,QAAQ,EAAE,EAAE;MACrClC,sBAAA,KAAI,EAAAT,gBAAA,MAAQ,CAAC4C,MAAM,CAACN,KAAK,CAAC;;IAG5B,IAAI7B,sBAAA,KAAI,EAAAP,gBAAA,MAAQ,EAAE;MAChB,IAAI;QACF,MAAMO,sBAAA,KAAI,EAAAP,gBAAA,MAAQ,CAACoB,cAAc,CAAC,MAAMa,MAAM,IAAG;UAC/C,MAAMA,MAAM,CAACU,IAAI,EAAE;QACrB,CAAC,CAAC;QACF,IAAIpC,sBAAA,KAAI,EAAAP,gBAAA,MAAQ,EAAE;UAChB,MAAMO,sBAAA,KAAI,EAAAP,gBAAA,MAAQ,CAAC4C,OAAO,EAAE;UAC5B1C,sBAAA,KAAI,EAAAF,gBAAA,EAAW6C,SAAS;;OAE3B,CAAC,MAAM;QACN;MAAA;;EAGN;EAEA;;;EAGAP,WAAWA,CAACF,KAAc;IACxB,IAAIA,KAAK,YAAYU,KAAK,EAAE;MAC1B;MACA;MACA;MACA,IACEV,KAAK,CAACW,OAAO,CAACC,QAAQ,CACpB,sDAAsD,CACvD,EACD;QACA,OAAO,IAAIF,KAAK,CAAC,gCAAgC,CAAC;;MAGpD;MACA;MACA,IAAIV,KAAK,CAACW,OAAO,CAACC,QAAQ,CAAC,iCAAiC,CAAC,EAAE;QAC7D;;MAGF;MACA;MACA,IAAIZ,KAAK,CAACW,OAAO,CAACC,QAAQ,CAAC,uCAAuC,CAAC,EAAE;QACnE;;;IAIJ,OAAOZ,KAAK;EACd;;AA5LFa,OAAA,CAAAhE,QAAA,GAAAA,QAAA;;AA+LA;;;AAGA,MAAaiE,WAAW;EAAxBhE,YAAA;IACEiE,kBAAA,CAAA3D,GAAA,OAAwB,IAAI4D,GAAG,EAAY;EAwB7C;EAtBEtC,GAAGA,CAACuC,IAAmB;IACrB9C,sBAAA,KAAI,EAAA4C,kBAAA,MAAO,CAACrC,GAAG,CAACuC,IAAI,CAAC;EACvB;EAEAd,MAAMA,CAACc,IAAmB;IACxB9C,sBAAA,KAAI,EAAA4C,kBAAA,MAAO,CAACZ,MAAM,CAACc,IAAI,CAAC;EAC1B;EAEAC,YAAYA,CAAClB,KAAa;IACxB,KAAK,MAAMiB,IAAI,IAAI9C,sBAAA,KAAI,EAAA4C,kBAAA,MAAO,EAAE;MAC9BE,IAAI,CAAC5C,SAAS,CAAC2B,KAAK,CAAC;;IAEvB7B,sBAAA,KAAI,EAAA4C,kBAAA,MAAO,CAACI,KAAK,EAAE;EACrB;EAEA,MAAMC,QAAQA,CAAA;IACZ,MAAMC,OAAO,CAACC,GAAG,CACf,CAAC,GAAGnD,sBAAA,KAAI,EAAA4C,kBAAA,MAAO,CAAC,CAACQ,GAAG,CAACN,IAAI,IAAG;MAC1B,OAAOA,IAAI,CAACnC,KAAK,EAAE;IACrB,CAAC,CAAC,CACH;EACH;;AAxBF+B,OAAA,CAAAC,WAAA,GAAAA,WAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}