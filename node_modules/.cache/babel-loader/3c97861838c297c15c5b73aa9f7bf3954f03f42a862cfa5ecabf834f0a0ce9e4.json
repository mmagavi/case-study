{"ast":null,"code":"\"use strict\";\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Binding_name, _Binding_fn;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Binding = void 0;\nconst JSHandle_js_1 = require(\"../api/JSHandle.js\");\nconst ErrorLike_js_1 = require(\"../util/ErrorLike.js\");\nconst util_js_1 = require(\"./util.js\");\n/**\n * @internal\n */\nclass Binding {\n  constructor(name, fn) {\n    _Binding_name.set(this, void 0);\n    _Binding_fn.set(this, void 0);\n    __classPrivateFieldSet(this, _Binding_name, name, \"f\");\n    __classPrivateFieldSet(this, _Binding_fn, fn, \"f\");\n  }\n  get name() {\n    return __classPrivateFieldGet(this, _Binding_name, \"f\");\n  }\n  /**\n   * @param context - Context to run the binding in; the context should have\n   * the binding added to it beforehand.\n   * @param id - ID of the call. This should come from the CDP\n   * `onBindingCalled` response.\n   * @param args - Plain arguments from CDP.\n   */\n  async run(context, id, args, isTrivial) {\n    const garbage = [];\n    try {\n      if (!isTrivial) {\n        // Getting non-trivial arguments.\n        const handles = await context.evaluateHandle((name, seq) => {\n          // @ts-expect-error Code is evaluated in a different context.\n          return globalThis[name].args.get(seq);\n        }, __classPrivateFieldGet(this, _Binding_name, \"f\"), id);\n        try {\n          const properties = await handles.getProperties();\n          for (const [index, handle] of properties) {\n            // This is not straight-forward since some arguments can stringify, but\n            // aren't plain objects so add subtypes when the use-case arises.\n            if (index in args) {\n              switch (handle.remoteObject().subtype) {\n                case 'node':\n                  args[+index] = handle;\n                  break;\n                default:\n                  garbage.push(handle.dispose());\n              }\n            } else {\n              garbage.push(handle.dispose());\n            }\n          }\n        } finally {\n          await handles.dispose();\n        }\n      }\n      await context.evaluate((name, seq, result) => {\n        // @ts-expect-error Code is evaluated in a different context.\n        const callbacks = globalThis[name].callbacks;\n        callbacks.get(seq).resolve(result);\n        callbacks.delete(seq);\n      }, __classPrivateFieldGet(this, _Binding_name, \"f\"), id, await __classPrivateFieldGet(this, _Binding_fn, \"f\").call(this, ...args));\n      for (const arg of args) {\n        if (arg instanceof JSHandle_js_1.JSHandle) {\n          garbage.push(arg.dispose());\n        }\n      }\n    } catch (error) {\n      if ((0, ErrorLike_js_1.isErrorLike)(error)) {\n        await context.evaluate((name, seq, message, stack) => {\n          const error = new Error(message);\n          error.stack = stack;\n          // @ts-expect-error Code is evaluated in a different context.\n          const callbacks = globalThis[name].callbacks;\n          callbacks.get(seq).reject(error);\n          callbacks.delete(seq);\n        }, __classPrivateFieldGet(this, _Binding_name, \"f\"), id, error.message, error.stack).catch(util_js_1.debugError);\n      } else {\n        await context.evaluate((name, seq, error) => {\n          // @ts-expect-error Code is evaluated in a different context.\n          const callbacks = globalThis[name].callbacks;\n          callbacks.get(seq).reject(error);\n          callbacks.delete(seq);\n        }, __classPrivateFieldGet(this, _Binding_name, \"f\"), id, error).catch(util_js_1.debugError);\n      }\n    } finally {\n      await Promise.all(garbage);\n    }\n  }\n}\nexports.Binding = Binding;\n_Binding_name = new WeakMap(), _Binding_fn = new WeakMap();","map":{"version":3,"names":["JSHandle_js_1","require","ErrorLike_js_1","util_js_1","Binding","constructor","name","fn","_Binding_name","set","_Binding_fn","__classPrivateFieldSet","__classPrivateFieldGet","run","context","id","args","isTrivial","garbage","handles","evaluateHandle","seq","globalThis","get","properties","getProperties","index","handle","remoteObject","subtype","push","dispose","evaluate","result","callbacks","resolve","delete","call","arg","JSHandle","error","isErrorLike","message","stack","Error","reject","catch","debugError","Promise","all","exports"],"sources":["../../../../src/common/Binding.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}