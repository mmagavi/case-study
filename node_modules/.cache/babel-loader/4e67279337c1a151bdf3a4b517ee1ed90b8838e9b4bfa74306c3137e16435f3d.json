{"ast":null,"code":"/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _CLI_instances, _CLI_cachePath, _CLI_rl, _CLI_defineBrowserParameter, _CLI_definePlatformParameter, _CLI_definePathParameter, _CLI_parseBrowser, _CLI_parseBuildId;\nimport { stdin as input, stdout as output } from 'process';\nimport * as readline from 'readline';\nimport ProgressBar from 'progress';\nimport { hideBin } from 'yargs/helpers';\nimport yargs from 'yargs/yargs';\nimport { resolveBuildId, BrowserPlatform } from './browser-data/browser-data.js';\nimport { Cache } from './Cache.js';\nimport { detectBrowserPlatform } from './detectPlatform.js';\nimport { install } from './install.js';\nimport { computeExecutablePath, computeSystemExecutablePath, launch } from './launch.js';\n/**\n * @public\n */\nexport class CLI {\n  constructor(cachePath = process.cwd(), rl) {\n    _CLI_instances.add(this);\n    _CLI_cachePath.set(this, void 0);\n    _CLI_rl.set(this, void 0);\n    __classPrivateFieldSet(this, _CLI_cachePath, cachePath, \"f\");\n    __classPrivateFieldSet(this, _CLI_rl, rl, \"f\");\n  }\n  async run(argv) {\n    const yargsInstance = yargs(hideBin(argv));\n    await yargsInstance.scriptName('@puppeteer/browsers').command('install <browser>', 'Download and install the specified browser. If successful, the command outputs the actual browser buildId that was installed and the absolute path to the browser executable (format: <browser>@<buildID> <path>).', yargs => {\n      __classPrivateFieldGet(this, _CLI_instances, \"m\", _CLI_defineBrowserParameter).call(this, yargs);\n      __classPrivateFieldGet(this, _CLI_instances, \"m\", _CLI_definePlatformParameter).call(this, yargs);\n      __classPrivateFieldGet(this, _CLI_instances, \"m\", _CLI_definePathParameter).call(this, yargs);\n      yargs.option('base-url', {\n        type: 'string',\n        desc: 'Base URL to download from'\n      });\n      yargs.example('$0 install chrome', 'Install the latest available build of the Chrome browser.');\n      yargs.example('$0 install chrome@latest', 'Install the latest available build for the Chrome browser.');\n      yargs.example('$0 install chromium@1083080', 'Install the revision 1083080 of the Chromium browser.');\n      yargs.example('$0 install firefox', 'Install the latest available build of the Firefox browser.');\n      yargs.example('$0 install firefox --platform mac', 'Install the latest Mac (Intel) build of the Firefox browser.');\n      yargs.example('$0 install firefox --path /tmp/my-browser-cache', 'Install to the specified cache directory.');\n    }, async argv => {\n      var _a, _b, _c;\n      const args = argv;\n      (_a = args.platform) !== null && _a !== void 0 ? _a : args.platform = detectBrowserPlatform();\n      if (!args.platform) {\n        throw new Error(`Could not resolve the current platform`);\n      }\n      args.browser.buildId = await resolveBuildId(args.browser.name, args.platform, args.browser.buildId);\n      await install({\n        browser: args.browser.name,\n        buildId: args.browser.buildId,\n        platform: args.platform,\n        cacheDir: (_b = args.path) !== null && _b !== void 0 ? _b : __classPrivateFieldGet(this, _CLI_cachePath, \"f\"),\n        downloadProgressCallback: makeProgressCallback(args.browser.name, args.browser.buildId),\n        baseUrl: args.baseUrl\n      });\n      console.log(`${args.browser.name}@${args.browser.buildId} ${computeExecutablePath({\n        browser: args.browser.name,\n        buildId: args.browser.buildId,\n        cacheDir: (_c = args.path) !== null && _c !== void 0 ? _c : __classPrivateFieldGet(this, _CLI_cachePath, \"f\"),\n        platform: args.platform\n      })}`);\n    }).command('launch <browser>', 'Launch the specified browser', yargs => {\n      __classPrivateFieldGet(this, _CLI_instances, \"m\", _CLI_defineBrowserParameter).call(this, yargs);\n      __classPrivateFieldGet(this, _CLI_instances, \"m\", _CLI_definePlatformParameter).call(this, yargs);\n      __classPrivateFieldGet(this, _CLI_instances, \"m\", _CLI_definePathParameter).call(this, yargs);\n      yargs.option('detached', {\n        type: 'boolean',\n        desc: 'Detach the child process.',\n        default: false\n      });\n      yargs.option('system', {\n        type: 'boolean',\n        desc: 'Search for a browser installed on the system instead of the cache folder.',\n        default: false\n      });\n      yargs.example('$0 launch chrome@1083080', 'Launch the Chrome browser identified by the revision 1083080.');\n      yargs.example('$0 launch firefox@112.0a1', 'Launch the Firefox browser identified by the milestone 112.0a1.');\n      yargs.example('$0 launch chrome@1083080 --detached', 'Launch the browser but detach the sub-processes.');\n      yargs.example('$0 launch chrome@canary --system', 'Try to locate the Canary build of Chrome installed on the system and launch it.');\n    }, async argv => {\n      var _a;\n      const args = argv;\n      const executablePath = args.system ? computeSystemExecutablePath({\n        browser: args.browser.name,\n        // TODO: throw an error if not a ChromeReleaseChannel is provided.\n        channel: args.browser.buildId,\n        platform: args.platform\n      }) : computeExecutablePath({\n        browser: args.browser.name,\n        buildId: args.browser.buildId,\n        cacheDir: (_a = args.path) !== null && _a !== void 0 ? _a : __classPrivateFieldGet(this, _CLI_cachePath, \"f\"),\n        platform: args.platform\n      });\n      launch({\n        executablePath,\n        detached: args.detached\n      });\n    }).command('clear', 'Removes all installed browsers from the specified cache directory', yargs => {\n      __classPrivateFieldGet(this, _CLI_instances, \"m\", _CLI_definePathParameter).call(this, yargs, true);\n    }, async argv => {\n      var _a, _b;\n      const args = argv;\n      const cacheDir = (_a = args.path) !== null && _a !== void 0 ? _a : __classPrivateFieldGet(this, _CLI_cachePath, \"f\");\n      const rl = (_b = __classPrivateFieldGet(this, _CLI_rl, \"f\")) !== null && _b !== void 0 ? _b : readline.createInterface({\n        input,\n        output\n      });\n      rl.question(`Do you want to permanently and recursively delete the content of ${cacheDir} (yes/No)? `, answer => {\n        rl.close();\n        if (!['y', 'yes'].includes(answer.toLowerCase().trim())) {\n          console.log('Cancelled.');\n          return;\n        }\n        const cache = new Cache(cacheDir);\n        cache.clear();\n        console.log(`${cacheDir} cleared.`);\n      });\n    }).demandCommand(1).help().wrap(Math.min(120, yargsInstance.terminalWidth())).parse();\n  }\n}\n_CLI_cachePath = new WeakMap(), _CLI_rl = new WeakMap(), _CLI_instances = new WeakSet(), _CLI_defineBrowserParameter = function _CLI_defineBrowserParameter(yargs) {\n  yargs.positional('browser', {\n    description: 'Which browser to install <browser>[@<buildId|latest>]. `latest` will try to find the latest available build. `buildId` is a browser-specific identifier such as a version or a revision.',\n    type: 'string',\n    coerce: opt => {\n      return {\n        name: __classPrivateFieldGet(this, _CLI_instances, \"m\", _CLI_parseBrowser).call(this, opt),\n        buildId: __classPrivateFieldGet(this, _CLI_instances, \"m\", _CLI_parseBuildId).call(this, opt)\n      };\n    }\n  });\n}, _CLI_definePlatformParameter = function _CLI_definePlatformParameter(yargs) {\n  yargs.option('platform', {\n    type: 'string',\n    desc: 'Platform that the binary needs to be compatible with.',\n    choices: Object.values(BrowserPlatform),\n    defaultDescription: 'Auto-detected'\n  });\n}, _CLI_definePathParameter = function _CLI_definePathParameter(yargs, required = false) {\n  yargs.option('path', {\n    type: 'string',\n    desc: 'Path to the root folder for the browser downloads and installation. The installation folder structure is compatible with the cache structure used by Puppeteer.',\n    defaultDescription: 'Current working directory',\n    ...(required ? {} : {\n      default: process.cwd()\n    })\n  });\n  if (required) {\n    yargs.demandOption('path');\n  }\n}, _CLI_parseBrowser = function _CLI_parseBrowser(version) {\n  return version.split('@').shift();\n}, _CLI_parseBuildId = function _CLI_parseBuildId(version) {\n  var _a;\n  return (_a = version.split('@').pop()) !== null && _a !== void 0 ? _a : 'latest';\n};\n/**\n * @public\n */\nexport function makeProgressCallback(browser, buildId) {\n  let progressBar;\n  let lastDownloadedBytes = 0;\n  return (downloadedBytes, totalBytes) => {\n    if (!progressBar) {\n      progressBar = new ProgressBar(`Downloading ${browser} r${buildId} - ${toMegabytes(totalBytes)} [:bar] :percent :etas `, {\n        complete: '=',\n        incomplete: ' ',\n        width: 20,\n        total: totalBytes\n      });\n    }\n    const delta = downloadedBytes - lastDownloadedBytes;\n    lastDownloadedBytes = downloadedBytes;\n    progressBar.tick(delta);\n  };\n}\nfunction toMegabytes(bytes) {\n  const mb = bytes / 1000 / 1000;\n  return `${Math.round(mb * 10) / 10} MB`;\n}","map":{"version":3,"names":["stdin","input","stdout","output","readline","ProgressBar","hideBin","yargs","resolveBuildId","BrowserPlatform","Cache","detectBrowserPlatform","install","computeExecutablePath","computeSystemExecutablePath","launch","CLI","constructor","cachePath","process","cwd","rl","_CLI_cachePath","set","_CLI_rl","__classPrivateFieldSet","run","argv","yargsInstance","scriptName","command","__classPrivateFieldGet","_CLI_instances","_CLI_defineBrowserParameter","call","_CLI_definePlatformParameter","_CLI_definePathParameter","option","type","desc","example","args","_a","platform","Error","browser","buildId","name","cacheDir","_b","path","downloadProgressCallback","makeProgressCallback","baseUrl","console","log","_c","default","executablePath","system","channel","detached","createInterface","question","answer","close","includes","toLowerCase","trim","cache","clear","demandCommand","help","wrap","Math","min","terminalWidth","parse","positional","description","coerce","opt","_CLI_parseBrowser","_CLI_parseBuildId","choices","Object","values","defaultDescription","required","demandOption","version","split","shift","pop","progressBar","lastDownloadedBytes","downloadedBytes","totalBytes","toMegabytes","complete","incomplete","width","total","delta","tick","bytes","mb","round"],"sources":["../../src/CLI.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}