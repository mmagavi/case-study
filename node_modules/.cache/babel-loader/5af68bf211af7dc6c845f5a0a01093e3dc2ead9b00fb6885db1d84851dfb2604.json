{"ast":null,"code":"/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _BrowserFetcher_instances, _BrowserFetcher_product, _BrowserFetcher_downloadPath, _BrowserFetcher_downloadHost, _BrowserFetcher_platform, _BrowserFetcher_getFolderPath;\nimport { exec as execChildProcess } from 'child_process';\nimport { createReadStream, createWriteStream, existsSync, readdirSync } from 'fs';\nimport { chmod, mkdir, readdir, unlink } from 'fs/promises';\nimport http from 'http';\nimport https from 'https';\nimport os from 'os';\nimport path from 'path';\nimport URL from 'url';\nimport { promisify, format } from 'util';\nimport extractZip from 'extract-zip';\nimport createHttpsProxyAgent from 'https-proxy-agent';\nimport { getProxyForUrl } from 'proxy-from-env';\nimport tar from 'tar-fs';\nimport bzip from 'unbzip2-stream';\nimport { debug } from '../common/Debug.js';\nimport { assert } from '../util/assert.js';\nimport { rm } from './util/fs.js';\nconst debugFetcher = debug('puppeteer:fetcher');\nconst downloadURLs = {\n  chrome: {\n    linux: '%s/chromium-browser-snapshots/Linux_x64/%d/%s.zip',\n    mac: '%s/chromium-browser-snapshots/Mac/%d/%s.zip',\n    mac_arm: '%s/chromium-browser-snapshots/Mac_Arm/%d/%s.zip',\n    win32: '%s/chromium-browser-snapshots/Win/%d/%s.zip',\n    win64: '%s/chromium-browser-snapshots/Win_x64/%d/%s.zip'\n  },\n  firefox: {\n    linux: '%s/firefox-%s.en-US.%s-x86_64.tar.bz2',\n    mac: '%s/firefox-%s.en-US.%s.dmg',\n    win32: '%s/firefox-%s.en-US.%s.zip',\n    win64: '%s/firefox-%s.en-US.%s.zip'\n  }\n};\nconst browserConfig = {\n  chrome: {\n    host: 'https://storage.googleapis.com'\n  },\n  firefox: {\n    host: 'https://archive.mozilla.org/pub/firefox/nightly/latest-mozilla-central'\n  }\n};\nconst exec = promisify(execChildProcess);\nfunction archiveName(product, platform, revision) {\n  switch (product) {\n    case 'chrome':\n      switch (platform) {\n        case 'linux':\n          return 'chrome-linux';\n        case 'mac_arm':\n        case 'mac':\n          return 'chrome-mac';\n        case 'win32':\n        case 'win64':\n          // Windows archive name changed at r591479.\n          return parseInt(revision, 10) > 591479 ? 'chrome-win' : 'chrome-win32';\n      }\n    case 'firefox':\n      return platform;\n  }\n}\nfunction downloadURL(product, platform, host, revision) {\n  const url = format(downloadURLs[product][platform], host, revision, archiveName(product, platform, revision));\n  return url;\n}\nfunction handleArm64() {\n  let exists = existsSync('/usr/bin/chromium-browser');\n  if (exists) {\n    return;\n  }\n  exists = existsSync('/usr/bin/chromium');\n  if (exists) {\n    return;\n  }\n  console.error('The chromium binary is not available for arm64.' + '\\nIf you are on Ubuntu, you can install with: ' + '\\n\\n sudo apt install chromium\\n' + '\\n\\n sudo apt install chromium-browser\\n');\n  throw new Error();\n}\n/**\n * BrowserFetcher can download and manage different versions of Chromium and\n * Firefox.\n *\n * @remarks\n * BrowserFetcher operates on revision strings that specify a precise version of\n * Chromium, e.g. `\"533271\"`. Revision strings can be obtained from\n * {@link http://omahaproxy.appspot.com/ | omahaproxy.appspot.com}. For Firefox,\n * BrowserFetcher downloads Firefox Nightly and operates on version numbers such\n * as `\"75\"`.\n *\n * @remarks\n * The default constructed fetcher will always be for Chromium unless otherwise\n * specified.\n *\n * @remarks\n * BrowserFetcher is not designed to work concurrently with other instances of\n * BrowserFetcher that share the same downloads directory.\n *\n * @example\n * An example of using BrowserFetcher to download a specific version of Chromium\n * and running Puppeteer against it:\n *\n * ```ts\n * const browserFetcher = new BrowserFetcher({path: 'path/to/download/folder'});\n * const revisionInfo = await browserFetcher.download('533271');\n * const browser = await puppeteer.launch({\n *   executablePath: revisionInfo.executablePath,\n * });\n * ```\n *\n * @public\n */\nexport class BrowserFetcher {\n  /**\n   * Constructs a browser fetcher for the given options.\n   */\n  constructor(options) {\n    var _a, _b;\n    _BrowserFetcher_instances.add(this);\n    _BrowserFetcher_product.set(this, void 0);\n    _BrowserFetcher_downloadPath.set(this, void 0);\n    _BrowserFetcher_downloadHost.set(this, void 0);\n    _BrowserFetcher_platform.set(this, void 0);\n    __classPrivateFieldSet(this, _BrowserFetcher_product, (_a = options.product) !== null && _a !== void 0 ? _a : 'chrome', \"f\");\n    __classPrivateFieldSet(this, _BrowserFetcher_downloadPath, options.path, \"f\");\n    __classPrivateFieldSet(this, _BrowserFetcher_downloadHost, (_b = options.host) !== null && _b !== void 0 ? _b : browserConfig[__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\")].host, \"f\");\n    if (options.platform) {\n      __classPrivateFieldSet(this, _BrowserFetcher_platform, options.platform, \"f\");\n    } else {\n      const platform = os.platform();\n      switch (platform) {\n        case 'darwin':\n          switch (__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\")) {\n            case 'chrome':\n              __classPrivateFieldSet(this, _BrowserFetcher_platform, os.arch() === 'arm64' && options.useMacOSARMBinary ? 'mac_arm' : 'mac', \"f\");\n              break;\n            case 'firefox':\n              __classPrivateFieldSet(this, _BrowserFetcher_platform, 'mac', \"f\");\n              break;\n          }\n          break;\n        case 'linux':\n          __classPrivateFieldSet(this, _BrowserFetcher_platform, 'linux', \"f\");\n          break;\n        case 'win32':\n          __classPrivateFieldSet(this, _BrowserFetcher_platform, os.arch() === 'x64' ||\n          // Windows 11 for ARM supports x64 emulation\n          os.arch() === 'arm64' && isWindows11(os.release()) ? 'win64' : 'win32', \"f\");\n          return;\n        default:\n          assert(false, 'Unsupported platform: ' + platform);\n      }\n    }\n    assert(downloadURLs[__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\")][__classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\")], 'Unsupported platform: ' + __classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\"));\n  }\n  /**\n   * Returns the current `Platform`, which is one of `mac`, `linux`,\n   * `win32` or `win64`.\n   */\n  platform() {\n    return __classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\");\n  }\n  /**\n   * Returns the current `Product`, which is one of `chrome` or\n   * `firefox`.\n   */\n  product() {\n    return __classPrivateFieldGet(this, _BrowserFetcher_product, \"f\");\n  }\n  /**\n   * The download host being used.\n   */\n  host() {\n    return __classPrivateFieldGet(this, _BrowserFetcher_downloadHost, \"f\");\n  }\n  /**\n   * Initiates a HEAD request to check if the revision is available.\n   * @remarks\n   * This method is affected by the current `product`.\n   * @param revision - The revision to check availability for.\n   * @returns A promise that resolves to `true` if the revision could be downloaded\n   * from the host.\n   */\n  canDownload(revision) {\n    const url = downloadURL(__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\"), __classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\"), __classPrivateFieldGet(this, _BrowserFetcher_downloadHost, \"f\"), revision);\n    return new Promise(resolve => {\n      const request = httpRequest(url, 'HEAD', response => {\n        resolve(response.statusCode === 200);\n      }, false);\n      request.on('error', error => {\n        console.error(error);\n        resolve(false);\n      });\n    });\n  }\n  /**\n   * Initiates a GET request to download the revision from the host.\n   * @remarks\n   * This method is affected by the current `product`.\n   * @param revision - The revision to download.\n   * @param progressCallback - A function that will be called with two arguments:\n   * How many bytes have been downloaded and the total number of bytes of the download.\n   * @returns A promise with revision information when the revision is downloaded\n   * and extracted.\n   */\n  async download(revision, progressCallback = () => {}) {\n    const url = downloadURL(__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\"), __classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\"), __classPrivateFieldGet(this, _BrowserFetcher_downloadHost, \"f\"), revision);\n    const fileName = url.split('/').pop();\n    assert(fileName, `A malformed download URL was found: ${url}.`);\n    const archivePath = path.join(__classPrivateFieldGet(this, _BrowserFetcher_downloadPath, \"f\"), fileName);\n    const outputPath = __classPrivateFieldGet(this, _BrowserFetcher_instances, \"m\", _BrowserFetcher_getFolderPath).call(this, revision);\n    if (existsSync(outputPath)) {\n      return this.revisionInfo(revision);\n    }\n    if (!existsSync(__classPrivateFieldGet(this, _BrowserFetcher_downloadPath, \"f\"))) {\n      await mkdir(__classPrivateFieldGet(this, _BrowserFetcher_downloadPath, \"f\"), {\n        recursive: true\n      });\n    }\n    // Use system Chromium builds on Linux ARM devices\n    if (os.platform() === 'linux' && os.arch() === 'arm64') {\n      handleArm64();\n      return;\n    }\n    try {\n      await _downloadFile(url, archivePath, progressCallback);\n      await install(archivePath, outputPath);\n    } finally {\n      if (existsSync(archivePath)) {\n        await unlink(archivePath);\n      }\n    }\n    const revisionInfo = this.revisionInfo(revision);\n    if (revisionInfo) {\n      await chmod(revisionInfo.executablePath, 0o755);\n    }\n    return revisionInfo;\n  }\n  /**\n   * @remarks\n   * This method is affected by the current `product`.\n   * @returns A list of all revision strings (for the current `product`)\n   * available locally on disk.\n   */\n  localRevisions() {\n    if (!existsSync(__classPrivateFieldGet(this, _BrowserFetcher_downloadPath, \"f\"))) {\n      return [];\n    }\n    const fileNames = readdirSync(__classPrivateFieldGet(this, _BrowserFetcher_downloadPath, \"f\"));\n    return fileNames.map(fileName => {\n      return parseFolderPath(__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\"), fileName);\n    }).filter(entry => {\n      var _a;\n      return (_a = entry && entry.platform === __classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\")) !== null && _a !== void 0 ? _a : false;\n    }).map(entry => {\n      return entry.revision;\n    });\n  }\n  /**\n   * @remarks\n   * This method is affected by the current `product`.\n   * @param revision - A revision to remove for the current `product`.\n   * @returns A promise that resolves when the revision has been removed or\n   * throws if the revision has not been downloaded.\n   */\n  async remove(revision) {\n    const folderPath = __classPrivateFieldGet(this, _BrowserFetcher_instances, \"m\", _BrowserFetcher_getFolderPath).call(this, revision);\n    assert(existsSync(folderPath), `Failed to remove: revision ${revision} is not downloaded`);\n    await rm(folderPath);\n  }\n  /**\n   * @param revision - The revision to get info for.\n   * @returns The revision info for the given revision.\n   */\n  revisionInfo(revision) {\n    const folderPath = __classPrivateFieldGet(this, _BrowserFetcher_instances, \"m\", _BrowserFetcher_getFolderPath).call(this, revision);\n    let executablePath = '';\n    switch (__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\")) {\n      case 'chrome':\n        switch (__classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\")) {\n          case 'mac':\n          case 'mac_arm':\n            executablePath = path.join(folderPath, archiveName(__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\"), __classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\"), revision), 'Chromium.app', 'Contents', 'MacOS', 'Chromium');\n            break;\n          case 'linux':\n            executablePath = path.join(folderPath, archiveName(__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\"), __classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\"), revision), 'chrome');\n            break;\n          case 'win32':\n          case 'win64':\n            executablePath = path.join(folderPath, archiveName(__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\"), __classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\"), revision), 'chrome.exe');\n            break;\n        }\n        break;\n      case 'firefox':\n        switch (__classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\")) {\n          case 'mac':\n          case 'mac_arm':\n            executablePath = path.join(folderPath, 'Firefox Nightly.app', 'Contents', 'MacOS', 'firefox');\n            break;\n          case 'linux':\n            executablePath = path.join(folderPath, 'firefox', 'firefox');\n            break;\n          case 'win32':\n          case 'win64':\n            executablePath = path.join(folderPath, 'firefox', 'firefox.exe');\n            break;\n        }\n    }\n    const url = downloadURL(__classPrivateFieldGet(this, _BrowserFetcher_product, \"f\"), __classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\"), __classPrivateFieldGet(this, _BrowserFetcher_downloadHost, \"f\"), revision);\n    const local = existsSync(folderPath);\n    debugFetcher({\n      revision,\n      executablePath,\n      folderPath,\n      local,\n      url,\n      product: __classPrivateFieldGet(this, _BrowserFetcher_product, \"f\")\n    });\n    return {\n      revision,\n      executablePath,\n      folderPath,\n      local,\n      url,\n      product: __classPrivateFieldGet(this, _BrowserFetcher_product, \"f\")\n    };\n  }\n  /**\n   * @internal\n   */\n  getDownloadPath() {\n    return __classPrivateFieldGet(this, _BrowserFetcher_downloadPath, \"f\");\n  }\n}\n_BrowserFetcher_product = new WeakMap(), _BrowserFetcher_downloadPath = new WeakMap(), _BrowserFetcher_downloadHost = new WeakMap(), _BrowserFetcher_platform = new WeakMap(), _BrowserFetcher_instances = new WeakSet(), _BrowserFetcher_getFolderPath = function _BrowserFetcher_getFolderPath(revision) {\n  return path.resolve(__classPrivateFieldGet(this, _BrowserFetcher_downloadPath, \"f\"), `${__classPrivateFieldGet(this, _BrowserFetcher_platform, \"f\")}-${revision}`);\n};\nfunction parseFolderPath(product, folderPath) {\n  const name = path.basename(folderPath);\n  const splits = name.split('-');\n  if (splits.length !== 2) {\n    return;\n  }\n  const [platform, revision] = splits;\n  if (!revision || !platform || !(platform in downloadURLs[product])) {\n    return;\n  }\n  return {\n    product,\n    platform,\n    revision\n  };\n}\n/**\n * Windows 11 is identified by 10.0.22000 or greater\n * @internal\n */\nfunction isWindows11(version) {\n  const parts = version.split('.');\n  if (parts.length > 2) {\n    const major = parseInt(parts[0], 10);\n    const minor = parseInt(parts[1], 10);\n    const patch = parseInt(parts[2], 10);\n    return major > 10 || major === 10 && minor > 0 || major === 10 && minor === 0 && patch >= 22000;\n  }\n  return false;\n}\n/**\n * @internal\n */\nfunction _downloadFile(url, destinationPath, progressCallback) {\n  debugFetcher(`Downloading binary from ${url}`);\n  let fulfill;\n  let reject;\n  const promise = new Promise((x, y) => {\n    fulfill = x;\n    reject = y;\n  });\n  let downloadedBytes = 0;\n  let totalBytes = 0;\n  const request = httpRequest(url, 'GET', response => {\n    if (response.statusCode !== 200) {\n      const error = new Error(`Download failed: server returned code ${response.statusCode}. URL: ${url}`);\n      // consume response data to free up memory\n      response.resume();\n      reject(error);\n      return;\n    }\n    const file = createWriteStream(destinationPath);\n    file.on('finish', () => {\n      return fulfill();\n    });\n    file.on('error', error => {\n      return reject(error);\n    });\n    response.pipe(file);\n    totalBytes = parseInt(response.headers['content-length'], 10);\n    if (progressCallback) {\n      response.on('data', onData);\n    }\n  });\n  request.on('error', error => {\n    return reject(error);\n  });\n  return promise;\n  function onData(chunk) {\n    downloadedBytes += chunk.length;\n    progressCallback(downloadedBytes, totalBytes);\n  }\n}\nasync function install(archivePath, folderPath) {\n  debugFetcher(`Installing ${archivePath} to ${folderPath}`);\n  if (archivePath.endsWith('.zip')) {\n    await extractZip(archivePath, {\n      dir: folderPath\n    });\n  } else if (archivePath.endsWith('.tar.bz2')) {\n    await extractTar(archivePath, folderPath);\n  } else if (archivePath.endsWith('.dmg')) {\n    await mkdir(folderPath);\n    await installDMG(archivePath, folderPath);\n  } else {\n    throw new Error(`Unsupported archive format: ${archivePath}`);\n  }\n}\n/**\n * @internal\n */\nfunction extractTar(tarPath, folderPath) {\n  return new Promise((fulfill, reject) => {\n    const tarStream = tar.extract(folderPath);\n    tarStream.on('error', reject);\n    tarStream.on('finish', fulfill);\n    const readStream = createReadStream(tarPath);\n    readStream.pipe(bzip()).pipe(tarStream);\n  });\n}\n/**\n * @internal\n */\nasync function installDMG(dmgPath, folderPath) {\n  const {\n    stdout\n  } = await exec(`hdiutil attach -nobrowse -noautoopen \"${dmgPath}\"`);\n  const volumes = stdout.match(/\\/Volumes\\/(.*)/m);\n  if (!volumes) {\n    throw new Error(`Could not find volume path in ${stdout}`);\n  }\n  const mountPath = volumes[0];\n  try {\n    const fileNames = await readdir(mountPath);\n    const appName = fileNames.find(item => {\n      return typeof item === 'string' && item.endsWith('.app');\n    });\n    if (!appName) {\n      throw new Error(`Cannot find app in ${mountPath}`);\n    }\n    const mountedPath = path.join(mountPath, appName);\n    debugFetcher(`Copying ${mountedPath} to ${folderPath}`);\n    await exec(`cp -R \"${mountedPath}\" \"${folderPath}\"`);\n  } finally {\n    debugFetcher(`Unmounting ${mountPath}`);\n    await exec(`hdiutil detach \"${mountPath}\" -quiet`);\n  }\n}\nfunction httpRequest(url, method, response, keepAlive = true) {\n  const urlParsed = URL.parse(url);\n  let options = {\n    ...urlParsed,\n    method,\n    headers: keepAlive ? {\n      Connection: 'keep-alive'\n    } : undefined\n  };\n  const proxyURL = getProxyForUrl(url);\n  if (proxyURL) {\n    if (url.startsWith('http:')) {\n      const proxy = URL.parse(proxyURL);\n      options = {\n        path: options.href,\n        host: proxy.hostname,\n        port: proxy.port\n      };\n    } else {\n      const parsedProxyURL = URL.parse(proxyURL);\n      const proxyOptions = {\n        ...parsedProxyURL,\n        secureProxy: parsedProxyURL.protocol === 'https:'\n      };\n      options.agent = createHttpsProxyAgent(proxyOptions);\n      options.rejectUnauthorized = false;\n    }\n  }\n  const requestCallback = res => {\n    if (res.statusCode && res.statusCode >= 300 && res.statusCode < 400 && res.headers.location) {\n      httpRequest(res.headers.location, method, response);\n    } else {\n      response(res);\n    }\n  };\n  const request = options.protocol === 'https:' ? https.request(options, requestCallback) : http.request(options, requestCallback);\n  request.end();\n  return request;\n}","map":{"version":3,"names":["exec","execChildProcess","createReadStream","createWriteStream","existsSync","readdirSync","chmod","mkdir","readdir","unlink","http","https","os","path","URL","promisify","format","extractZip","createHttpsProxyAgent","getProxyForUrl","tar","bzip","debug","assert","rm","debugFetcher","downloadURLs","chrome","linux","mac","mac_arm","win32","win64","firefox","browserConfig","host","archiveName","product","platform","revision","parseInt","downloadURL","url","handleArm64","exists","console","error","Error","BrowserFetcher","constructor","options","_BrowserFetcher_product","set","_BrowserFetcher_downloadPath","_BrowserFetcher_downloadHost","_BrowserFetcher_platform","__classPrivateFieldSet","_a","_b","__classPrivateFieldGet","arch","useMacOSARMBinary","isWindows11","release","canDownload","Promise","resolve","request","httpRequest","response","statusCode","on","download","progressCallback","fileName","split","pop","archivePath","join","outputPath","_BrowserFetcher_instances","_BrowserFetcher_getFolderPath","call","revisionInfo","recursive","_downloadFile","install","executablePath","localRevisions","fileNames","map","parseFolderPath","filter","entry","remove","folderPath","local","getDownloadPath","name","basename","splits","length","version","parts","major","minor","patch","destinationPath","fulfill","reject","promise","x","y","downloadedBytes","totalBytes","resume","file","pipe","headers","onData","chunk","endsWith","dir","extractTar","installDMG","tarPath","tarStream","extract","readStream","dmgPath","stdout","volumes","match","mountPath","appName","find","item","mountedPath","method","keepAlive","urlParsed","parse","Connection","undefined","proxyURL","startsWith","proxy","href","hostname","port","parsedProxyURL","proxyOptions","secureProxy","protocol","agent","rejectUnauthorized","requestCallback","res","location","end"],"sources":["../../../../src/node/BrowserFetcher.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}