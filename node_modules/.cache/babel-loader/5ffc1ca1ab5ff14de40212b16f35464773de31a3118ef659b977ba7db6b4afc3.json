{"ast":null,"code":"import { OpenAI as OpenAIClient } from \"openai\";\nimport { BaseChain } from \"./base.js\";\nimport { AsyncCaller } from \"../util/async_caller.js\";\nimport { getEnvironmentVariable } from \"../util/env.js\";\n/**\n * Class representing a chain for moderating text using the OpenAI\n * Moderation API. It extends the BaseChain class and implements the\n * OpenAIModerationChainInput interface.\n */\nexport class OpenAIModerationChain extends BaseChain {\n  static lc_name() {\n    return \"OpenAIModerationChain\";\n  }\n  get lc_secrets() {\n    return {\n      openAIApiKey: \"OPENAI_API_KEY\"\n    };\n  }\n  constructor(fields) {\n    super(fields);\n    Object.defineProperty(this, \"inputKey\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"input\"\n    });\n    Object.defineProperty(this, \"outputKey\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"output\"\n    });\n    Object.defineProperty(this, \"openAIApiKey\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"openAIOrganization\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"clientConfig\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"client\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"throwError\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"caller\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.throwError = fields?.throwError ?? false;\n    this.openAIApiKey = fields?.openAIApiKey ?? getEnvironmentVariable(\"OPENAI_API_KEY\");\n    if (!this.openAIApiKey) {\n      throw new Error(\"OpenAI API key not found\");\n    }\n    this.openAIOrganization = fields?.openAIOrganization;\n    this.clientConfig = {\n      ...fields?.configuration,\n      apiKey: this.openAIApiKey,\n      organization: this.openAIOrganization\n    };\n    this.client = new OpenAIClient(this.clientConfig);\n    this.caller = new AsyncCaller(fields ?? {});\n  }\n  _moderate(text, results) {\n    if (results.flagged) {\n      const errorStr = \"Text was found that violates OpenAI's content policy.\";\n      if (this.throwError) {\n        throw new Error(errorStr);\n      } else {\n        return errorStr;\n      }\n    }\n    return text;\n  }\n  async _call(values) {\n    const text = values[this.inputKey];\n    const moderationRequest = {\n      input: text\n    };\n    let mod;\n    try {\n      mod = await this.caller.call(() => this.client.moderations.create(moderationRequest));\n    } catch (error) {\n      // eslint-disable-next-line no-instanceof/no-instanceof\n      if (error instanceof Error) {\n        throw error;\n      } else {\n        throw new Error(error);\n      }\n    }\n    const output = this._moderate(text, mod.results[0]);\n    return {\n      [this.outputKey]: output\n    };\n  }\n  _chainType() {\n    return \"moderation_chain\";\n  }\n  get inputKeys() {\n    return [this.inputKey];\n  }\n  get outputKeys() {\n    return [this.outputKey];\n  }\n}","map":{"version":3,"names":["OpenAI","OpenAIClient","BaseChain","AsyncCaller","getEnvironmentVariable","OpenAIModerationChain","lc_name","lc_secrets","openAIApiKey","constructor","fields","Object","defineProperty","enumerable","configurable","writable","value","throwError","Error","openAIOrganization","clientConfig","configuration","apiKey","organization","client","caller","_moderate","text","results","flagged","errorStr","_call","values","inputKey","moderationRequest","input","mod","call","moderations","create","error","output","outputKey","_chainType","inputKeys","outputKeys"],"sources":["/Users/mayamagavi/instalily/case-study/node_modules/langchain/dist/chains/openai_moderation.js"],"sourcesContent":["import { OpenAI as OpenAIClient } from \"openai\";\nimport { BaseChain } from \"./base.js\";\nimport { AsyncCaller } from \"../util/async_caller.js\";\nimport { getEnvironmentVariable } from \"../util/env.js\";\n/**\n * Class representing a chain for moderating text using the OpenAI\n * Moderation API. It extends the BaseChain class and implements the\n * OpenAIModerationChainInput interface.\n */\nexport class OpenAIModerationChain extends BaseChain {\n    static lc_name() {\n        return \"OpenAIModerationChain\";\n    }\n    get lc_secrets() {\n        return {\n            openAIApiKey: \"OPENAI_API_KEY\",\n        };\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"input\"\n        });\n        Object.defineProperty(this, \"outputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"output\"\n        });\n        Object.defineProperty(this, \"openAIApiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"openAIOrganization\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"clientConfig\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"throwError\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"caller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.throwError = fields?.throwError ?? false;\n        this.openAIApiKey =\n            fields?.openAIApiKey ?? getEnvironmentVariable(\"OPENAI_API_KEY\");\n        if (!this.openAIApiKey) {\n            throw new Error(\"OpenAI API key not found\");\n        }\n        this.openAIOrganization = fields?.openAIOrganization;\n        this.clientConfig = {\n            ...fields?.configuration,\n            apiKey: this.openAIApiKey,\n            organization: this.openAIOrganization,\n        };\n        this.client = new OpenAIClient(this.clientConfig);\n        this.caller = new AsyncCaller(fields ?? {});\n    }\n    _moderate(text, results) {\n        if (results.flagged) {\n            const errorStr = \"Text was found that violates OpenAI's content policy.\";\n            if (this.throwError) {\n                throw new Error(errorStr);\n            }\n            else {\n                return errorStr;\n            }\n        }\n        return text;\n    }\n    async _call(values) {\n        const text = values[this.inputKey];\n        const moderationRequest = {\n            input: text,\n        };\n        let mod;\n        try {\n            mod = await this.caller.call(() => this.client.moderations.create(moderationRequest));\n        }\n        catch (error) {\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (error instanceof Error) {\n                throw error;\n            }\n            else {\n                throw new Error(error);\n            }\n        }\n        const output = this._moderate(text, mod.results[0]);\n        return {\n            [this.outputKey]: output,\n        };\n    }\n    _chainType() {\n        return \"moderation_chain\";\n    }\n    get inputKeys() {\n        return [this.inputKey];\n    }\n    get outputKeys() {\n        return [this.outputKey];\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}