{"ast":null,"code":"/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _CDPElementHandle_instances, _CDPElementHandle_frame, _CDPElementHandle_frameManager_get, _CDPElementHandle_page_get, _CDPElementHandle_checkVisibility, _CDPElementHandle_scrollIntoViewIfNeeded, _CDPElementHandle_getOOPIFOffsets, _CDPElementHandle_getBoxModel, _CDPElementHandle_fromProtocolQuad, _CDPElementHandle_intersectQuadWithViewport;\nimport { ElementHandle } from '../api/ElementHandle.js';\nimport { assert } from '../util/assert.js';\nimport { AsyncIterableUtil } from '../util/AsyncIterableUtil.js';\nimport { getQueryHandlerAndSelector } from './GetQueryHandler.js';\nimport { PUPPETEER_WORLD } from './IsolatedWorlds.js';\nimport { CDPJSHandle } from './JSHandle.js';\nimport { LazyArg } from './LazyArg.js';\nimport { debugError, isString } from './util.js';\nconst applyOffsetsToQuad = (quad, offsetX, offsetY) => {\n  return quad.map(part => {\n    return {\n      x: part.x + offsetX,\n      y: part.y + offsetY\n    };\n  });\n};\n/**\n * The CDPElementHandle extends ElementHandle now to keep compatibility\n * with `instanceof` because of that we need to have methods for\n * CDPJSHandle to in this implementation as well.\n *\n * @internal\n */\nexport class CDPElementHandle extends ElementHandle {\n  constructor(context, remoteObject, frame) {\n    super(new CDPJSHandle(context, remoteObject));\n    _CDPElementHandle_instances.add(this);\n    _CDPElementHandle_frame.set(this, void 0);\n    __classPrivateFieldSet(this, _CDPElementHandle_frame, frame, \"f\");\n  }\n  /**\n   * @internal\n   */\n  executionContext() {\n    return this.handle.executionContext();\n  }\n  /**\n   * @internal\n   */\n  get client() {\n    return this.handle.client;\n  }\n  remoteObject() {\n    return this.handle.remoteObject();\n  }\n  get frame() {\n    return __classPrivateFieldGet(this, _CDPElementHandle_frame, \"f\");\n  }\n  async $(selector) {\n    const {\n      updatedSelector,\n      QueryHandler\n    } = getQueryHandlerAndSelector(selector);\n    return await QueryHandler.queryOne(this, updatedSelector);\n  }\n  async $$(selector) {\n    const {\n      updatedSelector,\n      QueryHandler\n    } = getQueryHandlerAndSelector(selector);\n    return AsyncIterableUtil.collect(QueryHandler.queryAll(this, updatedSelector));\n  }\n  async $eval(selector, pageFunction, ...args) {\n    const elementHandle = await this.$(selector);\n    if (!elementHandle) {\n      throw new Error(`Error: failed to find element matching selector \"${selector}\"`);\n    }\n    const result = await elementHandle.evaluate(pageFunction, ...args);\n    await elementHandle.dispose();\n    return result;\n  }\n  async $$eval(selector, pageFunction, ...args) {\n    const results = await this.$$(selector);\n    const elements = await this.evaluateHandle((_, ...elements) => {\n      return elements;\n    }, ...results);\n    const [result] = await Promise.all([elements.evaluate(pageFunction, ...args), ...results.map(results => {\n      return results.dispose();\n    })]);\n    await elements.dispose();\n    return result;\n  }\n  async $x(expression) {\n    if (expression.startsWith('//')) {\n      expression = `.${expression}`;\n    }\n    return this.$$(`xpath/${expression}`);\n  }\n  async waitForSelector(selector, options = {}) {\n    const {\n      updatedSelector,\n      QueryHandler\n    } = getQueryHandlerAndSelector(selector);\n    return await QueryHandler.waitFor(this, updatedSelector, options);\n  }\n  async waitForXPath(xpath, options = {}) {\n    if (xpath.startsWith('//')) {\n      xpath = `.${xpath}`;\n    }\n    return this.waitForSelector(`xpath/${xpath}`, options);\n  }\n  async isVisible() {\n    return __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_checkVisibility).call(this, true);\n  }\n  async isHidden() {\n    return __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_checkVisibility).call(this, false);\n  }\n  async toElement(tagName) {\n    const isMatchingTagName = await this.evaluate((node, tagName) => {\n      return node.nodeName === tagName.toUpperCase();\n    }, tagName);\n    if (!isMatchingTagName) {\n      throw new Error(`Element is not a(n) \\`${tagName}\\` element`);\n    }\n    return this;\n  }\n  async contentFrame() {\n    const nodeInfo = await this.client.send('DOM.describeNode', {\n      objectId: this.remoteObject().objectId\n    });\n    if (typeof nodeInfo.node.frameId !== 'string') {\n      return null;\n    }\n    return __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_frameManager_get).frame(nodeInfo.node.frameId);\n  }\n  async scrollIntoView() {\n    await this.assertConnectedElement();\n    try {\n      await this.client.send('DOM.scrollIntoViewIfNeeded', {\n        objectId: this.remoteObject().objectId\n      });\n    } catch (error) {\n      debugError(error);\n      // Fallback to Element.scrollIntoView if DOM.scrollIntoViewIfNeeded is not supported\n      await this.evaluate(async element => {\n        element.scrollIntoView({\n          block: 'center',\n          inline: 'center',\n          // @ts-expect-error Chrome still supports behavior: instant but\n          // it's not in the spec so TS shouts We don't want to make this\n          // breaking change in Puppeteer yet so we'll ignore the line.\n          behavior: 'instant'\n        });\n      });\n    }\n  }\n  async clickablePoint(offset) {\n    const [result, layoutMetrics] = await Promise.all([this.client.send('DOM.getContentQuads', {\n      objectId: this.remoteObject().objectId\n    }).catch(debugError), __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get)._client().send('Page.getLayoutMetrics')]);\n    if (!result || !result.quads.length) {\n      throw new Error('Node is either not clickable or not an HTMLElement');\n    }\n    // Filter out quads that have too small area to click into.\n    // Fallback to `layoutViewport` in case of using Firefox.\n    const {\n      clientWidth,\n      clientHeight\n    } = layoutMetrics.cssLayoutViewport || layoutMetrics.layoutViewport;\n    const {\n      offsetX,\n      offsetY\n    } = await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_getOOPIFOffsets).call(this, __classPrivateFieldGet(this, _CDPElementHandle_frame, \"f\"));\n    const quads = result.quads.map(quad => {\n      return __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_fromProtocolQuad).call(this, quad);\n    }).map(quad => {\n      return applyOffsetsToQuad(quad, offsetX, offsetY);\n    }).map(quad => {\n      return __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_intersectQuadWithViewport).call(this, quad, clientWidth, clientHeight);\n    }).filter(quad => {\n      return computeQuadArea(quad) > 1;\n    });\n    if (!quads.length) {\n      throw new Error('Node is either not clickable or not an HTMLElement');\n    }\n    const quad = quads[0];\n    if (offset) {\n      // Return the point of the first quad identified by offset.\n      let minX = Number.MAX_SAFE_INTEGER;\n      let minY = Number.MAX_SAFE_INTEGER;\n      for (const point of quad) {\n        if (point.x < minX) {\n          minX = point.x;\n        }\n        if (point.y < minY) {\n          minY = point.y;\n        }\n      }\n      if (minX !== Number.MAX_SAFE_INTEGER && minY !== Number.MAX_SAFE_INTEGER) {\n        return {\n          x: minX + offset.x,\n          y: minY + offset.y\n        };\n      }\n    }\n    // Return the middle point of the first quad.\n    let x = 0;\n    let y = 0;\n    for (const point of quad) {\n      x += point.x;\n      y += point.y;\n    }\n    return {\n      x: x / 4,\n      y: y / 4\n    };\n  }\n  /**\n   * This method scrolls element into view if needed, and then\n   * uses {@link Page.mouse} to hover over the center of the element.\n   * If the element is detached from DOM, the method throws an error.\n   */\n  async hover() {\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n    const {\n      x,\n      y\n    } = await this.clickablePoint();\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).mouse.move(x, y);\n  }\n  /**\n   * This method scrolls element into view if needed, and then\n   * uses {@link Page.mouse} to click in the center of the element.\n   * If the element is detached from DOM, the method throws an error.\n   */\n  async click(options = {}) {\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n    const {\n      x,\n      y\n    } = await this.clickablePoint(options.offset);\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).mouse.click(x, y, options);\n  }\n  /**\n   * This method creates and captures a dragevent from the element.\n   */\n  async drag(target) {\n    assert(__classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).isDragInterceptionEnabled(), 'Drag Interception is not enabled!');\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n    const start = await this.clickablePoint();\n    return await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).mouse.drag(start, target);\n  }\n  async dragEnter(data = {\n    items: [],\n    dragOperationsMask: 1\n  }) {\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n    const target = await this.clickablePoint();\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).mouse.dragEnter(target, data);\n  }\n  async dragOver(data = {\n    items: [],\n    dragOperationsMask: 1\n  }) {\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n    const target = await this.clickablePoint();\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).mouse.dragOver(target, data);\n  }\n  async drop(data = {\n    items: [],\n    dragOperationsMask: 1\n  }) {\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n    const destination = await this.clickablePoint();\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).mouse.drop(destination, data);\n  }\n  async dragAndDrop(target, options) {\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n    const startPoint = await this.clickablePoint();\n    const targetPoint = await target.clickablePoint();\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).mouse.dragAndDrop(startPoint, targetPoint, options);\n  }\n  async select(...values) {\n    for (const value of values) {\n      assert(isString(value), 'Values must be strings. Found value \"' + value + '\" of type \"' + typeof value + '\"');\n    }\n    return this.evaluate((element, vals) => {\n      const values = new Set(vals);\n      if (!(element instanceof HTMLSelectElement)) {\n        throw new Error('Element is not a <select> element.');\n      }\n      const selectedValues = new Set();\n      if (!element.multiple) {\n        for (const option of element.options) {\n          option.selected = false;\n        }\n        for (const option of element.options) {\n          if (values.has(option.value)) {\n            option.selected = true;\n            selectedValues.add(option.value);\n            break;\n          }\n        }\n      } else {\n        for (const option of element.options) {\n          option.selected = values.has(option.value);\n          if (option.selected) {\n            selectedValues.add(option.value);\n          }\n        }\n      }\n      element.dispatchEvent(new Event('input', {\n        bubbles: true\n      }));\n      element.dispatchEvent(new Event('change', {\n        bubbles: true\n      }));\n      return [...selectedValues.values()];\n    }, values);\n  }\n  async uploadFile(...filePaths) {\n    const isMultiple = await this.evaluate(element => {\n      return element.multiple;\n    });\n    assert(filePaths.length <= 1 || isMultiple, 'Multiple file uploads only work with <input type=file multiple>');\n    // Locate all files and confirm that they exist.\n    let path;\n    try {\n      path = await import('path');\n    } catch (error) {\n      if (error instanceof TypeError) {\n        throw new Error(`JSHandle#uploadFile can only be used in Node-like environments.`);\n      }\n      throw error;\n    }\n    const files = filePaths.map(filePath => {\n      if (path.win32.isAbsolute(filePath) || path.posix.isAbsolute(filePath)) {\n        return filePath;\n      } else {\n        return path.resolve(filePath);\n      }\n    });\n    const {\n      objectId\n    } = this.remoteObject();\n    const {\n      node\n    } = await this.client.send('DOM.describeNode', {\n      objectId\n    });\n    const {\n      backendNodeId\n    } = node;\n    /*  The zero-length array is a special case, it seems that\n         DOM.setFileInputFiles does not actually update the files in that case,\n         so the solution is to eval the element value to a new FileList directly.\n     */\n    if (files.length === 0) {\n      await this.evaluate(element => {\n        element.files = new DataTransfer().files;\n        // Dispatch events for this case because it should behave akin to a user action.\n        element.dispatchEvent(new Event('input', {\n          bubbles: true\n        }));\n        element.dispatchEvent(new Event('change', {\n          bubbles: true\n        }));\n      });\n    } else {\n      await this.client.send('DOM.setFileInputFiles', {\n        objectId,\n        files,\n        backendNodeId\n      });\n    }\n  }\n  async tap() {\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n    const {\n      x,\n      y\n    } = await this.clickablePoint();\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).touchscreen.touchStart(x, y);\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).touchscreen.touchEnd();\n  }\n  async touchStart() {\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n    const {\n      x,\n      y\n    } = await this.clickablePoint();\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).touchscreen.touchStart(x, y);\n  }\n  async touchMove() {\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n    const {\n      x,\n      y\n    } = await this.clickablePoint();\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).touchscreen.touchMove(x, y);\n  }\n  async touchEnd() {\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).touchscreen.touchEnd();\n  }\n  async focus() {\n    await this.evaluate(element => {\n      if (!(element instanceof HTMLElement)) {\n        throw new Error('Cannot focus non-HTMLElement');\n      }\n      return element.focus();\n    });\n  }\n  async type(text, options) {\n    await this.focus();\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).keyboard.type(text, options);\n  }\n  async press(key, options) {\n    await this.focus();\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).keyboard.press(key, options);\n  }\n  async boundingBox() {\n    const result = await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_getBoxModel).call(this);\n    if (!result) {\n      return null;\n    }\n    const {\n      offsetX,\n      offsetY\n    } = await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_getOOPIFOffsets).call(this, __classPrivateFieldGet(this, _CDPElementHandle_frame, \"f\"));\n    const quad = result.model.border;\n    const x = Math.min(quad[0], quad[2], quad[4], quad[6]);\n    const y = Math.min(quad[1], quad[3], quad[5], quad[7]);\n    const width = Math.max(quad[0], quad[2], quad[4], quad[6]) - x;\n    const height = Math.max(quad[1], quad[3], quad[5], quad[7]) - y;\n    return {\n      x: x + offsetX,\n      y: y + offsetY,\n      width,\n      height\n    };\n  }\n  async boxModel() {\n    const result = await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_getBoxModel).call(this);\n    if (!result) {\n      return null;\n    }\n    const {\n      offsetX,\n      offsetY\n    } = await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_getOOPIFOffsets).call(this, __classPrivateFieldGet(this, _CDPElementHandle_frame, \"f\"));\n    const {\n      content,\n      padding,\n      border,\n      margin,\n      width,\n      height\n    } = result.model;\n    return {\n      content: applyOffsetsToQuad(__classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_fromProtocolQuad).call(this, content), offsetX, offsetY),\n      padding: applyOffsetsToQuad(__classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_fromProtocolQuad).call(this, padding), offsetX, offsetY),\n      border: applyOffsetsToQuad(__classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_fromProtocolQuad).call(this, border), offsetX, offsetY),\n      margin: applyOffsetsToQuad(__classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_fromProtocolQuad).call(this, margin), offsetX, offsetY),\n      width,\n      height\n    };\n  }\n  async screenshot(options = {}) {\n    let needsViewportReset = false;\n    let boundingBox = await this.boundingBox();\n    assert(boundingBox, 'Node is either not visible or not an HTMLElement');\n    const viewport = __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).viewport();\n    if (viewport && (boundingBox.width > viewport.width || boundingBox.height > viewport.height)) {\n      const newViewport = {\n        width: Math.max(viewport.width, Math.ceil(boundingBox.width)),\n        height: Math.max(viewport.height, Math.ceil(boundingBox.height))\n      };\n      await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).setViewport(Object.assign({}, viewport, newViewport));\n      needsViewportReset = true;\n    }\n    await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n    boundingBox = await this.boundingBox();\n    assert(boundingBox, 'Node is either not visible or not an HTMLElement');\n    assert(boundingBox.width !== 0, 'Node has 0 width.');\n    assert(boundingBox.height !== 0, 'Node has 0 height.');\n    const layoutMetrics = await this.client.send('Page.getLayoutMetrics');\n    // Fallback to `layoutViewport` in case of using Firefox.\n    const {\n      pageX,\n      pageY\n    } = layoutMetrics.cssVisualViewport || layoutMetrics.layoutViewport;\n    const clip = Object.assign({}, boundingBox);\n    clip.x += pageX;\n    clip.y += pageY;\n    const imageData = await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).screenshot(Object.assign({}, {\n      clip\n    }, options));\n    if (needsViewportReset && viewport) {\n      await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).setViewport(viewport);\n    }\n    return imageData;\n  }\n}\n_CDPElementHandle_frame = new WeakMap(), _CDPElementHandle_instances = new WeakSet(), _CDPElementHandle_frameManager_get = function _CDPElementHandle_frameManager_get() {\n  return __classPrivateFieldGet(this, _CDPElementHandle_frame, \"f\")._frameManager;\n}, _CDPElementHandle_page_get = function _CDPElementHandle_page_get() {\n  return __classPrivateFieldGet(this, _CDPElementHandle_frame, \"f\").page();\n}, _CDPElementHandle_checkVisibility = async function _CDPElementHandle_checkVisibility(visibility) {\n  const element = await this.frame.worlds[PUPPETEER_WORLD].adoptHandle(this);\n  try {\n    return await this.frame.worlds[PUPPETEER_WORLD].evaluate(async (PuppeteerUtil, element, visibility) => {\n      return Boolean(PuppeteerUtil.checkVisibility(element, visibility));\n    }, LazyArg.create(context => {\n      return context.puppeteerUtil;\n    }), element, visibility);\n  } finally {\n    await element.dispose();\n  }\n}, _CDPElementHandle_scrollIntoViewIfNeeded = async function _CDPElementHandle_scrollIntoViewIfNeeded() {\n  if (await this.isIntersectingViewport({\n    threshold: 1\n  })) {\n    return;\n  }\n  await this.scrollIntoView();\n}, _CDPElementHandle_getOOPIFOffsets = async function _CDPElementHandle_getOOPIFOffsets(frame) {\n  let offsetX = 0;\n  let offsetY = 0;\n  let currentFrame = frame;\n  while (currentFrame && currentFrame.parentFrame()) {\n    const parent = currentFrame.parentFrame();\n    if (!currentFrame.isOOPFrame() || !parent) {\n      currentFrame = parent;\n      continue;\n    }\n    const {\n      backendNodeId\n    } = await parent._client().send('DOM.getFrameOwner', {\n      frameId: currentFrame._id\n    });\n    const result = await parent._client().send('DOM.getBoxModel', {\n      backendNodeId: backendNodeId\n    });\n    if (!result) {\n      break;\n    }\n    const contentBoxQuad = result.model.content;\n    const topLeftCorner = __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_fromProtocolQuad).call(this, contentBoxQuad)[0];\n    offsetX += topLeftCorner.x;\n    offsetY += topLeftCorner.y;\n    currentFrame = parent;\n  }\n  return {\n    offsetX,\n    offsetY\n  };\n}, _CDPElementHandle_getBoxModel = function _CDPElementHandle_getBoxModel() {\n  const params = {\n    objectId: this.id\n  };\n  return this.client.send('DOM.getBoxModel', params).catch(error => {\n    return debugError(error);\n  });\n}, _CDPElementHandle_fromProtocolQuad = function _CDPElementHandle_fromProtocolQuad(quad) {\n  return [{\n    x: quad[0],\n    y: quad[1]\n  }, {\n    x: quad[2],\n    y: quad[3]\n  }, {\n    x: quad[4],\n    y: quad[5]\n  }, {\n    x: quad[6],\n    y: quad[7]\n  }];\n}, _CDPElementHandle_intersectQuadWithViewport = function _CDPElementHandle_intersectQuadWithViewport(quad, width, height) {\n  return quad.map(point => {\n    return {\n      x: Math.min(Math.max(point.x, 0), width),\n      y: Math.min(Math.max(point.y, 0), height)\n    };\n  });\n};\nfunction computeQuadArea(quad) {\n  /* Compute sum of all directed areas of adjacent triangles\n     https://en.wikipedia.org/wiki/Polygon#Simple_polygons\n   */\n  let area = 0;\n  for (let i = 0; i < quad.length; ++i) {\n    const p1 = quad[i];\n    const p2 = quad[(i + 1) % quad.length];\n    area += (p1.x * p2.y - p2.x * p1.y) / 2;\n  }\n  return Math.abs(area);\n}","map":{"version":3,"names":["ElementHandle","assert","AsyncIterableUtil","getQueryHandlerAndSelector","PUPPETEER_WORLD","CDPJSHandle","LazyArg","debugError","isString","applyOffsetsToQuad","quad","offsetX","offsetY","map","part","x","y","CDPElementHandle","constructor","context","remoteObject","frame","_CDPElementHandle_frame","set","__classPrivateFieldSet","executionContext","handle","client","__classPrivateFieldGet","$","selector","updatedSelector","QueryHandler","queryOne","$$","collect","queryAll","$eval","pageFunction","args","elementHandle","Error","result","evaluate","dispose","$$eval","results","elements","evaluateHandle","_","Promise","all","$x","expression","startsWith","waitForSelector","options","waitFor","waitForXPath","xpath","isVisible","_CDPElementHandle_instances","_CDPElementHandle_checkVisibility","call","isHidden","toElement","tagName","isMatchingTagName","node","nodeName","toUpperCase","contentFrame","nodeInfo","send","objectId","frameId","_CDPElementHandle_frameManager_get","scrollIntoView","assertConnectedElement","error","element","block","inline","behavior","clickablePoint","offset","layoutMetrics","catch","_CDPElementHandle_page_get","_client","quads","length","clientWidth","clientHeight","cssLayoutViewport","layoutViewport","_CDPElementHandle_getOOPIFOffsets","_CDPElementHandle_fromProtocolQuad","_CDPElementHandle_intersectQuadWithViewport","filter","computeQuadArea","minX","Number","MAX_SAFE_INTEGER","minY","point","hover","_CDPElementHandle_scrollIntoViewIfNeeded","mouse","move","click","drag","target","isDragInterceptionEnabled","start","dragEnter","data","items","dragOperationsMask","dragOver","drop","destination","dragAndDrop","startPoint","targetPoint","select","values","value","vals","Set","HTMLSelectElement","selectedValues","multiple","option","selected","has","add","dispatchEvent","Event","bubbles","uploadFile","filePaths","isMultiple","path","TypeError","files","filePath","win32","isAbsolute","posix","resolve","backendNodeId","DataTransfer","tap","touchscreen","touchStart","touchEnd","touchMove","focus","HTMLElement","type","text","keyboard","press","key","boundingBox","_CDPElementHandle_getBoxModel","model","border","Math","min","width","max","height","boxModel","content","padding","margin","screenshot","needsViewportReset","viewport","newViewport","ceil","setViewport","Object","assign","pageX","pageY","cssVisualViewport","clip","imageData","_frameManager","page","visibility","worlds","adoptHandle","PuppeteerUtil","Boolean","checkVisibility","create","puppeteerUtil","isIntersectingViewport","threshold","currentFrame","parentFrame","parent","isOOPFrame","_id","contentBoxQuad","topLeftCorner","params","id","area","i","p1","p2","abs"],"sources":["../../../../src/common/ElementHandle.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}