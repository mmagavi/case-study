{"ast":null,"code":"/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _CustomQueryHandlerRegistry_handlers;\nimport { assert } from '../util/assert.js';\nimport { interpolateFunction, stringifyFunction } from '../util/Function.js';\nimport { QueryHandler } from './QueryHandler.js';\nimport { scriptInjector } from './ScriptInjector.js';\n/**\n * The registry of {@link CustomQueryHandler | custom query handlers}.\n *\n * @example\n *\n * ```ts\n * Puppeteer.customQueryHandlers.register('lit', { … });\n * const aHandle = await page.$('lit/…');\n * ```\n *\n * @internal\n */\nexport class CustomQueryHandlerRegistry {\n  constructor() {\n    _CustomQueryHandlerRegistry_handlers.set(this, new Map());\n  }\n  /**\n   * @internal\n   */\n  get(name) {\n    const handler = __classPrivateFieldGet(this, _CustomQueryHandlerRegistry_handlers, \"f\").get(name);\n    return handler ? handler[1] : undefined;\n  }\n  /**\n   * Registers a {@link CustomQueryHandler | custom query handler}.\n   *\n   * @remarks\n   * After registration, the handler can be used everywhere where a selector is\n   * expected by prepending the selection string with `<name>/`. The name is\n   * only allowed to consist of lower- and upper case latin letters.\n   *\n   * @example\n   *\n   * ```ts\n   * Puppeteer.customQueryHandlers.register('lit', { … });\n   * const aHandle = await page.$('lit/…');\n   * ```\n   *\n   * @param name - Name to register under.\n   * @param queryHandler - {@link CustomQueryHandler | Custom query handler} to\n   * register.\n   *\n   * @internal\n   */\n  register(name, handler) {\n    var _a;\n    if (__classPrivateFieldGet(this, _CustomQueryHandlerRegistry_handlers, \"f\").has(name)) {\n      throw new Error(`Cannot register over existing handler: ${name}`);\n    }\n    assert(!__classPrivateFieldGet(this, _CustomQueryHandlerRegistry_handlers, \"f\").has(name), `Cannot register over existing handler: ${name}`);\n    assert(/^[a-zA-Z]+$/.test(name), `Custom query handler names may only contain [a-zA-Z]`);\n    assert(handler.queryAll || handler.queryOne, `At least one query method must be implemented.`);\n    const Handler = (_a = class extends QueryHandler {}, _a.querySelectorAll = interpolateFunction((node, selector, PuppeteerUtil) => {\n      return PuppeteerUtil.customQuerySelectors.get(PLACEHOLDER('name')).querySelectorAll(node, selector);\n    }, {\n      name: JSON.stringify(name)\n    }), _a.querySelector = interpolateFunction((node, selector, PuppeteerUtil) => {\n      return PuppeteerUtil.customQuerySelectors.get(PLACEHOLDER('name')).querySelector(node, selector);\n    }, {\n      name: JSON.stringify(name)\n    }), _a);\n    const registerScript = interpolateFunction(PuppeteerUtil => {\n      PuppeteerUtil.customQuerySelectors.register(PLACEHOLDER('name'), {\n        queryAll: PLACEHOLDER('queryAll'),\n        queryOne: PLACEHOLDER('queryOne')\n      });\n    }, {\n      name: JSON.stringify(name),\n      queryAll: handler.queryAll ? stringifyFunction(handler.queryAll) : String(undefined),\n      queryOne: handler.queryOne ? stringifyFunction(handler.queryOne) : String(undefined)\n    }).toString();\n    __classPrivateFieldGet(this, _CustomQueryHandlerRegistry_handlers, \"f\").set(name, [registerScript, Handler]);\n    scriptInjector.append(registerScript);\n  }\n  /**\n   * Unregisters the {@link CustomQueryHandler | custom query handler} for the\n   * given name.\n   *\n   * @throws `Error` if there is no handler under the given name.\n   *\n   * @internal\n   */\n  unregister(name) {\n    const handler = __classPrivateFieldGet(this, _CustomQueryHandlerRegistry_handlers, \"f\").get(name);\n    if (!handler) {\n      throw new Error(`Cannot unregister unknown handler: ${name}`);\n    }\n    scriptInjector.pop(handler[0]);\n    __classPrivateFieldGet(this, _CustomQueryHandlerRegistry_handlers, \"f\").delete(name);\n  }\n  /**\n   * Gets the names of all {@link CustomQueryHandler | custom query handlers}.\n   *\n   * @internal\n   */\n  names() {\n    return [...__classPrivateFieldGet(this, _CustomQueryHandlerRegistry_handlers, \"f\").keys()];\n  }\n  /**\n   * Unregisters all custom query handlers.\n   *\n   * @internal\n   */\n  clear() {\n    for (const [registerScript] of __classPrivateFieldGet(this, _CustomQueryHandlerRegistry_handlers, \"f\")) {\n      scriptInjector.pop(registerScript);\n    }\n    __classPrivateFieldGet(this, _CustomQueryHandlerRegistry_handlers, \"f\").clear();\n  }\n}\n_CustomQueryHandlerRegistry_handlers = new WeakMap();\n/**\n * @internal\n */\nexport const customQueryHandlers = new CustomQueryHandlerRegistry();\n/**\n * @deprecated Import {@link Puppeteer} and use the static method\n * {@link Puppeteer.registerCustomQueryHandler}\n *\n * @public\n */\nexport function registerCustomQueryHandler(name, handler) {\n  customQueryHandlers.register(name, handler);\n}\n/**\n * @deprecated Import {@link Puppeteer} and use the static method\n * {@link Puppeteer.unregisterCustomQueryHandler}\n *\n * @public\n */\nexport function unregisterCustomQueryHandler(name) {\n  customQueryHandlers.unregister(name);\n}\n/**\n * @deprecated Import {@link Puppeteer} and use the static method\n * {@link Puppeteer.customQueryHandlerNames}\n *\n * @public\n */\nexport function customQueryHandlerNames() {\n  return customQueryHandlers.names();\n}\n/**\n * @deprecated Import {@link Puppeteer} and use the static method\n * {@link Puppeteer.clearCustomQueryHandlers}\n *\n * @public\n */\nexport function clearCustomQueryHandlers() {\n  customQueryHandlers.clear();\n}","map":{"version":3,"names":["assert","interpolateFunction","stringifyFunction","QueryHandler","scriptInjector","CustomQueryHandlerRegistry","constructor","_CustomQueryHandlerRegistry_handlers","set","Map","get","name","handler","__classPrivateFieldGet","undefined","register","has","Error","test","queryAll","queryOne","Handler","_a","querySelectorAll","node","selector","PuppeteerUtil","customQuerySelectors","PLACEHOLDER","JSON","stringify","querySelector","registerScript","String","toString","append","unregister","pop","delete","names","keys","clear","customQueryHandlers","registerCustomQueryHandler","unregisterCustomQueryHandler","customQueryHandlerNames","clearCustomQueryHandlers"],"sources":["../../../../src/common/CustomQueryHandler.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}