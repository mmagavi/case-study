{"ast":null,"code":"let conversationHistory = [{\n  role: \"system\",\n  content: `If there was a part ID (number beginning with P) specified, give me that number\n    `\n}];\nexport const getID = async userQuery => {\n  conversationHistory.push({\n    role: \"user\",\n    content: userQuery\n  });\n  const completion = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": 'Bearer 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'\n    },\n    body: JSON.stringify({\n      model: \"gpt-4o-mini\",\n      messages: conversationHistory,\n      max_tokens: 1\n    })\n  });\n  const data = await completion.json();\n  let get_response = data.choices[0].message.content;\n  console.log(get_response);\n  conversationHistory.push({\n    role: \"assistant\",\n    content: get_response\n  });\n  return get_response;\n};","map":{"version":3,"names":["conversationHistory","role","content","getID","userQuery","push","completion","fetch","method","headers","body","JSON","stringify","model","messages","max_tokens","data","json","get_response","choices","message","console","log"],"sources":["/Users/mayamagavi/instalily/case-study/src/api/getPartID.js"],"sourcesContent":["\nlet conversationHistory = [\n  { role: \"system\", content: `If there was a part ID (number beginning with P) specified, give me that number\n    ` }\n];\n\nexport const getID = async (userQuery) => {\n\n  conversationHistory.push({ role: \"user\", content: userQuery });\n\n  const completion = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n    method: \"POST\",\n    headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": 'Bearer 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',\n    },\n    body: JSON.stringify({\n        model: \"gpt-4o-mini\",\n        messages: conversationHistory,\n        max_tokens: 1\n    })\n  });\n\n  const data = await completion.json();\n  let get_response = data.choices[0].message.content;\n  console.log(get_response);\n  conversationHistory.push({ role: \"assistant\", content: get_response });\n\n  return get_response\n};"],"mappings":"AACA,IAAIA,mBAAmB,GAAG,CACxB;EAAEC,IAAI,EAAE,QAAQ;EAAEC,OAAO,EAAG;AAC9B;AAAM,CAAC,CACN;AAED,OAAO,MAAMC,KAAK,GAAG,MAAOC,SAAS,IAAK;EAExCJ,mBAAmB,CAACK,IAAI,CAAC;IAAEJ,IAAI,EAAE,MAAM;IAAEC,OAAO,EAAEE;EAAU,CAAC,CAAC;EAE9D,MAAME,UAAU,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;IAC3EC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE;IACrB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBC,KAAK,EAAE,aAAa;MACpBC,QAAQ,EAAEd,mBAAmB;MAC7Be,UAAU,EAAE;IAChB,CAAC;EACH,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAG,MAAMV,UAAU,CAACW,IAAI,CAAC,CAAC;EACpC,IAAIC,YAAY,GAAGF,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAAClB,OAAO;EAClDmB,OAAO,CAACC,GAAG,CAACJ,YAAY,CAAC;EACzBlB,mBAAmB,CAACK,IAAI,CAAC;IAAEJ,IAAI,EAAE,WAAW;IAAEC,OAAO,EAAEgB;EAAa,CAAC,CAAC;EAEtE,OAAOA,YAAY;AACrB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}