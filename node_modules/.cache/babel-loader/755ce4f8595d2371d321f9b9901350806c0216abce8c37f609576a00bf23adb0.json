{"ast":null,"code":"/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ElementHandle_instances, _ElementHandle_asSVGElementHandle, _ElementHandle_getOwnerSVGElement;\nimport { JSHandle } from './JSHandle.js';\n/**\n * ElementHandle represents an in-page DOM element.\n *\n * @remarks\n * ElementHandles can be created with the {@link Page.$} method.\n *\n * ```ts\n * import puppeteer from 'puppeteer';\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   await page.goto('https://example.com');\n *   const hrefElement = await page.$('a');\n *   await hrefElement.click();\n *   // ...\n * })();\n * ```\n *\n * ElementHandle prevents the DOM element from being garbage-collected unless the\n * handle is {@link JSHandle.dispose | disposed}. ElementHandles are auto-disposed\n * when their origin frame gets navigated.\n *\n * ElementHandle instances can be used as arguments in {@link Page.$eval} and\n * {@link Page.evaluate} methods.\n *\n * If you're using TypeScript, ElementHandle takes a generic argument that\n * denotes the type of element the handle is holding within. For example, if you\n * have a handle to a `<select>` element, you can type it as\n * `ElementHandle<HTMLSelectElement>` and you get some nicer type checks.\n *\n * @public\n */\nexport class ElementHandle extends JSHandle {\n  /**\n   * @internal\n   */\n  constructor(handle) {\n    super();\n    _ElementHandle_instances.add(this);\n    this.handle = handle;\n  }\n  /**\n   * @internal\n   */\n  get id() {\n    return this.handle.id;\n  }\n  /**\n   * @internal\n   */\n  get disposed() {\n    return this.handle.disposed;\n  }\n  async getProperty(propertyName) {\n    return this.handle.getProperty(propertyName);\n  }\n  /**\n   * @internal\n   */\n  async getProperties() {\n    return this.handle.getProperties();\n  }\n  /**\n   * @internal\n   */\n  async evaluate(pageFunction, ...args) {\n    return this.handle.evaluate(pageFunction, ...args);\n  }\n  /**\n   * @internal\n   */\n  evaluateHandle(pageFunction, ...args) {\n    return this.handle.evaluateHandle(pageFunction, ...args);\n  }\n  /**\n   * @internal\n   */\n  async jsonValue() {\n    return this.handle.jsonValue();\n  }\n  /**\n   * @internal\n   */\n  toString() {\n    return this.handle.toString();\n  }\n  /**\n   * @internal\n   */\n  async dispose() {\n    return await this.handle.dispose();\n  }\n  asElement() {\n    return this;\n  }\n  /**\n   * @internal\n   */\n  executionContext() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * @internal\n   */\n  get client() {\n    throw new Error('Not implemented');\n  }\n  get frame() {\n    throw new Error('Not implemented');\n  }\n  async $() {\n    throw new Error('Not implemented');\n  }\n  async $$() {\n    throw new Error('Not implemented');\n  }\n  async $eval() {\n    throw new Error('Not implemented');\n  }\n  async $$eval() {\n    throw new Error('Not implemented');\n  }\n  async $x() {\n    throw new Error('Not implemented');\n  }\n  async waitForSelector() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Checks if an element is visible using the same mechanism as\n   * {@link ElementHandle.waitForSelector}.\n   */\n  async isVisible() {\n    throw new Error('Not implemented.');\n  }\n  /**\n   * Checks if an element is hidden using the same mechanism as\n   * {@link ElementHandle.waitForSelector}.\n   */\n  async isHidden() {\n    throw new Error('Not implemented.');\n  }\n  async waitForXPath() {\n    throw new Error('Not implemented');\n  }\n  async toElement() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Resolves to the content frame for element handles referencing\n   * iframe nodes, or null otherwise\n   */\n  async contentFrame() {\n    throw new Error('Not implemented');\n  }\n  async clickablePoint() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * This method scrolls element into view if needed, and then\n   * uses {@link Page} to hover over the center of the element.\n   * If the element is detached from DOM, the method throws an error.\n   */\n  async hover() {\n    throw new Error('Not implemented');\n  }\n  async click() {\n    throw new Error('Not implemented');\n  }\n  async drag() {\n    throw new Error('Not implemented');\n  }\n  async dragEnter() {\n    throw new Error('Not implemented');\n  }\n  async dragOver() {\n    throw new Error('Not implemented');\n  }\n  async drop() {\n    throw new Error('Not implemented');\n  }\n  async dragAndDrop() {\n    throw new Error('Not implemented');\n  }\n  async select() {\n    throw new Error('Not implemented');\n  }\n  async uploadFile() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * This method scrolls element into view if needed, and then uses\n   * {@link Touchscreen.tap} to tap in the center of the element.\n   * If the element is detached from DOM, the method throws an error.\n   */\n  async tap() {\n    throw new Error('Not implemented');\n  }\n  async touchStart() {\n    throw new Error('Not implemented');\n  }\n  async touchMove() {\n    throw new Error('Not implemented');\n  }\n  async touchEnd() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Calls {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus | focus} on the element.\n   */\n  async focus() {\n    throw new Error('Not implemented');\n  }\n  async type() {\n    throw new Error('Not implemented');\n  }\n  async press() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * This method returns the bounding box of the element (relative to the main frame),\n   * or `null` if the element is not visible.\n   */\n  async boundingBox() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * This method returns boxes of the element, or `null` if the element is not visible.\n   *\n   * @remarks\n   *\n   * Boxes are represented as an array of points;\n   * Each Point is an object `{x, y}`. Box points are sorted clock-wise.\n   */\n  async boxModel() {\n    throw new Error('Not implemented');\n  }\n  async screenshot() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * @internal\n   */\n  async assertConnectedElement() {\n    const error = await this.evaluate(async element => {\n      if (!element.isConnected) {\n        return 'Node is detached from document';\n      }\n      if (element.nodeType !== Node.ELEMENT_NODE) {\n        return 'Node is not of type HTMLElement';\n      }\n      return;\n    });\n    if (error) {\n      throw new Error(error);\n    }\n  }\n  /**\n   * Resolves to true if the element is visible in the current viewport. If an\n   * element is an SVG, we check if the svg owner element is in the viewport\n   * instead. See https://crbug.com/963246.\n   *\n   * @param options - Threshold for the intersection between 0 (no intersection) and 1\n   * (full intersection). Defaults to 1.\n   */\n  async isIntersectingViewport(options) {\n    await this.assertConnectedElement();\n    const {\n      threshold = 0\n    } = options !== null && options !== void 0 ? options : {};\n    const svgHandle = await __classPrivateFieldGet(this, _ElementHandle_instances, \"m\", _ElementHandle_asSVGElementHandle).call(this, this);\n    const intersectionTarget = svgHandle ? await __classPrivateFieldGet(this, _ElementHandle_instances, \"m\", _ElementHandle_getOwnerSVGElement).call(this, svgHandle) : this;\n    try {\n      return await intersectionTarget.evaluate(async (element, threshold) => {\n        const visibleRatio = await new Promise(resolve => {\n          const observer = new IntersectionObserver(entries => {\n            resolve(entries[0].intersectionRatio);\n            observer.disconnect();\n          });\n          observer.observe(element);\n        });\n        return threshold === 1 ? visibleRatio === 1 : visibleRatio > threshold;\n      }, threshold);\n    } finally {\n      if (intersectionTarget !== this) {\n        await intersectionTarget.dispose();\n      }\n    }\n  }\n  /**\n   * Scrolls the element into view using either the automation protocol client\n   * or by calling element.scrollIntoView.\n   */\n  async scrollIntoView() {\n    throw new Error('Not implemented');\n  }\n}\n_ElementHandle_instances = new WeakSet(), _ElementHandle_asSVGElementHandle =\n/**\n * Returns true if an element is an SVGElement (included svg, path, rect\n * etc.).\n */\nasync function _ElementHandle_asSVGElementHandle(handle) {\n  if (await handle.evaluate(element => {\n    return element instanceof SVGElement;\n  })) {\n    return handle;\n  } else {\n    return null;\n  }\n}, _ElementHandle_getOwnerSVGElement = async function _ElementHandle_getOwnerSVGElement(handle) {\n  // SVGSVGElement.ownerSVGElement === null.\n  return await handle.evaluateHandle(element => {\n    if (element instanceof SVGSVGElement) {\n      return element;\n    }\n    return element.ownerSVGElement;\n  });\n};","map":{"version":3,"names":["JSHandle","ElementHandle","constructor","handle","id","disposed","getProperty","propertyName","getProperties","evaluate","pageFunction","args","evaluateHandle","jsonValue","toString","dispose","asElement","executionContext","Error","client","frame","$","$$","$eval","$$eval","$x","waitForSelector","isVisible","isHidden","waitForXPath","toElement","contentFrame","clickablePoint","hover","click","drag","dragEnter","dragOver","drop","dragAndDrop","select","uploadFile","tap","touchStart","touchMove","touchEnd","focus","type","press","boundingBox","boxModel","screenshot","assertConnectedElement","error","element","isConnected","nodeType","Node","ELEMENT_NODE","isIntersectingViewport","options","threshold","svgHandle","__classPrivateFieldGet","_ElementHandle_instances","_ElementHandle_asSVGElementHandle","call","intersectionTarget","_ElementHandle_getOwnerSVGElement","visibleRatio","Promise","resolve","observer","IntersectionObserver","entries","intersectionRatio","disconnect","observe","scrollIntoView","SVGElement","SVGSVGElement","ownerSVGElement"],"sources":["../../../../src/api/ElementHandle.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}