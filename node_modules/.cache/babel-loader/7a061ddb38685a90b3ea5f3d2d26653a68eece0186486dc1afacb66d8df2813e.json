{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2022 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _DeviceRequestPrompt_instances, _DeviceRequestPrompt_client, _DeviceRequestPrompt_timeoutSettings, _DeviceRequestPrompt_id, _DeviceRequestPrompt_handled, _DeviceRequestPrompt_updateDevicesHandle, _DeviceRequestPrompt_waitForDevicePromises, _DeviceRequestPrompt_updateDevices, _DeviceRequestPromptManager_instances, _DeviceRequestPromptManager_client, _DeviceRequestPromptManager_timeoutSettings, _DeviceRequestPromptManager_deviceRequestPromptPromises, _DeviceRequestPromptManager_onDeviceRequestPrompted;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DeviceRequestPromptManager = exports.DeviceRequestPrompt = exports.DeviceRequestPromptDevice = void 0;\nconst assert_js_1 = require(\"../util/assert.js\");\nconst DeferredPromise_js_1 = require(\"../util/DeferredPromise.js\");\n/**\n * Device in a request prompt.\n *\n * @public\n */\nclass DeviceRequestPromptDevice {\n  /**\n   * @internal\n   */\n  constructor(id, name) {\n    this.id = id;\n    this.name = name;\n  }\n}\nexports.DeviceRequestPromptDevice = DeviceRequestPromptDevice;\n/**\n * Device request prompts let you respond to the page requesting for a device\n * through an API like WebBluetooth.\n *\n * @remarks\n * `DeviceRequestPrompt` instances are returned via the\n * {@link Page.waitForDevicePrompt} method.\n *\n * @example\n *\n * ```ts\n * const [deviceRequest] = Promise.all([\n *   page.waitForDevicePrompt(),\n *   page.click('#connect-bluetooth'),\n * ]);\n * await devicePrompt.select(\n *   await devicePrompt.waitForDevice(({name}) => name.includes('My Device'))\n * );\n * ```\n *\n * @public\n */\nclass DeviceRequestPrompt {\n  /**\n   * @internal\n   */\n  constructor(client, timeoutSettings, firstEvent) {\n    _DeviceRequestPrompt_instances.add(this);\n    _DeviceRequestPrompt_client.set(this, void 0);\n    _DeviceRequestPrompt_timeoutSettings.set(this, void 0);\n    _DeviceRequestPrompt_id.set(this, void 0);\n    _DeviceRequestPrompt_handled.set(this, false);\n    _DeviceRequestPrompt_updateDevicesHandle.set(this, __classPrivateFieldGet(this, _DeviceRequestPrompt_instances, \"m\", _DeviceRequestPrompt_updateDevices).bind(this));\n    _DeviceRequestPrompt_waitForDevicePromises.set(this, new Set());\n    /**\n     * Current list of selectable devices.\n     */\n    this.devices = [];\n    __classPrivateFieldSet(this, _DeviceRequestPrompt_client, client, \"f\");\n    __classPrivateFieldSet(this, _DeviceRequestPrompt_timeoutSettings, timeoutSettings, \"f\");\n    __classPrivateFieldSet(this, _DeviceRequestPrompt_id, firstEvent.id, \"f\");\n    __classPrivateFieldGet(this, _DeviceRequestPrompt_client, \"f\").on('DeviceAccess.deviceRequestPrompted', __classPrivateFieldGet(this, _DeviceRequestPrompt_updateDevicesHandle, \"f\"));\n    __classPrivateFieldGet(this, _DeviceRequestPrompt_client, \"f\").on('Target.detachedFromTarget', () => {\n      __classPrivateFieldSet(this, _DeviceRequestPrompt_client, null, \"f\");\n    });\n    __classPrivateFieldGet(this, _DeviceRequestPrompt_instances, \"m\", _DeviceRequestPrompt_updateDevices).call(this, firstEvent);\n  }\n  /**\n   * Resolve to the first device in the prompt matching a filter.\n   */\n  async waitForDevice(filter, options = {}) {\n    for (const device of this.devices) {\n      if (filter(device)) {\n        return device;\n      }\n    }\n    const {\n      timeout = __classPrivateFieldGet(this, _DeviceRequestPrompt_timeoutSettings, \"f\").timeout()\n    } = options;\n    const promise = (0, DeferredPromise_js_1.createDeferredPromise)({\n      message: `Waiting for \\`DeviceRequestPromptDevice\\` failed: ${timeout}ms exceeded`,\n      timeout\n    });\n    const handle = {\n      filter,\n      promise\n    };\n    __classPrivateFieldGet(this, _DeviceRequestPrompt_waitForDevicePromises, \"f\").add(handle);\n    try {\n      return await promise;\n    } finally {\n      __classPrivateFieldGet(this, _DeviceRequestPrompt_waitForDevicePromises, \"f\").delete(handle);\n    }\n  }\n  /**\n   * Select a device in the prompt's list.\n   */\n  async select(device) {\n    (0, assert_js_1.assert)(__classPrivateFieldGet(this, _DeviceRequestPrompt_client, \"f\") !== null, 'Cannot select device through detached session!');\n    (0, assert_js_1.assert)(this.devices.includes(device), 'Cannot select unknown device!');\n    (0, assert_js_1.assert)(!__classPrivateFieldGet(this, _DeviceRequestPrompt_handled, \"f\"), 'Cannot select DeviceRequestPrompt which is already handled!');\n    __classPrivateFieldGet(this, _DeviceRequestPrompt_client, \"f\").off('DeviceAccess.deviceRequestPrompted', __classPrivateFieldGet(this, _DeviceRequestPrompt_updateDevicesHandle, \"f\"));\n    __classPrivateFieldSet(this, _DeviceRequestPrompt_handled, true, \"f\");\n    return __classPrivateFieldGet(this, _DeviceRequestPrompt_client, \"f\").send('DeviceAccess.selectPrompt', {\n      id: __classPrivateFieldGet(this, _DeviceRequestPrompt_id, \"f\"),\n      deviceId: device.id\n    });\n  }\n  /**\n   * Cancel the prompt.\n   */\n  async cancel() {\n    (0, assert_js_1.assert)(__classPrivateFieldGet(this, _DeviceRequestPrompt_client, \"f\") !== null, 'Cannot cancel prompt through detached session!');\n    (0, assert_js_1.assert)(!__classPrivateFieldGet(this, _DeviceRequestPrompt_handled, \"f\"), 'Cannot cancel DeviceRequestPrompt which is already handled!');\n    __classPrivateFieldGet(this, _DeviceRequestPrompt_client, \"f\").off('DeviceAccess.deviceRequestPrompted', __classPrivateFieldGet(this, _DeviceRequestPrompt_updateDevicesHandle, \"f\"));\n    __classPrivateFieldSet(this, _DeviceRequestPrompt_handled, true, \"f\");\n    return __classPrivateFieldGet(this, _DeviceRequestPrompt_client, \"f\").send('DeviceAccess.cancelPrompt', {\n      id: __classPrivateFieldGet(this, _DeviceRequestPrompt_id, \"f\")\n    });\n  }\n}\nexports.DeviceRequestPrompt = DeviceRequestPrompt;\n_DeviceRequestPrompt_client = new WeakMap(), _DeviceRequestPrompt_timeoutSettings = new WeakMap(), _DeviceRequestPrompt_id = new WeakMap(), _DeviceRequestPrompt_handled = new WeakMap(), _DeviceRequestPrompt_updateDevicesHandle = new WeakMap(), _DeviceRequestPrompt_waitForDevicePromises = new WeakMap(), _DeviceRequestPrompt_instances = new WeakSet(), _DeviceRequestPrompt_updateDevices = function _DeviceRequestPrompt_updateDevices(event) {\n  if (event.id !== __classPrivateFieldGet(this, _DeviceRequestPrompt_id, \"f\")) {\n    return;\n  }\n  for (const rawDevice of event.devices) {\n    if (this.devices.some(device => {\n      return device.id === rawDevice.id;\n    })) {\n      continue;\n    }\n    const newDevice = new DeviceRequestPromptDevice(rawDevice.id, rawDevice.name);\n    this.devices.push(newDevice);\n    for (const waitForDevicePromise of __classPrivateFieldGet(this, _DeviceRequestPrompt_waitForDevicePromises, \"f\")) {\n      if (waitForDevicePromise.filter(newDevice)) {\n        waitForDevicePromise.promise.resolve(newDevice);\n      }\n    }\n  }\n};\n/**\n * @internal\n */\nclass DeviceRequestPromptManager {\n  /**\n   * @internal\n   */\n  constructor(client, timeoutSettings) {\n    _DeviceRequestPromptManager_instances.add(this);\n    _DeviceRequestPromptManager_client.set(this, void 0);\n    _DeviceRequestPromptManager_timeoutSettings.set(this, void 0);\n    _DeviceRequestPromptManager_deviceRequestPromptPromises.set(this, new Set());\n    __classPrivateFieldSet(this, _DeviceRequestPromptManager_client, client, \"f\");\n    __classPrivateFieldSet(this, _DeviceRequestPromptManager_timeoutSettings, timeoutSettings, \"f\");\n    __classPrivateFieldGet(this, _DeviceRequestPromptManager_client, \"f\").on('DeviceAccess.deviceRequestPrompted', event => {\n      __classPrivateFieldGet(this, _DeviceRequestPromptManager_instances, \"m\", _DeviceRequestPromptManager_onDeviceRequestPrompted).call(this, event);\n    });\n    __classPrivateFieldGet(this, _DeviceRequestPromptManager_client, \"f\").on('Target.detachedFromTarget', () => {\n      __classPrivateFieldSet(this, _DeviceRequestPromptManager_client, null, \"f\");\n    });\n  }\n  /**\n   * Wait for device prompt created by an action like calling WebBluetooth's\n   * requestDevice.\n   */\n  async waitForDevicePrompt(options = {}) {\n    (0, assert_js_1.assert)(__classPrivateFieldGet(this, _DeviceRequestPromptManager_client, \"f\") !== null, 'Cannot wait for device prompt through detached session!');\n    const needsEnable = __classPrivateFieldGet(this, _DeviceRequestPromptManager_deviceRequestPromptPromises, \"f\").size === 0;\n    let enablePromise;\n    if (needsEnable) {\n      enablePromise = __classPrivateFieldGet(this, _DeviceRequestPromptManager_client, \"f\").send('DeviceAccess.enable');\n    }\n    const {\n      timeout = __classPrivateFieldGet(this, _DeviceRequestPromptManager_timeoutSettings, \"f\").timeout()\n    } = options;\n    const promise = (0, DeferredPromise_js_1.createDeferredPromise)({\n      message: `Waiting for \\`DeviceRequestPrompt\\` failed: ${timeout}ms exceeded`,\n      timeout\n    });\n    __classPrivateFieldGet(this, _DeviceRequestPromptManager_deviceRequestPromptPromises, \"f\").add(promise);\n    try {\n      const [result] = await Promise.all([promise, enablePromise]);\n      return result;\n    } finally {\n      __classPrivateFieldGet(this, _DeviceRequestPromptManager_deviceRequestPromptPromises, \"f\").delete(promise);\n    }\n  }\n}\nexports.DeviceRequestPromptManager = DeviceRequestPromptManager;\n_DeviceRequestPromptManager_client = new WeakMap(), _DeviceRequestPromptManager_timeoutSettings = new WeakMap(), _DeviceRequestPromptManager_deviceRequestPromptPromises = new WeakMap(), _DeviceRequestPromptManager_instances = new WeakSet(), _DeviceRequestPromptManager_onDeviceRequestPrompted = function _DeviceRequestPromptManager_onDeviceRequestPrompted(event) {\n  if (!__classPrivateFieldGet(this, _DeviceRequestPromptManager_deviceRequestPromptPromises, \"f\").size) {\n    return;\n  }\n  (0, assert_js_1.assert)(__classPrivateFieldGet(this, _DeviceRequestPromptManager_client, \"f\") !== null);\n  const devicePrompt = new DeviceRequestPrompt(__classPrivateFieldGet(this, _DeviceRequestPromptManager_client, \"f\"), __classPrivateFieldGet(this, _DeviceRequestPromptManager_timeoutSettings, \"f\"), event);\n  for (const promise of __classPrivateFieldGet(this, _DeviceRequestPromptManager_deviceRequestPromptPromises, \"f\")) {\n    promise.resolve(devicePrompt);\n  }\n  __classPrivateFieldGet(this, _DeviceRequestPromptManager_deviceRequestPromptPromises, \"f\").clear();\n};","map":{"version":3,"names":["assert_js_1","require","DeferredPromise_js_1","DeviceRequestPromptDevice","constructor","id","name","exports","DeviceRequestPrompt","client","timeoutSettings","firstEvent","_DeviceRequestPrompt_client","set","_DeviceRequestPrompt_timeoutSettings","_DeviceRequestPrompt_id","_DeviceRequestPrompt_handled","_DeviceRequestPrompt_updateDevicesHandle","__classPrivateFieldGet","_DeviceRequestPrompt_instances","_DeviceRequestPrompt_updateDevices","bind","_DeviceRequestPrompt_waitForDevicePromises","Set","devices","__classPrivateFieldSet","on","call","waitForDevice","filter","options","device","timeout","promise","createDeferredPromise","message","handle","add","delete","select","assert","includes","off","send","deviceId","cancel","event","rawDevice","some","newDevice","push","waitForDevicePromise","resolve","DeviceRequestPromptManager","_DeviceRequestPromptManager_client","_DeviceRequestPromptManager_timeoutSettings","_DeviceRequestPromptManager_deviceRequestPromptPromises","_DeviceRequestPromptManager_instances","_DeviceRequestPromptManager_onDeviceRequestPrompted","waitForDevicePrompt","needsEnable","size","enablePromise","result","Promise","all","devicePrompt","clear"],"sources":["../../../../src/common/DeviceRequestPrompt.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}