{"ast":null,"code":"export const isBrowser = () => typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nexport const isWebWorker = () => typeof globalThis === \"object\" && globalThis.constructor && globalThis.constructor.name === \"DedicatedWorkerGlobalScope\";\nexport const isJsDom = () => typeof window !== \"undefined\" && window.name === \"nodejs\" || typeof navigator !== \"undefined\" && (navigator.userAgent.includes(\"Node.js\") || navigator.userAgent.includes(\"jsdom\"));\n// Supabase Edge Function provides a `Deno` global object\n// without `version` property\nexport const isDeno = () => typeof Deno !== \"undefined\";\n// Mark not-as-node if in Supabase Edge Function\nexport const isNode = () => typeof process !== \"undefined\" && typeof process.versions !== \"undefined\" && typeof process.versions.node !== \"undefined\" && !isDeno();\nexport const getEnv = () => {\n  let env;\n  if (isBrowser()) {\n    env = \"browser\";\n  } else if (isNode()) {\n    env = \"node\";\n  } else if (isWebWorker()) {\n    env = \"webworker\";\n  } else if (isJsDom()) {\n    env = \"jsdom\";\n  } else if (isDeno()) {\n    env = \"deno\";\n  } else {\n    env = \"other\";\n  }\n  return env;\n};\nlet runtimeEnvironment;\nexport async function getRuntimeEnvironment() {\n  if (runtimeEnvironment === undefined) {\n    const env = getEnv();\n    const releaseEnv = getShas();\n    runtimeEnvironment = {\n      library: \"langsmith\",\n      runtime: env,\n      ...releaseEnv\n    };\n  }\n  return runtimeEnvironment;\n}\nexport function getEnvironmentVariable(name) {\n  // Certain Deno setups will throw an error if you try to access environment variables\n  // https://github.com/hwchase17/langchainjs/issues/1412\n  try {\n    return typeof process !== \"undefined\" ?\n    // eslint-disable-next-line no-process-env\n    process.env?.[name] : undefined;\n  } catch (e) {\n    return undefined;\n  }\n}\nexport function setEnvironmentVariable(name, value) {\n  if (typeof process !== \"undefined\") {\n    // eslint-disable-next-line no-process-env\n    process.env[name] = value;\n  }\n}\nlet cachedCommitSHAs;\n/**\n * Get the Git commit SHA from common environment variables\n * used by different CI/CD platforms.\n * @returns {string | undefined} The Git commit SHA or undefined if not found.\n */\nexport function getShas() {\n  if (cachedCommitSHAs !== undefined) {\n    return cachedCommitSHAs;\n  }\n  const common_release_envs = [\"VERCEL_GIT_COMMIT_SHA\", \"NEXT_PUBLIC_VERCEL_GIT_COMMIT_SHA\", \"COMMIT_REF\", \"RENDER_GIT_COMMIT\", \"CI_COMMIT_SHA\", \"CIRCLE_SHA1\", \"CF_PAGES_COMMIT_SHA\", \"REACT_APP_GIT_SHA\", \"SOURCE_VERSION\", \"GITHUB_SHA\", \"TRAVIS_COMMIT\", \"GIT_COMMIT\", \"BUILD_VCS_NUMBER\", \"bamboo_planRepository_revision\", \"Build.SourceVersion\", \"BITBUCKET_COMMIT\", \"DRONE_COMMIT_SHA\", \"SEMAPHORE_GIT_SHA\", \"BUILDKITE_COMMIT\"];\n  const shas = {};\n  for (const env of common_release_envs) {\n    const envVar = getEnvironmentVariable(env);\n    if (envVar !== undefined) {\n      shas[env] = envVar;\n    }\n  }\n  cachedCommitSHAs = shas;\n  return shas;\n}","map":{"version":3,"names":["isBrowser","window","document","isWebWorker","globalThis","constructor","name","isJsDom","navigator","userAgent","includes","isDeno","Deno","isNode","process","versions","node","getEnv","env","runtimeEnvironment","getRuntimeEnvironment","undefined","releaseEnv","getShas","library","runtime","getEnvironmentVariable","e","setEnvironmentVariable","value","cachedCommitSHAs","common_release_envs","shas","envVar"],"sources":["/Users/mayamagavi/instalily/case-study/node_modules/langsmith/dist/utils/env.js"],"sourcesContent":["export const isBrowser = () => typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nexport const isWebWorker = () => typeof globalThis === \"object\" &&\n    globalThis.constructor &&\n    globalThis.constructor.name === \"DedicatedWorkerGlobalScope\";\nexport const isJsDom = () => (typeof window !== \"undefined\" && window.name === \"nodejs\") ||\n    (typeof navigator !== \"undefined\" &&\n        (navigator.userAgent.includes(\"Node.js\") ||\n            navigator.userAgent.includes(\"jsdom\")));\n// Supabase Edge Function provides a `Deno` global object\n// without `version` property\nexport const isDeno = () => typeof Deno !== \"undefined\";\n// Mark not-as-node if in Supabase Edge Function\nexport const isNode = () => typeof process !== \"undefined\" &&\n    typeof process.versions !== \"undefined\" &&\n    typeof process.versions.node !== \"undefined\" &&\n    !isDeno();\nexport const getEnv = () => {\n    let env;\n    if (isBrowser()) {\n        env = \"browser\";\n    }\n    else if (isNode()) {\n        env = \"node\";\n    }\n    else if (isWebWorker()) {\n        env = \"webworker\";\n    }\n    else if (isJsDom()) {\n        env = \"jsdom\";\n    }\n    else if (isDeno()) {\n        env = \"deno\";\n    }\n    else {\n        env = \"other\";\n    }\n    return env;\n};\nlet runtimeEnvironment;\nexport async function getRuntimeEnvironment() {\n    if (runtimeEnvironment === undefined) {\n        const env = getEnv();\n        const releaseEnv = getShas();\n        runtimeEnvironment = {\n            library: \"langsmith\",\n            runtime: env,\n            ...releaseEnv,\n        };\n    }\n    return runtimeEnvironment;\n}\nexport function getEnvironmentVariable(name) {\n    // Certain Deno setups will throw an error if you try to access environment variables\n    // https://github.com/hwchase17/langchainjs/issues/1412\n    try {\n        return typeof process !== \"undefined\"\n            ? // eslint-disable-next-line no-process-env\n                process.env?.[name]\n            : undefined;\n    }\n    catch (e) {\n        return undefined;\n    }\n}\nexport function setEnvironmentVariable(name, value) {\n    if (typeof process !== \"undefined\") {\n        // eslint-disable-next-line no-process-env\n        process.env[name] = value;\n    }\n}\nlet cachedCommitSHAs;\n/**\n * Get the Git commit SHA from common environment variables\n * used by different CI/CD platforms.\n * @returns {string | undefined} The Git commit SHA or undefined if not found.\n */\nexport function getShas() {\n    if (cachedCommitSHAs !== undefined) {\n        return cachedCommitSHAs;\n    }\n    const common_release_envs = [\n        \"VERCEL_GIT_COMMIT_SHA\",\n        \"NEXT_PUBLIC_VERCEL_GIT_COMMIT_SHA\",\n        \"COMMIT_REF\",\n        \"RENDER_GIT_COMMIT\",\n        \"CI_COMMIT_SHA\",\n        \"CIRCLE_SHA1\",\n        \"CF_PAGES_COMMIT_SHA\",\n        \"REACT_APP_GIT_SHA\",\n        \"SOURCE_VERSION\",\n        \"GITHUB_SHA\",\n        \"TRAVIS_COMMIT\",\n        \"GIT_COMMIT\",\n        \"BUILD_VCS_NUMBER\",\n        \"bamboo_planRepository_revision\",\n        \"Build.SourceVersion\",\n        \"BITBUCKET_COMMIT\",\n        \"DRONE_COMMIT_SHA\",\n        \"SEMAPHORE_GIT_SHA\",\n        \"BUILDKITE_COMMIT\",\n    ];\n    const shas = {};\n    for (const env of common_release_envs) {\n        const envVar = getEnvironmentVariable(env);\n        if (envVar !== undefined) {\n            shas[env] = envVar;\n        }\n    }\n    cachedCommitSHAs = shas;\n    return shas;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}