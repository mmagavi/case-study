{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProcessingQueue = void 0;\nconst log_js_1 = require(\"./log.js\");\nclass ProcessingQueue {\n  #catch;\n  #logger;\n  #processor;\n  #queue = [];\n  // Flag to keep only 1 active processor.\n  #isProcessing = false;\n  constructor(processor, _catch = () => Promise.resolve(), logger) {\n    this.#catch = _catch;\n    this.#processor = processor;\n    this.#logger = logger;\n  }\n  add(entry) {\n    this.#queue.push(entry);\n    // No need in waiting. Just initialise processor if needed.\n    void this.#processIfNeeded();\n  }\n  async #processIfNeeded() {\n    if (this.#isProcessing) {\n      return;\n    }\n    this.#isProcessing = true;\n    while (this.#queue.length > 0) {\n      const entryPromise = this.#queue.shift();\n      if (entryPromise !== undefined) {\n        await entryPromise.then(entry => this.#processor(entry)).catch(e => {\n          this.#logger?.(log_js_1.LogType.system, 'Event was not processed:', e);\n          this.#catch(e);\n        });\n      }\n    }\n    this.#isProcessing = false;\n  }\n}\nexports.ProcessingQueue = ProcessingQueue;","map":{"version":3,"names":["log_js_1","require","ProcessingQueue","catch","logger","processor","queue","isProcessing","constructor","_catch","Promise","resolve","add","entry","push","processIfNeeded","#processIfNeeded","length","entryPromise","shift","undefined","then","e","LogType","system","exports"],"sources":["../../../src/utils/processingQueue.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AAiBA,MAAAA,QAAA,GAAAC,OAAA;AAEA,MAAaC,eAAe;EACjB,CAAAC,KAAM;EACN,CAAAC,MAAO;EACP,CAAAC,SAAU;EACV,CAAAC,KAAM,GAAiB,EAAE;EAElC;EACA,CAAAC,YAAa,GAAG,KAAK;EAErBC,YACEH,SAAoC,EACpCI,MAAA,GAA4CA,CAAA,KAAMC,OAAO,CAACC,OAAO,EAAE,EACnEP,MAAiB;IAEjB,IAAI,CAAC,CAAAD,KAAM,GAAGM,MAAM;IACpB,IAAI,CAAC,CAAAJ,SAAU,GAAGA,SAAS;IAC3B,IAAI,CAAC,CAAAD,MAAO,GAAGA,MAAM;EACvB;EAEAQ,GAAGA,CAACC,KAAiB;IACnB,IAAI,CAAC,CAAAP,KAAM,CAACQ,IAAI,CAACD,KAAK,CAAC;IACvB;IACA,KAAK,IAAI,CAAC,CAAAE,eAAgB,EAAE;EAC9B;EAEA,MAAM,CAAAA,eAAgBC,CAAA;IACpB,IAAI,IAAI,CAAC,CAAAT,YAAa,EAAE;MACtB;;IAEF,IAAI,CAAC,CAAAA,YAAa,GAAG,IAAI;IACzB,OAAO,IAAI,CAAC,CAAAD,KAAM,CAACW,MAAM,GAAG,CAAC,EAAE;MAC7B,MAAMC,YAAY,GAAG,IAAI,CAAC,CAAAZ,KAAM,CAACa,KAAK,EAAE;MACxC,IAAID,YAAY,KAAKE,SAAS,EAAE;QAC9B,MAAMF,YAAY,CACfG,IAAI,CAAER,KAAK,IAAK,IAAI,CAAC,CAAAR,SAAU,CAACQ,KAAK,CAAC,CAAC,CACvCV,KAAK,CAAEmB,CAAC,IAAI;UACX,IAAI,CAAC,CAAAlB,MAAO,GAAGJ,QAAA,CAAAuB,OAAO,CAACC,MAAM,EAAE,0BAA0B,EAAEF,CAAC,CAAC;UAC7D,IAAI,CAAC,CAAAnB,KAAM,CAACmB,CAAC,CAAC;QAChB,CAAC,CAAC;;;IAIR,IAAI,CAAC,CAAAf,YAAa,GAAG,KAAK;EAC5B;;AA3CFkB,OAAA,CAAAvB,eAAA,GAAAA,eAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}