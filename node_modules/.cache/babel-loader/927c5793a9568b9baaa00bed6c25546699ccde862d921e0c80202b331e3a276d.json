{"ast":null,"code":"/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Target_browserContext, _Target_session, _Target_targetInfo, _Target_sessionFactory, _Target_ignoreHTTPSErrors, _Target_defaultViewport, _Target_pagePromise, _Target_workerPromise, _Target_screenshotTaskQueue, _Target_targetManager;\nimport { CDPPage } from './Page.js';\nimport { WebWorker } from './WebWorker.js';\n/**\n * Target represents a\n * {@link https://chromedevtools.github.io/devtools-protocol/tot/Target/ | CDP target}.\n * In CDP a target is something that can be debugged such a frame, a page or a\n * worker.\n *\n * @public\n */\nexport class Target {\n  /**\n   * @internal\n   */\n  constructor(targetInfo, session, browserContext, targetManager, sessionFactory, ignoreHTTPSErrors, defaultViewport, screenshotTaskQueue, isPageTargetCallback) {\n    _Target_browserContext.set(this, void 0);\n    _Target_session.set(this, void 0);\n    _Target_targetInfo.set(this, void 0);\n    _Target_sessionFactory.set(this, void 0);\n    _Target_ignoreHTTPSErrors.set(this, void 0);\n    _Target_defaultViewport.set(this, void 0);\n    _Target_pagePromise.set(this, void 0);\n    _Target_workerPromise.set(this, void 0);\n    _Target_screenshotTaskQueue.set(this, void 0);\n    _Target_targetManager.set(this, void 0);\n    __classPrivateFieldSet(this, _Target_session, session, \"f\");\n    __classPrivateFieldSet(this, _Target_targetManager, targetManager, \"f\");\n    __classPrivateFieldSet(this, _Target_targetInfo, targetInfo, \"f\");\n    __classPrivateFieldSet(this, _Target_browserContext, browserContext, \"f\");\n    this._targetId = targetInfo.targetId;\n    __classPrivateFieldSet(this, _Target_sessionFactory, sessionFactory, \"f\");\n    __classPrivateFieldSet(this, _Target_ignoreHTTPSErrors, ignoreHTTPSErrors, \"f\");\n    __classPrivateFieldSet(this, _Target_defaultViewport, defaultViewport !== null && defaultViewport !== void 0 ? defaultViewport : undefined, \"f\");\n    __classPrivateFieldSet(this, _Target_screenshotTaskQueue, screenshotTaskQueue, \"f\");\n    this._isPageTargetCallback = isPageTargetCallback;\n    this._initializedPromise = new Promise(fulfill => {\n      return this._initializedCallback = fulfill;\n    }).then(async success => {\n      if (!success) {\n        return false;\n      }\n      const opener = this.opener();\n      if (!opener || !__classPrivateFieldGet(opener, _Target_pagePromise, \"f\") || this.type() !== 'page') {\n        return true;\n      }\n      const openerPage = await __classPrivateFieldGet(opener, _Target_pagePromise, \"f\");\n      if (!openerPage.listenerCount(\"popup\" /* PageEmittedEvents.Popup */)) {\n        return true;\n      }\n      const popupPage = await this.page();\n      openerPage.emit(\"popup\" /* PageEmittedEvents.Popup */, popupPage);\n      return true;\n    });\n    this._isClosedPromise = new Promise(fulfill => {\n      return this._closedCallback = fulfill;\n    });\n    this._isInitialized = !this._isPageTargetCallback(__classPrivateFieldGet(this, _Target_targetInfo, \"f\")) || __classPrivateFieldGet(this, _Target_targetInfo, \"f\").url !== '';\n    if (this._isInitialized) {\n      this._initializedCallback(true);\n    }\n  }\n  /**\n   * @internal\n   */\n  _session() {\n    return __classPrivateFieldGet(this, _Target_session, \"f\");\n  }\n  /**\n   * Creates a Chrome Devtools Protocol session attached to the target.\n   */\n  createCDPSession() {\n    return __classPrivateFieldGet(this, _Target_sessionFactory, \"f\").call(this, false);\n  }\n  /**\n   * @internal\n   */\n  _targetManager() {\n    return __classPrivateFieldGet(this, _Target_targetManager, \"f\");\n  }\n  /**\n   * @internal\n   */\n  _getTargetInfo() {\n    return __classPrivateFieldGet(this, _Target_targetInfo, \"f\");\n  }\n  /**\n   * If the target is not of type `\"page\"` or `\"background_page\"`, returns `null`.\n   */\n  async page() {\n    var _a;\n    if (this._isPageTargetCallback(__classPrivateFieldGet(this, _Target_targetInfo, \"f\")) && !__classPrivateFieldGet(this, _Target_pagePromise, \"f\")) {\n      __classPrivateFieldSet(this, _Target_pagePromise, (__classPrivateFieldGet(this, _Target_session, \"f\") ? Promise.resolve(__classPrivateFieldGet(this, _Target_session, \"f\")) : __classPrivateFieldGet(this, _Target_sessionFactory, \"f\").call(this, true)).then(client => {\n        var _a;\n        return CDPPage._create(client, this, __classPrivateFieldGet(this, _Target_ignoreHTTPSErrors, \"f\"), (_a = __classPrivateFieldGet(this, _Target_defaultViewport, \"f\")) !== null && _a !== void 0 ? _a : null, __classPrivateFieldGet(this, _Target_screenshotTaskQueue, \"f\"));\n      }), \"f\");\n    }\n    return (_a = await __classPrivateFieldGet(this, _Target_pagePromise, \"f\")) !== null && _a !== void 0 ? _a : null;\n  }\n  /**\n   * If the target is not of type `\"service_worker\"` or `\"shared_worker\"`, returns `null`.\n   */\n  async worker() {\n    if (__classPrivateFieldGet(this, _Target_targetInfo, \"f\").type !== 'service_worker' && __classPrivateFieldGet(this, _Target_targetInfo, \"f\").type !== 'shared_worker') {\n      return null;\n    }\n    if (!__classPrivateFieldGet(this, _Target_workerPromise, \"f\")) {\n      // TODO(einbinder): Make workers send their console logs.\n      __classPrivateFieldSet(this, _Target_workerPromise, (__classPrivateFieldGet(this, _Target_session, \"f\") ? Promise.resolve(__classPrivateFieldGet(this, _Target_session, \"f\")) : __classPrivateFieldGet(this, _Target_sessionFactory, \"f\").call(this, false)).then(client => {\n        return new WebWorker(client, __classPrivateFieldGet(this, _Target_targetInfo, \"f\").url, () => {} /* consoleAPICalled */, () => {} /* exceptionThrown */);\n      }), \"f\");\n    }\n    return __classPrivateFieldGet(this, _Target_workerPromise, \"f\");\n  }\n  url() {\n    return __classPrivateFieldGet(this, _Target_targetInfo, \"f\").url;\n  }\n  /**\n   * Identifies what kind of target this is.\n   *\n   * @remarks\n   *\n   * See {@link https://developer.chrome.com/extensions/background_pages | docs} for more info about background pages.\n   */\n  type() {\n    const type = __classPrivateFieldGet(this, _Target_targetInfo, \"f\").type;\n    if (type === 'page' || type === 'background_page' || type === 'service_worker' || type === 'shared_worker' || type === 'browser' || type === 'webview') {\n      return type;\n    }\n    return 'other';\n  }\n  /**\n   * Get the browser the target belongs to.\n   */\n  browser() {\n    return __classPrivateFieldGet(this, _Target_browserContext, \"f\").browser();\n  }\n  /**\n   * Get the browser context the target belongs to.\n   */\n  browserContext() {\n    return __classPrivateFieldGet(this, _Target_browserContext, \"f\");\n  }\n  /**\n   * Get the target that opened this target. Top-level targets return `null`.\n   */\n  opener() {\n    const {\n      openerId\n    } = __classPrivateFieldGet(this, _Target_targetInfo, \"f\");\n    if (!openerId) {\n      return;\n    }\n    return this.browser()._targets.get(openerId);\n  }\n  /**\n   * @internal\n   */\n  _targetInfoChanged(targetInfo) {\n    __classPrivateFieldSet(this, _Target_targetInfo, targetInfo, \"f\");\n    if (!this._isInitialized && (!this._isPageTargetCallback(__classPrivateFieldGet(this, _Target_targetInfo, \"f\")) || __classPrivateFieldGet(this, _Target_targetInfo, \"f\").url !== '')) {\n      this._isInitialized = true;\n      this._initializedCallback(true);\n      return;\n    }\n  }\n}\n_Target_browserContext = new WeakMap(), _Target_session = new WeakMap(), _Target_targetInfo = new WeakMap(), _Target_sessionFactory = new WeakMap(), _Target_ignoreHTTPSErrors = new WeakMap(), _Target_defaultViewport = new WeakMap(), _Target_pagePromise = new WeakMap(), _Target_workerPromise = new WeakMap(), _Target_screenshotTaskQueue = new WeakMap(), _Target_targetManager = new WeakMap();","map":{"version":3,"names":["CDPPage","WebWorker","Target","constructor","targetInfo","session","browserContext","targetManager","sessionFactory","ignoreHTTPSErrors","defaultViewport","screenshotTaskQueue","isPageTargetCallback","_Target_browserContext","set","_Target_session","_Target_targetInfo","_Target_sessionFactory","_Target_ignoreHTTPSErrors","_Target_defaultViewport","_Target_pagePromise","_Target_workerPromise","_Target_screenshotTaskQueue","_Target_targetManager","__classPrivateFieldSet","_targetId","targetId","undefined","_isPageTargetCallback","_initializedPromise","Promise","fulfill","_initializedCallback","then","success","opener","__classPrivateFieldGet","type","openerPage","listenerCount","popupPage","page","emit","_isClosedPromise","_closedCallback","_isInitialized","url","_session","createCDPSession","call","_targetManager","_getTargetInfo","resolve","client","_create","_a","worker","browser","openerId","_targets","get","_targetInfoChanged"],"sources":["../../../../src/common/Target.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}