{"ast":null,"code":"import { LLMChain } from \"./llm_chain.js\";\nimport { PromptTemplate } from \"../prompts/prompt.js\";\nimport { BufferMemory } from \"../memory/buffer_memory.js\";\nexport const DEFAULT_TEMPLATE = `The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\n\nCurrent conversation:\n{history}\nHuman: {input}\nAI:`;\n/**\n * A class for conducting conversations between a human and an AI. It\n * extends the {@link LLMChain} class.\n */\nexport class ConversationChain extends LLMChain {\n  static lc_name() {\n    return \"ConversationChain\";\n  }\n  constructor({\n    prompt,\n    outputKey,\n    memory,\n    ...rest\n  }) {\n    super({\n      prompt: prompt ?? new PromptTemplate({\n        template: DEFAULT_TEMPLATE,\n        inputVariables: [\"history\", \"input\"]\n      }),\n      outputKey: outputKey ?? \"response\",\n      memory: memory ?? new BufferMemory(),\n      ...rest\n    });\n  }\n}","map":{"version":3,"names":["LLMChain","PromptTemplate","BufferMemory","DEFAULT_TEMPLATE","ConversationChain","lc_name","constructor","prompt","outputKey","memory","rest","template","inputVariables"],"sources":["/Users/mayamagavi/instalily/case-study/node_modules/langchain/dist/chains/conversation.js"],"sourcesContent":["import { LLMChain } from \"./llm_chain.js\";\nimport { PromptTemplate } from \"../prompts/prompt.js\";\nimport { BufferMemory } from \"../memory/buffer_memory.js\";\nexport const DEFAULT_TEMPLATE = `The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\n\nCurrent conversation:\n{history}\nHuman: {input}\nAI:`;\n/**\n * A class for conducting conversations between a human and an AI. It\n * extends the {@link LLMChain} class.\n */\nexport class ConversationChain extends LLMChain {\n    static lc_name() {\n        return \"ConversationChain\";\n    }\n    constructor({ prompt, outputKey, memory, ...rest }) {\n        super({\n            prompt: prompt ??\n                new PromptTemplate({\n                    template: DEFAULT_TEMPLATE,\n                    inputVariables: [\"history\", \"input\"],\n                }),\n            outputKey: outputKey ?? \"response\",\n            memory: memory ?? new BufferMemory(),\n            ...rest,\n        });\n    }\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,YAAY,QAAQ,4BAA4B;AACzD,OAAO,MAAMC,gBAAgB,GAAI;AACjC;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,OAAO,MAAMC,iBAAiB,SAASJ,QAAQ,CAAC;EAC5C,OAAOK,OAAOA,CAAA,EAAG;IACb,OAAO,mBAAmB;EAC9B;EACAC,WAAWA,CAAC;IAAEC,MAAM;IAAEC,SAAS;IAAEC,MAAM;IAAE,GAAGC;EAAK,CAAC,EAAE;IAChD,KAAK,CAAC;MACFH,MAAM,EAAEA,MAAM,IACV,IAAIN,cAAc,CAAC;QACfU,QAAQ,EAAER,gBAAgB;QAC1BS,cAAc,EAAE,CAAC,SAAS,EAAE,OAAO;MACvC,CAAC,CAAC;MACNJ,SAAS,EAAEA,SAAS,IAAI,UAAU;MAClCC,MAAM,EAAEA,MAAM,IAAI,IAAIP,YAAY,CAAC,CAAC;MACpC,GAAGQ;IACP,CAAC,CAAC;EACN;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}