{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseRecordDef = void 0;\nconst zod_1 = require(\"zod\");\nconst parseDef_1 = require(\"../parseDef\");\nconst string_1 = require(\"./string\");\nfunction parseRecordDef(def, refs) {\n  var _a, _b, _c, _d, _e;\n  if (refs.target === \"openApi3\" && ((_a = def.keyType) === null || _a === void 0 ? void 0 : _a._def.typeName) === zod_1.ZodFirstPartyTypeKind.ZodEnum) {\n    return {\n      type: \"object\",\n      required: def.keyType._def.values,\n      properties: def.keyType._def.values.reduce((acc, key) => {\n        var _a;\n        return Object.assign(Object.assign({}, acc), {\n          [key]: (_a = (0, parseDef_1.parseDef)(def.valueType._def, Object.assign(Object.assign({}, refs), {\n            currentPath: [...refs.currentPath, \"properties\", key]\n          }))) !== null && _a !== void 0 ? _a : {}\n        });\n      }, {}),\n      additionalProperties: false\n    };\n  }\n  const schema = {\n    type: \"object\",\n    additionalProperties: (_b = (0, parseDef_1.parseDef)(def.valueType._def, Object.assign(Object.assign({}, refs), {\n      currentPath: [...refs.currentPath, \"additionalProperties\"]\n    }))) !== null && _b !== void 0 ? _b : {}\n  };\n  if (refs.target === \"openApi3\") {\n    return schema;\n  }\n  if (((_c = def.keyType) === null || _c === void 0 ? void 0 : _c._def.typeName) === zod_1.ZodFirstPartyTypeKind.ZodString && ((_d = def.keyType._def.checks) === null || _d === void 0 ? void 0 : _d.length)) {\n    const keyType = Object.entries((0, string_1.parseStringDef)(def.keyType._def, refs)).reduce((acc, [key, value]) => key === \"type\" ? acc : Object.assign(Object.assign({}, acc), {\n      [key]: value\n    }), {});\n    return Object.assign(Object.assign({}, schema), {\n      propertyNames: keyType\n    });\n  } else if (((_e = def.keyType) === null || _e === void 0 ? void 0 : _e._def.typeName) === zod_1.ZodFirstPartyTypeKind.ZodEnum) {\n    return Object.assign(Object.assign({}, schema), {\n      propertyNames: {\n        enum: def.keyType._def.values\n      }\n    });\n  }\n  return schema;\n}\nexports.parseRecordDef = parseRecordDef;","map":{"version":3,"names":["Object","defineProperty","exports","value","parseRecordDef","zod_1","require","parseDef_1","string_1","def","refs","_a","_b","_c","_d","_e","target","keyType","_def","typeName","ZodFirstPartyTypeKind","ZodEnum","type","required","values","properties","reduce","acc","key","assign","parseDef","valueType","currentPath","additionalProperties","schema","ZodString","checks","length","entries","parseStringDef","propertyNames","enum"],"sources":["/Users/mayamagavi/instalily/case-study/node_modules/zod-to-json-schema/src/parsers/record.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseRecordDef = void 0;\nconst zod_1 = require(\"zod\");\nconst parseDef_1 = require(\"../parseDef\");\nconst string_1 = require(\"./string\");\nfunction parseRecordDef(def, refs) {\n    var _a, _b, _c, _d, _e;\n    if (refs.target === \"openApi3\" &&\n        ((_a = def.keyType) === null || _a === void 0 ? void 0 : _a._def.typeName) === zod_1.ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            type: \"object\",\n            required: def.keyType._def.values,\n            properties: def.keyType._def.values.reduce((acc, key) => {\n                var _a;\n                return (Object.assign(Object.assign({}, acc), { [key]: (_a = (0, parseDef_1.parseDef)(def.valueType._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"properties\", key] }))) !== null && _a !== void 0 ? _a : {} }));\n            }, {}),\n            additionalProperties: false,\n        };\n    }\n    const schema = {\n        type: \"object\",\n        additionalProperties: (_b = (0, parseDef_1.parseDef)(def.valueType._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"additionalProperties\"] }))) !== null && _b !== void 0 ? _b : {},\n    };\n    if (refs.target === \"openApi3\") {\n        return schema;\n    }\n    if (((_c = def.keyType) === null || _c === void 0 ? void 0 : _c._def.typeName) === zod_1.ZodFirstPartyTypeKind.ZodString &&\n        ((_d = def.keyType._def.checks) === null || _d === void 0 ? void 0 : _d.length)) {\n        const keyType = Object.entries((0, string_1.parseStringDef)(def.keyType._def, refs)).reduce((acc, [key, value]) => (key === \"type\" ? acc : Object.assign(Object.assign({}, acc), { [key]: value })), {});\n        return Object.assign(Object.assign({}, schema), { propertyNames: keyType });\n    }\n    else if (((_e = def.keyType) === null || _e === void 0 ? void 0 : _e._def.typeName) === zod_1.ZodFirstPartyTypeKind.ZodEnum) {\n        return Object.assign(Object.assign({}, schema), { propertyNames: {\n                enum: def.keyType._def.values,\n            } });\n    }\n    return schema;\n}\nexports.parseRecordDef = parseRecordDef;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,cAAc,GAAG,KAAK,CAAC;AAC/B,MAAMC,KAAK,GAAGC,OAAO,CAAC,KAAK,CAAC;AAC5B,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAa,CAAC;AACzC,MAAME,QAAQ,GAAGF,OAAO,CAAC,UAAU,CAAC;AACpC,SAASF,cAAcA,CAACK,GAAG,EAAEC,IAAI,EAAE;EAC/B,IAAIC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE;EACtB,IAAIL,IAAI,CAACM,MAAM,KAAK,UAAU,IAC1B,CAAC,CAACL,EAAE,GAAGF,GAAG,CAACQ,OAAO,MAAM,IAAI,IAAIN,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACO,IAAI,CAACC,QAAQ,MAAMd,KAAK,CAACe,qBAAqB,CAACC,OAAO,EAAE;IACpH,OAAO;MACHC,IAAI,EAAE,QAAQ;MACdC,QAAQ,EAAEd,GAAG,CAACQ,OAAO,CAACC,IAAI,CAACM,MAAM;MACjCC,UAAU,EAAEhB,GAAG,CAACQ,OAAO,CAACC,IAAI,CAACM,MAAM,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;QACrD,IAAIjB,EAAE;QACN,OAAQX,MAAM,CAAC6B,MAAM,CAAC7B,MAAM,CAAC6B,MAAM,CAAC,CAAC,CAAC,EAAEF,GAAG,CAAC,EAAE;UAAE,CAACC,GAAG,GAAG,CAACjB,EAAE,GAAG,CAAC,CAAC,EAAEJ,UAAU,CAACuB,QAAQ,EAAErB,GAAG,CAACsB,SAAS,CAACb,IAAI,EAAElB,MAAM,CAAC6B,MAAM,CAAC7B,MAAM,CAAC6B,MAAM,CAAC,CAAC,CAAC,EAAEnB,IAAI,CAAC,EAAE;YAAEsB,WAAW,EAAE,CAAC,GAAGtB,IAAI,CAACsB,WAAW,EAAE,YAAY,EAAEJ,GAAG;UAAE,CAAC,CAAC,CAAC,MAAM,IAAI,IAAIjB,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC;QAAE,CAAC,CAAC;MACxP,CAAC,EAAE,CAAC,CAAC,CAAC;MACNsB,oBAAoB,EAAE;IAC1B,CAAC;EACL;EACA,MAAMC,MAAM,GAAG;IACXZ,IAAI,EAAE,QAAQ;IACdW,oBAAoB,EAAE,CAACrB,EAAE,GAAG,CAAC,CAAC,EAAEL,UAAU,CAACuB,QAAQ,EAAErB,GAAG,CAACsB,SAAS,CAACb,IAAI,EAAElB,MAAM,CAAC6B,MAAM,CAAC7B,MAAM,CAAC6B,MAAM,CAAC,CAAC,CAAC,EAAEnB,IAAI,CAAC,EAAE;MAAEsB,WAAW,EAAE,CAAC,GAAGtB,IAAI,CAACsB,WAAW,EAAE,sBAAsB;IAAE,CAAC,CAAC,CAAC,MAAM,IAAI,IAAIpB,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC;EACxN,CAAC;EACD,IAAIF,IAAI,CAACM,MAAM,KAAK,UAAU,EAAE;IAC5B,OAAOkB,MAAM;EACjB;EACA,IAAI,CAAC,CAACrB,EAAE,GAAGJ,GAAG,CAACQ,OAAO,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACK,IAAI,CAACC,QAAQ,MAAMd,KAAK,CAACe,qBAAqB,CAACe,SAAS,KACnH,CAACrB,EAAE,GAAGL,GAAG,CAACQ,OAAO,CAACC,IAAI,CAACkB,MAAM,MAAM,IAAI,IAAItB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACuB,MAAM,CAAC,EAAE;IACjF,MAAMpB,OAAO,GAAGjB,MAAM,CAACsC,OAAO,CAAC,CAAC,CAAC,EAAE9B,QAAQ,CAAC+B,cAAc,EAAE9B,GAAG,CAACQ,OAAO,CAACC,IAAI,EAAER,IAAI,CAAC,CAAC,CAACgB,MAAM,CAAC,CAACC,GAAG,EAAE,CAACC,GAAG,EAAEzB,KAAK,CAAC,KAAMyB,GAAG,KAAK,MAAM,GAAGD,GAAG,GAAG3B,MAAM,CAAC6B,MAAM,CAAC7B,MAAM,CAAC6B,MAAM,CAAC,CAAC,CAAC,EAAEF,GAAG,CAAC,EAAE;MAAE,CAACC,GAAG,GAAGzB;IAAM,CAAC,CAAE,EAAE,CAAC,CAAC,CAAC;IACxM,OAAOH,MAAM,CAAC6B,MAAM,CAAC7B,MAAM,CAAC6B,MAAM,CAAC,CAAC,CAAC,EAAEK,MAAM,CAAC,EAAE;MAAEM,aAAa,EAAEvB;IAAQ,CAAC,CAAC;EAC/E,CAAC,MACI,IAAI,CAAC,CAACF,EAAE,GAAGN,GAAG,CAACQ,OAAO,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACG,IAAI,CAACC,QAAQ,MAAMd,KAAK,CAACe,qBAAqB,CAACC,OAAO,EAAE;IACzH,OAAOrB,MAAM,CAAC6B,MAAM,CAAC7B,MAAM,CAAC6B,MAAM,CAAC,CAAC,CAAC,EAAEK,MAAM,CAAC,EAAE;MAAEM,aAAa,EAAE;QACzDC,IAAI,EAAEhC,GAAG,CAACQ,OAAO,CAACC,IAAI,CAACM;MAC3B;IAAE,CAAC,CAAC;EACZ;EACA,OAAOU,MAAM;AACjB;AACAhC,OAAO,CAACE,cAAc,GAAGA,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}