{"ast":null,"code":"/**\n * Copyright 2022 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _LazyArg_get;\n/**\n * @internal\n */\nexport class LazyArg {\n  constructor(get) {\n    _LazyArg_get.set(this, void 0);\n    __classPrivateFieldSet(this, _LazyArg_get, get, \"f\");\n  }\n  async get(context) {\n    return __classPrivateFieldGet(this, _LazyArg_get, \"f\").call(this, context);\n  }\n}\n_LazyArg_get = new WeakMap();\nLazyArg.create = get => {\n  // We don't want to introduce LazyArg to the type system, otherwise we would\n  // have to make it public.\n  return new LazyArg(get);\n};","map":{"version":3,"names":["LazyArg","constructor","get","_LazyArg_get","set","__classPrivateFieldSet","context","__classPrivateFieldGet","call","create"],"sources":["../../../../src/common/LazyArg.ts"],"sourcesContent":[null],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA;;;AAGA,OAAM,MAAOA,OAAO;EAUlBC,YAAoBC,GAAkD;IADtEC,YAAA,CAAAC,GAAA;IAEEC,sBAAA,KAAI,EAAAF,YAAA,EAAQD,GAAG;EACjB;EAEA,MAAMA,GAAGA,CAACI,OAAyB;IACjC,OAAOC,sBAAA,KAAI,EAAAJ,YAAA,MAAK,CAAAK,IAAA,CAAT,IAAI,EAAMF,OAAO,CAAC;EAC3B;;;AAfON,OAAA,CAAAS,MAAM,GACXP,GAAkD,IAC7C;EACL;EACA;EACA,OAAO,IAAIF,OAAO,CAACE,GAAG,CAAiB;AACzC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}