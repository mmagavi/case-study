{"ast":null,"code":"/*\n * Support async iterator syntax for ReadableStreams in all environments.\n * Source: https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport function readableStreamToAsyncIterable(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nstream, preventCancel = false) {\n  if (stream[Symbol.asyncIterator]) {\n    return stream[Symbol.asyncIterator]();\n  }\n  const reader = stream.getReader();\n  return {\n    async next() {\n      try {\n        const result = await reader.read();\n        if (result.done) reader.releaseLock(); // release lock when stream becomes closed\n        return result;\n      } catch (e) {\n        reader.releaseLock(); // release lock when stream becomes errored\n        throw e;\n      }\n    },\n    async return() {\n      if (!preventCancel) {\n        const cancelPromise = reader.cancel(); // cancel first, but don't await yet\n        reader.releaseLock(); // release lock first\n        await cancelPromise; // now await it\n      } else {\n        reader.releaseLock();\n      }\n      return {\n        done: true,\n        value: undefined\n      };\n    },\n    [Symbol.asyncIterator]() {\n      return this;\n    }\n  };\n}\nexport class IterableReadableStream extends ReadableStream {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"reader\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n  }\n  ensureReader() {\n    if (!this.reader) {\n      this.reader = this.getReader();\n    }\n  }\n  async next() {\n    this.ensureReader();\n    try {\n      const result = await this.reader.read();\n      if (result.done) this.reader.releaseLock(); // release lock when stream becomes closed\n      return result;\n    } catch (e) {\n      this.reader.releaseLock(); // release lock when stream becomes errored\n      throw e;\n    }\n  }\n  async return() {\n    this.ensureReader();\n    const cancelPromise = this.reader.cancel(); // cancel first, but don't await yet\n    this.reader.releaseLock(); // release lock first\n    await cancelPromise; // now await it\n    return {\n      done: true,\n      value: undefined\n    };\n  }\n  [Symbol.asyncIterator]() {\n    return this;\n  }\n  static fromReadableStream(stream) {\n    // From https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_streams#reading_the_stream\n    const reader = stream.getReader();\n    return new IterableReadableStream({\n      start(controller) {\n        return pump();\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        function pump() {\n          return reader.read().then(({\n            done,\n            value\n          }) => {\n            // When no more data needs to be consumed, close the stream\n            if (done) {\n              controller.close();\n              return;\n            }\n            // Enqueue the next data chunk into our target stream\n            controller.enqueue(value);\n            return pump();\n          });\n        }\n      }\n    });\n  }\n  static fromAsyncGenerator(generator) {\n    return new IterableReadableStream({\n      async pull(controller) {\n        const {\n          value,\n          done\n        } = await generator.next();\n        if (done) {\n          controller.close();\n        } else if (value) {\n          controller.enqueue(value);\n        }\n      }\n    });\n  }\n}","map":{"version":3,"names":["readableStreamToAsyncIterable","stream","preventCancel","Symbol","asyncIterator","reader","getReader","next","result","read","done","releaseLock","e","return","cancelPromise","cancel","value","undefined","IterableReadableStream","ReadableStream","constructor","arguments","Object","defineProperty","enumerable","configurable","writable","ensureReader","fromReadableStream","start","controller","pump","then","close","enqueue","fromAsyncGenerator","generator","pull"],"sources":["/Users/mayamagavi/instalily/case-study/node_modules/langchain/dist/util/stream.js"],"sourcesContent":["/*\n * Support async iterator syntax for ReadableStreams in all environments.\n * Source: https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport function readableStreamToAsyncIterable(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nstream, preventCancel = false) {\n    if (stream[Symbol.asyncIterator]) {\n        return stream[Symbol.asyncIterator]();\n    }\n    const reader = stream.getReader();\n    return {\n        async next() {\n            try {\n                const result = await reader.read();\n                if (result.done)\n                    reader.releaseLock(); // release lock when stream becomes closed\n                return result;\n            }\n            catch (e) {\n                reader.releaseLock(); // release lock when stream becomes errored\n                throw e;\n            }\n        },\n        async return() {\n            if (!preventCancel) {\n                const cancelPromise = reader.cancel(); // cancel first, but don't await yet\n                reader.releaseLock(); // release lock first\n                await cancelPromise; // now await it\n            }\n            else {\n                reader.releaseLock();\n            }\n            return { done: true, value: undefined };\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\nexport class IterableReadableStream extends ReadableStream {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"reader\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    ensureReader() {\n        if (!this.reader) {\n            this.reader = this.getReader();\n        }\n    }\n    async next() {\n        this.ensureReader();\n        try {\n            const result = await this.reader.read();\n            if (result.done)\n                this.reader.releaseLock(); // release lock when stream becomes closed\n            return result;\n        }\n        catch (e) {\n            this.reader.releaseLock(); // release lock when stream becomes errored\n            throw e;\n        }\n    }\n    async return() {\n        this.ensureReader();\n        const cancelPromise = this.reader.cancel(); // cancel first, but don't await yet\n        this.reader.releaseLock(); // release lock first\n        await cancelPromise; // now await it\n        return { done: true, value: undefined };\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n    static fromReadableStream(stream) {\n        // From https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_streams#reading_the_stream\n        const reader = stream.getReader();\n        return new IterableReadableStream({\n            start(controller) {\n                return pump();\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                function pump() {\n                    return reader.read().then(({ done, value }) => {\n                        // When no more data needs to be consumed, close the stream\n                        if (done) {\n                            controller.close();\n                            return;\n                        }\n                        // Enqueue the next data chunk into our target stream\n                        controller.enqueue(value);\n                        return pump();\n                    });\n                }\n            },\n        });\n    }\n    static fromAsyncGenerator(generator) {\n        return new IterableReadableStream({\n            async pull(controller) {\n                const { value, done } = await generator.next();\n                if (done) {\n                    controller.close();\n                }\n                else if (value) {\n                    controller.enqueue(value);\n                }\n            },\n        });\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}