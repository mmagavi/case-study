{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2022 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ChromeTargetManager_instances, _ChromeTargetManager_connection, _ChromeTargetManager_discoveredTargetsByTargetId, _ChromeTargetManager_attachedTargetsByTargetId, _ChromeTargetManager_attachedTargetsBySessionId, _ChromeTargetManager_ignoredTargets, _ChromeTargetManager_targetFilterCallback, _ChromeTargetManager_targetFactory, _ChromeTargetManager_targetInterceptors, _ChromeTargetManager_attachedToTargetListenersBySession, _ChromeTargetManager_detachedFromTargetListenersBySession, _ChromeTargetManager_initializePromise, _ChromeTargetManager_targetsIdsForInit, _ChromeTargetManager_storeExistingTargetsForInit, _ChromeTargetManager_setupAttachmentListeners, _ChromeTargetManager_removeAttachmentListeners, _ChromeTargetManager_onSessionDetached, _ChromeTargetManager_onTargetCreated, _ChromeTargetManager_onTargetDestroyed, _ChromeTargetManager_onTargetInfoChanged, _ChromeTargetManager_onAttachedToTarget, _ChromeTargetManager_finishInitializationIfReady, _ChromeTargetManager_onDetachedFromTarget;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChromeTargetManager = void 0;\nconst assert_js_1 = require(\"../util/assert.js\");\nconst DeferredPromise_js_1 = require(\"../util/DeferredPromise.js\");\nconst Connection_js_1 = require(\"./Connection.js\");\nconst EventEmitter_js_1 = require(\"./EventEmitter.js\");\nconst util_js_1 = require(\"./util.js\");\n/**\n * ChromeTargetManager uses the CDP's auto-attach mechanism to intercept\n * new targets and allow the rest of Puppeteer to configure listeners while\n * the target is paused.\n *\n * @internal\n */\nclass ChromeTargetManager extends EventEmitter_js_1.EventEmitter {\n  constructor(connection, targetFactory, targetFilterCallback) {\n    super();\n    _ChromeTargetManager_instances.add(this);\n    _ChromeTargetManager_connection.set(this, void 0);\n    /**\n     * Keeps track of the following events: 'Target.targetCreated',\n     * 'Target.targetDestroyed', 'Target.targetInfoChanged'.\n     *\n     * A target becomes discovered when 'Target.targetCreated' is received.\n     * A target is removed from this map once 'Target.targetDestroyed' is\n     * received.\n     *\n     * `targetFilterCallback` has no effect on this map.\n     */\n    _ChromeTargetManager_discoveredTargetsByTargetId.set(this, new Map());\n    /**\n     * A target is added to this map once ChromeTargetManager has created\n     * a Target and attached at least once to it.\n     */\n    _ChromeTargetManager_attachedTargetsByTargetId.set(this, new Map());\n    /**\n     * Tracks which sessions attach to which target.\n     */\n    _ChromeTargetManager_attachedTargetsBySessionId.set(this, new Map());\n    /**\n     * If a target was filtered out by `targetFilterCallback`, we still receive\n     * events about it from CDP, but we don't forward them to the rest of Puppeteer.\n     */\n    _ChromeTargetManager_ignoredTargets.set(this, new Set());\n    _ChromeTargetManager_targetFilterCallback.set(this, void 0);\n    _ChromeTargetManager_targetFactory.set(this, void 0);\n    _ChromeTargetManager_targetInterceptors.set(this, new WeakMap());\n    _ChromeTargetManager_attachedToTargetListenersBySession.set(this, new WeakMap());\n    _ChromeTargetManager_detachedFromTargetListenersBySession.set(this, new WeakMap());\n    _ChromeTargetManager_initializePromise.set(this, (0, DeferredPromise_js_1.createDeferredPromise)());\n    _ChromeTargetManager_targetsIdsForInit.set(this, new Set());\n    _ChromeTargetManager_storeExistingTargetsForInit.set(this, () => {\n      for (const [targetId, targetInfo] of __classPrivateFieldGet(this, _ChromeTargetManager_discoveredTargetsByTargetId, \"f\").entries()) {\n        if ((!__classPrivateFieldGet(this, _ChromeTargetManager_targetFilterCallback, \"f\") || __classPrivateFieldGet(this, _ChromeTargetManager_targetFilterCallback, \"f\").call(this, targetInfo)) && targetInfo.type !== 'browser') {\n          __classPrivateFieldGet(this, _ChromeTargetManager_targetsIdsForInit, \"f\").add(targetId);\n        }\n      }\n    });\n    _ChromeTargetManager_onSessionDetached.set(this, session => {\n      __classPrivateFieldGet(this, _ChromeTargetManager_instances, \"m\", _ChromeTargetManager_removeAttachmentListeners).call(this, session);\n      __classPrivateFieldGet(this, _ChromeTargetManager_targetInterceptors, \"f\").delete(session);\n    });\n    _ChromeTargetManager_onTargetCreated.set(this, async event => {\n      __classPrivateFieldGet(this, _ChromeTargetManager_discoveredTargetsByTargetId, \"f\").set(event.targetInfo.targetId, event.targetInfo);\n      this.emit(\"targetDiscovered\" /* TargetManagerEmittedEvents.TargetDiscovered */, event.targetInfo);\n      // The connection is already attached to the browser target implicitly,\n      // therefore, no new CDPSession is created and we have special handling\n      // here.\n      if (event.targetInfo.type === 'browser' && event.targetInfo.attached) {\n        if (__classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, \"f\").has(event.targetInfo.targetId)) {\n          return;\n        }\n        const target = __classPrivateFieldGet(this, _ChromeTargetManager_targetFactory, \"f\").call(this, event.targetInfo, undefined);\n        __classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, \"f\").set(event.targetInfo.targetId, target);\n      }\n    });\n    _ChromeTargetManager_onTargetDestroyed.set(this, event => {\n      const targetInfo = __classPrivateFieldGet(this, _ChromeTargetManager_discoveredTargetsByTargetId, \"f\").get(event.targetId);\n      __classPrivateFieldGet(this, _ChromeTargetManager_discoveredTargetsByTargetId, \"f\").delete(event.targetId);\n      __classPrivateFieldGet(this, _ChromeTargetManager_instances, \"m\", _ChromeTargetManager_finishInitializationIfReady).call(this, event.targetId);\n      if ((targetInfo === null || targetInfo === void 0 ? void 0 : targetInfo.type) === 'service_worker' && __classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, \"f\").has(event.targetId)) {\n        // Special case for service workers: report TargetGone event when\n        // the worker is destroyed.\n        const target = __classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, \"f\").get(event.targetId);\n        this.emit(\"targetGone\" /* TargetManagerEmittedEvents.TargetGone */, target);\n        __classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, \"f\").delete(event.targetId);\n      }\n    });\n    _ChromeTargetManager_onTargetInfoChanged.set(this, event => {\n      __classPrivateFieldGet(this, _ChromeTargetManager_discoveredTargetsByTargetId, \"f\").set(event.targetInfo.targetId, event.targetInfo);\n      if (__classPrivateFieldGet(this, _ChromeTargetManager_ignoredTargets, \"f\").has(event.targetInfo.targetId) || !__classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, \"f\").has(event.targetInfo.targetId) || !event.targetInfo.attached) {\n        return;\n      }\n      const target = __classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, \"f\").get(event.targetInfo.targetId);\n      this.emit(\"targetChanged\" /* TargetManagerEmittedEvents.TargetChanged */, {\n        target: target,\n        targetInfo: event.targetInfo\n      });\n    });\n    _ChromeTargetManager_onAttachedToTarget.set(this, async (parentSession, event) => {\n      const targetInfo = event.targetInfo;\n      const session = __classPrivateFieldGet(this, _ChromeTargetManager_connection, \"f\").session(event.sessionId);\n      if (!session) {\n        throw new Error(`Session ${event.sessionId} was not created.`);\n      }\n      const silentDetach = async () => {\n        await session.send('Runtime.runIfWaitingForDebugger').catch(util_js_1.debugError);\n        // We don't use `session.detach()` because that dispatches all commands on\n        // the connection instead of the parent session.\n        await parentSession.send('Target.detachFromTarget', {\n          sessionId: session.id()\n        }).catch(util_js_1.debugError);\n      };\n      if (!__classPrivateFieldGet(this, _ChromeTargetManager_connection, \"f\").isAutoAttached(targetInfo.targetId)) {\n        return;\n      }\n      // Special case for service workers: being attached to service workers will\n      // prevent them from ever being destroyed. Therefore, we silently detach\n      // from service workers unless the connection was manually created via\n      // `page.worker()`. To determine this, we use\n      // `this.#connection.isAutoAttached(targetInfo.targetId)`. In the future, we\n      // should determine if a target is auto-attached or not with the help of\n      // CDP.\n      if (targetInfo.type === 'service_worker' && __classPrivateFieldGet(this, _ChromeTargetManager_connection, \"f\").isAutoAttached(targetInfo.targetId)) {\n        __classPrivateFieldGet(this, _ChromeTargetManager_instances, \"m\", _ChromeTargetManager_finishInitializationIfReady).call(this, targetInfo.targetId);\n        await silentDetach();\n        if (__classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, \"f\").has(targetInfo.targetId)) {\n          return;\n        }\n        const target = __classPrivateFieldGet(this, _ChromeTargetManager_targetFactory, \"f\").call(this, targetInfo);\n        __classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, \"f\").set(targetInfo.targetId, target);\n        this.emit(\"targetAvailable\" /* TargetManagerEmittedEvents.TargetAvailable */, target);\n        return;\n      }\n      if (__classPrivateFieldGet(this, _ChromeTargetManager_targetFilterCallback, \"f\") && !__classPrivateFieldGet(this, _ChromeTargetManager_targetFilterCallback, \"f\").call(this, targetInfo)) {\n        __classPrivateFieldGet(this, _ChromeTargetManager_ignoredTargets, \"f\").add(targetInfo.targetId);\n        __classPrivateFieldGet(this, _ChromeTargetManager_instances, \"m\", _ChromeTargetManager_finishInitializationIfReady).call(this, targetInfo.targetId);\n        await silentDetach();\n        return;\n      }\n      const existingTarget = __classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, \"f\").has(targetInfo.targetId);\n      const target = existingTarget ? __classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, \"f\").get(targetInfo.targetId) : __classPrivateFieldGet(this, _ChromeTargetManager_targetFactory, \"f\").call(this, targetInfo, session);\n      __classPrivateFieldGet(this, _ChromeTargetManager_instances, \"m\", _ChromeTargetManager_setupAttachmentListeners).call(this, session);\n      if (existingTarget) {\n        __classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsBySessionId, \"f\").set(session.id(), __classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, \"f\").get(targetInfo.targetId));\n      } else {\n        __classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, \"f\").set(targetInfo.targetId, target);\n        __classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsBySessionId, \"f\").set(session.id(), target);\n      }\n      for (const interceptor of __classPrivateFieldGet(this, _ChromeTargetManager_targetInterceptors, \"f\").get(parentSession) || []) {\n        if (!(parentSession instanceof Connection_js_1.Connection)) {\n          // Sanity check: if parent session is not a connection, it should be\n          // present in #attachedTargetsBySessionId.\n          (0, assert_js_1.assert)(__classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsBySessionId, \"f\").has(parentSession.id()));\n        }\n        interceptor(target, parentSession instanceof Connection_js_1.Connection ? null : __classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsBySessionId, \"f\").get(parentSession.id()));\n      }\n      __classPrivateFieldGet(this, _ChromeTargetManager_targetsIdsForInit, \"f\").delete(target._targetId);\n      if (!existingTarget) {\n        this.emit(\"targetAvailable\" /* TargetManagerEmittedEvents.TargetAvailable */, target);\n      }\n      __classPrivateFieldGet(this, _ChromeTargetManager_instances, \"m\", _ChromeTargetManager_finishInitializationIfReady).call(this);\n      // TODO: the browser might be shutting down here. What do we do with the\n      // error?\n      await Promise.all([session.send('Target.setAutoAttach', {\n        waitForDebuggerOnStart: true,\n        flatten: true,\n        autoAttach: true\n      }), session.send('Runtime.runIfWaitingForDebugger')]).catch(util_js_1.debugError);\n    });\n    _ChromeTargetManager_onDetachedFromTarget.set(this, (_parentSession, event) => {\n      const target = __classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsBySessionId, \"f\").get(event.sessionId);\n      __classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsBySessionId, \"f\").delete(event.sessionId);\n      if (!target) {\n        return;\n      }\n      __classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, \"f\").delete(target._targetId);\n      this.emit(\"targetGone\" /* TargetManagerEmittedEvents.TargetGone */, target);\n    });\n    __classPrivateFieldSet(this, _ChromeTargetManager_connection, connection, \"f\");\n    __classPrivateFieldSet(this, _ChromeTargetManager_targetFilterCallback, targetFilterCallback, \"f\");\n    __classPrivateFieldSet(this, _ChromeTargetManager_targetFactory, targetFactory, \"f\");\n    __classPrivateFieldGet(this, _ChromeTargetManager_connection, \"f\").on('Target.targetCreated', __classPrivateFieldGet(this, _ChromeTargetManager_onTargetCreated, \"f\"));\n    __classPrivateFieldGet(this, _ChromeTargetManager_connection, \"f\").on('Target.targetDestroyed', __classPrivateFieldGet(this, _ChromeTargetManager_onTargetDestroyed, \"f\"));\n    __classPrivateFieldGet(this, _ChromeTargetManager_connection, \"f\").on('Target.targetInfoChanged', __classPrivateFieldGet(this, _ChromeTargetManager_onTargetInfoChanged, \"f\"));\n    __classPrivateFieldGet(this, _ChromeTargetManager_connection, \"f\").on('sessiondetached', __classPrivateFieldGet(this, _ChromeTargetManager_onSessionDetached, \"f\"));\n    __classPrivateFieldGet(this, _ChromeTargetManager_instances, \"m\", _ChromeTargetManager_setupAttachmentListeners).call(this, __classPrivateFieldGet(this, _ChromeTargetManager_connection, \"f\"));\n    __classPrivateFieldGet(this, _ChromeTargetManager_connection, \"f\").send('Target.setDiscoverTargets', {\n      discover: true,\n      filter: [{\n        type: 'tab',\n        exclude: true\n      }, {}]\n    }).then(__classPrivateFieldGet(this, _ChromeTargetManager_storeExistingTargetsForInit, \"f\")).catch(util_js_1.debugError);\n  }\n  async initialize() {\n    await __classPrivateFieldGet(this, _ChromeTargetManager_connection, \"f\").send('Target.setAutoAttach', {\n      waitForDebuggerOnStart: true,\n      flatten: true,\n      autoAttach: true\n    });\n    __classPrivateFieldGet(this, _ChromeTargetManager_instances, \"m\", _ChromeTargetManager_finishInitializationIfReady).call(this);\n    await __classPrivateFieldGet(this, _ChromeTargetManager_initializePromise, \"f\");\n  }\n  dispose() {\n    __classPrivateFieldGet(this, _ChromeTargetManager_connection, \"f\").off('Target.targetCreated', __classPrivateFieldGet(this, _ChromeTargetManager_onTargetCreated, \"f\"));\n    __classPrivateFieldGet(this, _ChromeTargetManager_connection, \"f\").off('Target.targetDestroyed', __classPrivateFieldGet(this, _ChromeTargetManager_onTargetDestroyed, \"f\"));\n    __classPrivateFieldGet(this, _ChromeTargetManager_connection, \"f\").off('Target.targetInfoChanged', __classPrivateFieldGet(this, _ChromeTargetManager_onTargetInfoChanged, \"f\"));\n    __classPrivateFieldGet(this, _ChromeTargetManager_connection, \"f\").off('sessiondetached', __classPrivateFieldGet(this, _ChromeTargetManager_onSessionDetached, \"f\"));\n    __classPrivateFieldGet(this, _ChromeTargetManager_instances, \"m\", _ChromeTargetManager_removeAttachmentListeners).call(this, __classPrivateFieldGet(this, _ChromeTargetManager_connection, \"f\"));\n  }\n  getAvailableTargets() {\n    return __classPrivateFieldGet(this, _ChromeTargetManager_attachedTargetsByTargetId, \"f\");\n  }\n  addTargetInterceptor(session, interceptor) {\n    const interceptors = __classPrivateFieldGet(this, _ChromeTargetManager_targetInterceptors, \"f\").get(session) || [];\n    interceptors.push(interceptor);\n    __classPrivateFieldGet(this, _ChromeTargetManager_targetInterceptors, \"f\").set(session, interceptors);\n  }\n  removeTargetInterceptor(client, interceptor) {\n    const interceptors = __classPrivateFieldGet(this, _ChromeTargetManager_targetInterceptors, \"f\").get(client) || [];\n    __classPrivateFieldGet(this, _ChromeTargetManager_targetInterceptors, \"f\").set(client, interceptors.filter(currentInterceptor => {\n      return currentInterceptor !== interceptor;\n    }));\n  }\n}\nexports.ChromeTargetManager = ChromeTargetManager;\n_ChromeTargetManager_connection = new WeakMap(), _ChromeTargetManager_discoveredTargetsByTargetId = new WeakMap(), _ChromeTargetManager_attachedTargetsByTargetId = new WeakMap(), _ChromeTargetManager_attachedTargetsBySessionId = new WeakMap(), _ChromeTargetManager_ignoredTargets = new WeakMap(), _ChromeTargetManager_targetFilterCallback = new WeakMap(), _ChromeTargetManager_targetFactory = new WeakMap(), _ChromeTargetManager_targetInterceptors = new WeakMap(), _ChromeTargetManager_attachedToTargetListenersBySession = new WeakMap(), _ChromeTargetManager_detachedFromTargetListenersBySession = new WeakMap(), _ChromeTargetManager_initializePromise = new WeakMap(), _ChromeTargetManager_targetsIdsForInit = new WeakMap(), _ChromeTargetManager_storeExistingTargetsForInit = new WeakMap(), _ChromeTargetManager_onSessionDetached = new WeakMap(), _ChromeTargetManager_onTargetCreated = new WeakMap(), _ChromeTargetManager_onTargetDestroyed = new WeakMap(), _ChromeTargetManager_onTargetInfoChanged = new WeakMap(), _ChromeTargetManager_onAttachedToTarget = new WeakMap(), _ChromeTargetManager_onDetachedFromTarget = new WeakMap(), _ChromeTargetManager_instances = new WeakSet(), _ChromeTargetManager_setupAttachmentListeners = function _ChromeTargetManager_setupAttachmentListeners(session) {\n  const listener = event => {\n    return __classPrivateFieldGet(this, _ChromeTargetManager_onAttachedToTarget, \"f\").call(this, session, event);\n  };\n  (0, assert_js_1.assert)(!__classPrivateFieldGet(this, _ChromeTargetManager_attachedToTargetListenersBySession, \"f\").has(session));\n  __classPrivateFieldGet(this, _ChromeTargetManager_attachedToTargetListenersBySession, \"f\").set(session, listener);\n  session.on('Target.attachedToTarget', listener);\n  const detachedListener = event => {\n    return __classPrivateFieldGet(this, _ChromeTargetManager_onDetachedFromTarget, \"f\").call(this, session, event);\n  };\n  (0, assert_js_1.assert)(!__classPrivateFieldGet(this, _ChromeTargetManager_detachedFromTargetListenersBySession, \"f\").has(session));\n  __classPrivateFieldGet(this, _ChromeTargetManager_detachedFromTargetListenersBySession, \"f\").set(session, detachedListener);\n  session.on('Target.detachedFromTarget', detachedListener);\n}, _ChromeTargetManager_removeAttachmentListeners = function _ChromeTargetManager_removeAttachmentListeners(session) {\n  if (__classPrivateFieldGet(this, _ChromeTargetManager_attachedToTargetListenersBySession, \"f\").has(session)) {\n    session.off('Target.attachedToTarget', __classPrivateFieldGet(this, _ChromeTargetManager_attachedToTargetListenersBySession, \"f\").get(session));\n    __classPrivateFieldGet(this, _ChromeTargetManager_attachedToTargetListenersBySession, \"f\").delete(session);\n  }\n  if (__classPrivateFieldGet(this, _ChromeTargetManager_detachedFromTargetListenersBySession, \"f\").has(session)) {\n    session.off('Target.detachedFromTarget', __classPrivateFieldGet(this, _ChromeTargetManager_detachedFromTargetListenersBySession, \"f\").get(session));\n    __classPrivateFieldGet(this, _ChromeTargetManager_detachedFromTargetListenersBySession, \"f\").delete(session);\n  }\n}, _ChromeTargetManager_finishInitializationIfReady = function _ChromeTargetManager_finishInitializationIfReady(targetId) {\n  targetId !== undefined && __classPrivateFieldGet(this, _ChromeTargetManager_targetsIdsForInit, \"f\").delete(targetId);\n  if (__classPrivateFieldGet(this, _ChromeTargetManager_targetsIdsForInit, \"f\").size === 0) {\n    __classPrivateFieldGet(this, _ChromeTargetManager_initializePromise, \"f\").resolve();\n  }\n};","map":{"version":3,"names":["assert_js_1","require","DeferredPromise_js_1","Connection_js_1","EventEmitter_js_1","util_js_1","ChromeTargetManager","EventEmitter","constructor","connection","targetFactory","targetFilterCallback","_ChromeTargetManager_connection","set","_ChromeTargetManager_discoveredTargetsByTargetId","Map","_ChromeTargetManager_attachedTargetsByTargetId","_ChromeTargetManager_attachedTargetsBySessionId","_ChromeTargetManager_ignoredTargets","Set","_ChromeTargetManager_targetFilterCallback","_ChromeTargetManager_targetFactory","_ChromeTargetManager_targetInterceptors","WeakMap","_ChromeTargetManager_attachedToTargetListenersBySession","_ChromeTargetManager_detachedFromTargetListenersBySession","_ChromeTargetManager_initializePromise","createDeferredPromise","_ChromeTargetManager_targetsIdsForInit","_ChromeTargetManager_storeExistingTargetsForInit","targetId","targetInfo","__classPrivateFieldGet","entries","call","type","add","_ChromeTargetManager_onSessionDetached","session","_ChromeTargetManager_instances","_ChromeTargetManager_removeAttachmentListeners","delete","_ChromeTargetManager_onTargetCreated","event","emit","attached","has","target","undefined","_ChromeTargetManager_onTargetDestroyed","get","_ChromeTargetManager_finishInitializationIfReady","_ChromeTargetManager_onTargetInfoChanged","_ChromeTargetManager_onAttachedToTarget","parentSession","sessionId","Error","silentDetach","send","catch","debugError","id","isAutoAttached","existingTarget","_ChromeTargetManager_setupAttachmentListeners","interceptor","Connection","assert","_targetId","Promise","all","waitForDebuggerOnStart","flatten","autoAttach","_ChromeTargetManager_onDetachedFromTarget","_parentSession","__classPrivateFieldSet","on","discover","filter","exclude","then","initialize","dispose","off","getAvailableTargets","addTargetInterceptor","interceptors","push","removeTargetInterceptor","client","currentInterceptor","exports","listener","detachedListener","size","resolve"],"sources":["../../../../src/common/ChromeTargetManager.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}