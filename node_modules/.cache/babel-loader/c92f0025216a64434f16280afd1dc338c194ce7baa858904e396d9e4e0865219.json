{"ast":null,"code":"/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst DEFAULT_BATCH_SIZE = 20;\n/**\n * This will transpose an iterator JSHandle into a fast, Puppeteer-side iterator\n * of JSHandles.\n *\n * @param size - The number of elements to transpose. This should be something\n * reasonable.\n */\nasync function* fastTransposeIteratorHandle(iterator, size) {\n  const array = await iterator.evaluateHandle(async (iterator, size) => {\n    const results = [];\n    while (results.length < size) {\n      const result = await iterator.next();\n      if (result.done) {\n        break;\n      }\n      results.push(result.value);\n    }\n    return results;\n  }, size);\n  const properties = await array.getProperties();\n  await array.dispose();\n  yield* properties.values();\n  return properties.size === 0;\n}\n/**\n * This will transpose an iterator JSHandle in batches based on the default size\n * of {@link fastTransposeIteratorHandle}.\n */\nasync function* transposeIteratorHandle(iterator) {\n  let size = DEFAULT_BATCH_SIZE;\n  try {\n    while (!(yield* fastTransposeIteratorHandle(iterator, size))) {\n      size <<= 1;\n    }\n  } finally {\n    await iterator.dispose();\n  }\n}\n/**\n * @internal\n */\nexport async function* transposeIterableHandle(handle) {\n  yield* transposeIteratorHandle(await handle.evaluateHandle(iterable => {\n    return async function* () {\n      yield* iterable;\n    }();\n  }));\n}","map":{"version":3,"names":["DEFAULT_BATCH_SIZE","fastTransposeIteratorHandle","iterator","size","array","evaluateHandle","results","length","result","next","done","push","value","properties","getProperties","dispose","values","transposeIteratorHandle","transposeIterableHandle","handle","iterable"],"sources":["../../../../src/common/HandleIterator.ts"],"sourcesContent":[null],"mappings":"AAAA;;;;;;;;;;;;;;;AAoBA,MAAMA,kBAAkB,GAAG,EAAE;AAE7B;;;;;;;AAOA,gBAAgBC,2BAA2BA,CACzCC,QAAwC,EACxCC,IAAY;EAEZ,MAAMC,KAAK,GAAG,MAAMF,QAAQ,CAACG,cAAc,CAAC,OAAOH,QAAQ,EAAEC,IAAI,KAAI;IACnE,MAAMG,OAAO,GAAG,EAAE;IAClB,OAAOA,OAAO,CAACC,MAAM,GAAGJ,IAAI,EAAE;MAC5B,MAAMK,MAAM,GAAG,MAAMN,QAAQ,CAACO,IAAI,EAAE;MACpC,IAAID,MAAM,CAACE,IAAI,EAAE;QACf;;MAEFJ,OAAO,CAACK,IAAI,CAACH,MAAM,CAACI,KAAK,CAAC;;IAE5B,OAAON,OAAO;EAChB,CAAC,EAAEH,IAAI,CAAC;EACR,MAAMU,UAAU,GAAI,MAAMT,KAAK,CAACU,aAAa,EAAgC;EAC7E,MAAMV,KAAK,CAACW,OAAO,EAAE;EACrB,OAAOF,UAAU,CAACG,MAAM,EAAE;EAC1B,OAAOH,UAAU,CAACV,IAAI,KAAK,CAAC;AAC9B;AAEA;;;;AAKA,gBAAgBc,uBAAuBA,CACrCf,QAAwC;EAExC,IAAIC,IAAI,GAAGH,kBAAkB;EAC7B,IAAI;IACF,OAAO,EAAE,OAAOC,2BAA2B,CAACC,QAAQ,EAAEC,IAAI,CAAC,CAAC,EAAE;MAC5DA,IAAI,KAAK,CAAC;;GAEb,SAAS;IACR,MAAMD,QAAQ,CAACa,OAAO,EAAE;;AAE5B;AAIA;;;AAGA,OAAO,gBAAgBG,uBAAuBA,CAC5CC,MAAsC;EAEtC,OAAOF,uBAAuB,CAC5B,MAAME,MAAM,CAACd,cAAc,CAACe,QAAQ,IAAG;IACrC,OAAQ,mBAAe;MACrB,OAAOA,QAAQ;IACjB,CAAC,CAAC,CAAE;EACN,CAAC,CAAC,CACH;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}