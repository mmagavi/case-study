{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SubscriptionManager = exports.unrollEvents = exports.cartesianProduct = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\n/**\n * Returns the cartesian product of the given arrays.\n *\n * Example:\n *   cartesian([1, 2], ['a', 'b']); => [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n */\nfunction cartesianProduct(...a) {\n  return a.reduce((a, b) => a.flatMap(d => b.map(e => [d, e].flat())));\n}\nexports.cartesianProduct = cartesianProduct;\n/** Expands \"AllEvents\" events into atomic events. */\nfunction unrollEvents(events) {\n  const allEvents = [];\n  for (const event of events) {\n    switch (event) {\n      case protocol_js_1.BrowsingContext.AllEvents:\n        allEvents.push(...Object.values(protocol_js_1.BrowsingContext.EventNames));\n        break;\n      case protocol_js_1.CDP.AllEvents:\n        allEvents.push(...Object.values(protocol_js_1.CDP.EventNames));\n        break;\n      case protocol_js_1.Log.AllEvents:\n        allEvents.push(...Object.values(protocol_js_1.Log.EventNames));\n        break;\n      case protocol_js_1.Network.AllEvents:\n        allEvents.push(...Object.values(protocol_js_1.Network.EventNames));\n        break;\n      case protocol_js_1.Script.AllEvents:\n        allEvents.push(...Object.values(protocol_js_1.Script.EventNames));\n        break;\n      default:\n        allEvents.push(event);\n    }\n  }\n  return allEvents;\n}\nexports.unrollEvents = unrollEvents;\nclass SubscriptionManager {\n  #subscriptionPriority = 0;\n  // BrowsingContext `null` means the event has subscription across all the\n  // browsing contexts.\n  // Channel `null` means no `channel` should be added.\n  #channelToContextToEventMap = new Map();\n  #browsingContextStorage;\n  constructor(browsingContextStorage) {\n    this.#browsingContextStorage = browsingContextStorage;\n  }\n  getChannelsSubscribedToEvent(eventMethod, contextId) {\n    const prioritiesAndChannels = Array.from(this.#channelToContextToEventMap.keys()).map(channel => ({\n      priority: this.#getEventSubscriptionPriorityForChannel(eventMethod, contextId, channel),\n      channel\n    })).filter(({\n      priority\n    }) => priority !== null);\n    // Sort channels by priority.\n    return prioritiesAndChannels.sort((a, b) => a.priority - b.priority).map(({\n      channel\n    }) => channel);\n  }\n  #getEventSubscriptionPriorityForChannel(eventMethod, contextId, channel) {\n    const contextToEventMap = this.#channelToContextToEventMap.get(channel);\n    if (contextToEventMap === undefined) {\n      return null;\n    }\n    const maybeTopLevelContextId = this.#browsingContextStorage.findTopLevelContextId(contextId);\n    // `null` covers global subscription.\n    const relevantContexts = [...new Set([null, maybeTopLevelContextId])];\n    // Get all the subscription priorities.\n    const priorities = relevantContexts.map(c => contextToEventMap.get(c)?.get(eventMethod)).filter(p => p !== undefined);\n    if (priorities.length === 0) {\n      // Not subscribed, return null.\n      return null;\n    }\n    // Return minimal priority.\n    return Math.min(...priorities);\n  }\n  subscribe(event, contextId, channel) {\n    // All the subscriptions are handled on the top-level contexts.\n    contextId = this.#browsingContextStorage.findTopLevelContextId(contextId);\n    if (event === protocol_js_1.BrowsingContext.AllEvents) {\n      Object.values(protocol_js_1.BrowsingContext.EventNames).map(specificEvent => this.subscribe(specificEvent, contextId, channel));\n      return;\n    }\n    if (event === protocol_js_1.CDP.AllEvents) {\n      Object.values(protocol_js_1.CDP.EventNames).map(specificEvent => this.subscribe(specificEvent, contextId, channel));\n      return;\n    }\n    if (event === protocol_js_1.Log.AllEvents) {\n      Object.values(protocol_js_1.Log.EventNames).map(specificEvent => this.subscribe(specificEvent, contextId, channel));\n      return;\n    }\n    if (event === protocol_js_1.Network.AllEvents) {\n      Object.values(protocol_js_1.Network.EventNames).map(specificEvent => this.subscribe(specificEvent, contextId, channel));\n      return;\n    }\n    if (event === protocol_js_1.Script.AllEvents) {\n      Object.values(protocol_js_1.Script.EventNames).map(specificEvent => this.subscribe(specificEvent, contextId, channel));\n      return;\n    }\n    if (!this.#channelToContextToEventMap.has(channel)) {\n      this.#channelToContextToEventMap.set(channel, new Map());\n    }\n    const contextToEventMap = this.#channelToContextToEventMap.get(channel);\n    if (!contextToEventMap.has(contextId)) {\n      contextToEventMap.set(contextId, new Map());\n    }\n    const eventMap = contextToEventMap.get(contextId);\n    // Do not re-subscribe to events to keep the priority.\n    if (eventMap.has(event)) {\n      return;\n    }\n    eventMap.set(event, this.#subscriptionPriority++);\n  }\n  /**\n   * Unsubscribes atomically from all events in the given contexts and channel.\n   */\n  unsubscribeAll(events, contextIds, channel) {\n    // Assert all contexts are known.\n    for (const contextId of contextIds) {\n      if (contextId !== null) {\n        this.#browsingContextStorage.getContext(contextId);\n      }\n    }\n    const eventContextPairs = cartesianProduct(unrollEvents(events), contextIds);\n    // Assert all unsubscriptions are valid.\n    // If any of the unsubscriptions are invalid, do not unsubscribe from anything.\n    eventContextPairs.map(([event, contextId]) => this.#checkUnsubscribe(event, contextId, channel)).forEach(unsubscribe => unsubscribe());\n  }\n  /**\n   * Unsubscribes from the event in the given context and channel.\n   * Syntactic sugar for \"unsubscribeAll\".\n   */\n  unsubscribe(eventName, contextId, channel) {\n    this.unsubscribeAll([eventName], [contextId], channel);\n  }\n  #checkUnsubscribe(event, contextId, channel) {\n    // All the subscriptions are handled on the top-level contexts.\n    contextId = this.#browsingContextStorage.findTopLevelContextId(contextId);\n    if (!this.#channelToContextToEventMap.has(channel)) {\n      throw new protocol_js_1.Message.InvalidArgumentException(`Cannot unsubscribe from ${event}, ${contextId === null ? 'null' : contextId}. No subscription found.`);\n    }\n    const contextToEventMap = this.#channelToContextToEventMap.get(channel);\n    if (!contextToEventMap.has(contextId)) {\n      throw new protocol_js_1.Message.InvalidArgumentException(`Cannot unsubscribe from ${event}, ${contextId === null ? 'null' : contextId}. No subscription found.`);\n    }\n    const eventMap = contextToEventMap.get(contextId);\n    if (!eventMap.has(event)) {\n      throw new protocol_js_1.Message.InvalidArgumentException(`Cannot unsubscribe from ${event}, ${contextId === null ? 'null' : contextId}. No subscription found.`);\n    }\n    return () => {\n      eventMap.delete(event);\n      // Clean up maps if empty.\n      if (eventMap.size === 0) {\n        contextToEventMap.delete(event);\n      }\n      if (contextToEventMap.size === 0) {\n        this.#channelToContextToEventMap.delete(channel);\n      }\n    };\n  }\n}\nexports.SubscriptionManager = SubscriptionManager;","map":{"version":3,"names":["protocol_js_1","require","cartesianProduct","a","reduce","b","flatMap","d","map","e","flat","exports","unrollEvents","events","allEvents","event","BrowsingContext","AllEvents","push","Object","values","EventNames","CDP","Log","Network","Script","SubscriptionManager","subscriptionPriority","channelToContextToEventMap","Map","browsingContextStorage","constructor","getChannelsSubscribedToEvent","eventMethod","contextId","prioritiesAndChannels","Array","from","keys","channel","priority","getEventSubscriptionPriorityForChannel","filter","sort","#getEventSubscriptionPriorityForChannel","contextToEventMap","get","undefined","maybeTopLevelContextId","findTopLevelContextId","relevantContexts","Set","priorities","c","p","length","Math","min","subscribe","specificEvent","has","set","eventMap","unsubscribeAll","contextIds","getContext","eventContextPairs","checkUnsubscribe","forEach","unsubscribe","eventName","#checkUnsubscribe","Message","InvalidArgumentException","delete","size"],"sources":["../../../../../src/bidiMapper/domains/events/SubscriptionManager.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}