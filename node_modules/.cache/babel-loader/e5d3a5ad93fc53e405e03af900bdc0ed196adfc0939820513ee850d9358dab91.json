{"ast":null,"code":"import { scrapeText } from \"../info/GetInfo\";\nlet conversationHistory = [{\n  role: \"system\",\n  content: `Determine what page on PartSelect.com may be relevant to the user then provide the link to that page`\n}];\nconst extractLinkFromText = text => {\n  const urlPattern = /(https?:\\/\\/[^\\s]+)/g;\n  const matches = text.match(urlPattern);\n  if (matches && matches.length > 0) {\n    return matches[0];\n  } else {\n    return null;\n  }\n};\nexport const getLink = async userQuery => {\n  conversationHistory.push({\n    role: \"user\",\n    content: userQuery\n  });\n  const completion = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": 'Bearer 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'\n    },\n    body: JSON.stringify({\n      model: \"gpt-4o-mini\",\n      messages: conversationHistory\n    })\n  });\n  const data = await completion.json();\n  let get_response = data.choices[0].message.content;\n  console.log(get_response);\n  conversationHistory.push({\n    role: \"assistant\",\n    content: get_response\n  });\n  let link = extractLinkFromText(get_response);\n  if (link) {\n    let info = scrapeText(link);\n    console.log(\"Got link, scraped text\");\n    console.log(info);\n    if (info) {\n      return info;\n    }\n    return null;\n  } else {\n    return null;\n  }\n};","map":{"version":3,"names":["scrapeText","conversationHistory","role","content","extractLinkFromText","text","urlPattern","matches","match","length","getLink","userQuery","push","completion","fetch","method","headers","body","JSON","stringify","model","messages","data","json","get_response","choices","message","console","log","link","info"],"sources":["/Users/mayamagavi/instalily/case-study/src/api/linkApi.js"],"sourcesContent":["import { scrapeText } from \"../info/GetInfo\";\n\nlet conversationHistory = [\n  { role: \"system\", content: `Determine what page on PartSelect.com may be relevant to the user then provide the link to that page`}\n];\n\nconst extractLinkFromText = (text) => {\n  const urlPattern = /(https?:\\/\\/[^\\s]+)/g; \n  const matches = text.match(urlPattern);  \n\n  if (matches && matches.length > 0) {\n    return matches[0];\n  } else {\n    return null; \n  }\n};\n\nexport const getLink = async (userQuery) => {\n\n  conversationHistory.push({ role: \"user\", content: userQuery });\n\n  const completion = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n    method: \"POST\",\n    headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": 'Bearer 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',\n    },\n    body: JSON.stringify({\n        model: \"gpt-4o-mini\",\n        messages: conversationHistory\n    })\n  });\n\n  const data = await completion.json();\n  let get_response = data.choices[0].message.content;\n  console.log(get_response);\n  conversationHistory.push({ role: \"assistant\", content: get_response });\n  let link = extractLinkFromText(get_response)\n\n  if (link){\n    let info = scrapeText(link)\n    console.log(\"Got link, scraped text\")\n    console.log(info)\n    if (info) {\n      return info\n    }\n    return null\n  }\n  else {\n    return null\n  }\n};"],"mappings":"AAAA,SAASA,UAAU,QAAQ,iBAAiB;AAE5C,IAAIC,mBAAmB,GAAG,CACxB;EAAEC,IAAI,EAAE,QAAQ;EAAEC,OAAO,EAAG;AAAqG,CAAC,CACnI;AAED,MAAMC,mBAAmB,GAAIC,IAAI,IAAK;EACpC,MAAMC,UAAU,GAAG,sBAAsB;EACzC,MAAMC,OAAO,GAAGF,IAAI,CAACG,KAAK,CAACF,UAAU,CAAC;EAEtC,IAAIC,OAAO,IAAIA,OAAO,CAACE,MAAM,GAAG,CAAC,EAAE;IACjC,OAAOF,OAAO,CAAC,CAAC,CAAC;EACnB,CAAC,MAAM;IACL,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAMG,OAAO,GAAG,MAAOC,SAAS,IAAK;EAE1CV,mBAAmB,CAACW,IAAI,CAAC;IAAEV,IAAI,EAAE,MAAM;IAAEC,OAAO,EAAEQ;EAAU,CAAC,CAAC;EAE9D,MAAME,UAAU,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;IAC3EC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE;IACrB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBC,KAAK,EAAE,aAAa;MACpBC,QAAQ,EAAEpB;IACd,CAAC;EACH,CAAC,CAAC;EAEF,MAAMqB,IAAI,GAAG,MAAMT,UAAU,CAACU,IAAI,CAAC,CAAC;EACpC,IAAIC,YAAY,GAAGF,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACvB,OAAO;EAClDwB,OAAO,CAACC,GAAG,CAACJ,YAAY,CAAC;EACzBvB,mBAAmB,CAACW,IAAI,CAAC;IAAEV,IAAI,EAAE,WAAW;IAAEC,OAAO,EAAEqB;EAAa,CAAC,CAAC;EACtE,IAAIK,IAAI,GAAGzB,mBAAmB,CAACoB,YAAY,CAAC;EAE5C,IAAIK,IAAI,EAAC;IACP,IAAIC,IAAI,GAAG9B,UAAU,CAAC6B,IAAI,CAAC;IAC3BF,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrCD,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;IACjB,IAAIA,IAAI,EAAE;MACR,OAAOA,IAAI;IACb;IACA,OAAO,IAAI;EACb,CAAC,MACI;IACH,OAAO,IAAI;EACb;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}