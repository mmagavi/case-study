{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JSHandle = void 0;\n/**\n * Represents a reference to a JavaScript object. Instances can be created using\n * {@link Page.evaluateHandle}.\n *\n * Handles prevent the referenced JavaScript object from being garbage-collected\n * unless the handle is purposely {@link JSHandle.dispose | disposed}. JSHandles\n * are auto-disposed when their associated frame is navigated away or the parent\n * context gets destroyed.\n *\n * Handles can be used as arguments for any evaluation function such as\n * {@link Page.$eval}, {@link Page.evaluate}, and {@link Page.evaluateHandle}.\n * They are resolved to their referenced object.\n *\n * @example\n *\n * ```ts\n * const windowHandle = await page.evaluateHandle(() => window);\n * ```\n *\n * @public\n */\nclass JSHandle {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * @internal\n   */\n  get disposed() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * @internal\n   */\n  executionContext() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * @internal\n   */\n  get client() {\n    throw new Error('Not implemented');\n  }\n  async evaluate() {\n    throw new Error('Not implemented');\n  }\n  async evaluateHandle() {\n    throw new Error('Not implemented');\n  }\n  async getProperty() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Gets a map of handles representing the properties of the current handle.\n   *\n   * @example\n   *\n   * ```ts\n   * const listHandle = await page.evaluateHandle(() => document.body.children);\n   * const properties = await listHandle.getProperties();\n   * const children = [];\n   * for (const property of properties.values()) {\n   *   const element = property.asElement();\n   *   if (element) {\n   *     children.push(element);\n   *   }\n   * }\n   * children; // holds elementHandles to all children of document.body\n   * ```\n   */\n  async getProperties() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * A vanilla object representing the serializable portions of the\n   * referenced object.\n   * @throws Throws if the object cannot be serialized due to circularity.\n   *\n   * @remarks\n   * If the object has a `toJSON` function, it **will not** be called.\n   */\n  async jsonValue() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Either `null` or the handle itself if the handle is an\n   * instance of {@link ElementHandle}.\n   */\n  asElement() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Releases the object referenced by the handle for garbage collection.\n   */\n  async dispose() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Returns a string representation of the JSHandle.\n   *\n   * @remarks\n   * Useful during debugging.\n   */\n  toString() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * @internal\n   */\n  get id() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Provides access to the\n   * [Protocol.Runtime.RemoteObject](https://chromedevtools.github.io/devtools-protocol/tot/Runtime/#type-RemoteObject)\n   * backing this handle.\n   */\n  remoteObject() {\n    throw new Error('Not implemented');\n  }\n}\nexports.JSHandle = JSHandle;","map":{"version":3,"names":["JSHandle","constructor","disposed","Error","executionContext","client","evaluate","evaluateHandle","getProperty","getProperties","jsonValue","asElement","dispose","toString","id","remoteObject","exports"],"sources":["../../../../src/api/JSHandle.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;AA0BA;;;;;;;;;;;;;;;;;;;;;AAqBA,MAAaA,QAAQ;EAMnB;;;EAGAC,YAAA,GAAe;EAEf;;;EAGA,IAAIC,QAAQA,CAAA;IACV,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAEA;;;EAGAC,gBAAgBA,CAAA;IACd,MAAM,IAAID,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAEA;;;EAGA,IAAIE,MAAMA,CAAA;IACR,MAAM,IAAIF,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAYA,MAAMG,QAAQA,CAAA;IACZ,MAAM,IAAIH,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAaA,MAAMI,cAAcA,CAAA;IAClB,MAAM,IAAIJ,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAYA,MAAMK,WAAWA,CAAA;IACf,MAAM,IAAIL,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAEA;;;;;;;;;;;;;;;;;;EAkBA,MAAMM,aAAaA,CAAA;IACjB,MAAM,IAAIN,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAEA;;;;;;;;EAQA,MAAMO,SAASA,CAAA;IACb,MAAM,IAAIP,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAEA;;;;EAIAQ,SAASA,CAAA;IACP,MAAM,IAAIR,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAEA;;;EAGA,MAAMS,OAAOA,CAAA;IACX,MAAM,IAAIT,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAEA;;;;;;EAMAU,QAAQA,CAAA;IACN,MAAM,IAAIV,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAEA;;;EAGA,IAAIW,EAAEA,CAAA;IACJ,MAAM,IAAIX,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAEA;;;;;EAKAY,YAAYA,CAAA;IACV,MAAM,IAAIZ,KAAK,CAAC,iBAAiB,CAAC;EACpC;;AApJFa,OAAA,CAAAhB,QAAA,GAAAA,QAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}