{"ast":null,"code":"import { v4 as uuidv4 } from \"uuid\";\nimport { BaseCallbackHandler } from \"./base.js\";\nimport { ConsoleCallbackHandler } from \"./handlers/console.js\";\nimport { getTracingCallbackHandler, getTracingV2CallbackHandler } from \"./handlers/initialize.js\";\nimport { getBufferString } from \"../memory/base.js\";\nimport { getEnvironmentVariable } from \"../util/env.js\";\nimport { LangChainTracer } from \"./handlers/tracer_langchain.js\";\nimport { consumeCallback } from \"./promises.js\";\nexport function parseCallbackConfigArg(arg) {\n  if (!arg) {\n    return {};\n  } else if (Array.isArray(arg) || \"name\" in arg) {\n    return {\n      callbacks: arg\n    };\n  } else {\n    return arg;\n  }\n}\n/**\n * Manage callbacks from different components of LangChain.\n */\nexport class BaseCallbackManager {\n  setHandler(handler) {\n    return this.setHandlers([handler]);\n  }\n}\n/**\n * Base class for run manager in LangChain.\n */\nclass BaseRunManager {\n  constructor(runId, handlers, inheritableHandlers, tags, inheritableTags, metadata, inheritableMetadata, _parentRunId) {\n    Object.defineProperty(this, \"runId\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: runId\n    });\n    Object.defineProperty(this, \"handlers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: handlers\n    });\n    Object.defineProperty(this, \"inheritableHandlers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: inheritableHandlers\n    });\n    Object.defineProperty(this, \"tags\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: tags\n    });\n    Object.defineProperty(this, \"inheritableTags\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: inheritableTags\n    });\n    Object.defineProperty(this, \"metadata\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: metadata\n    });\n    Object.defineProperty(this, \"inheritableMetadata\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: inheritableMetadata\n    });\n    Object.defineProperty(this, \"_parentRunId\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _parentRunId\n    });\n  }\n  async handleText(text) {\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      try {\n        await handler.handleText?.(text, this.runId, this._parentRunId, this.tags);\n      } catch (err) {\n        console.error(`Error in handler ${handler.constructor.name}, handleText: ${err}`);\n      }\n    }, handler.awaitHandlers)));\n  }\n}\n/**\n * Manages callbacks for retriever runs.\n */\nexport class CallbackManagerForRetrieverRun extends BaseRunManager {\n  getChild(tag) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const manager = new CallbackManager(this.runId);\n    manager.setHandlers(this.inheritableHandlers);\n    manager.addTags(this.inheritableTags);\n    manager.addMetadata(this.inheritableMetadata);\n    if (tag) {\n      manager.addTags([tag], false);\n    }\n    return manager;\n  }\n  async handleRetrieverEnd(documents) {\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      if (!handler.ignoreRetriever) {\n        try {\n          await handler.handleRetrieverEnd?.(documents, this.runId, this._parentRunId, this.tags);\n        } catch (err) {\n          console.error(`Error in handler ${handler.constructor.name}, handleRetriever`);\n        }\n      }\n    }, handler.awaitHandlers)));\n  }\n  async handleRetrieverError(err) {\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      if (!handler.ignoreRetriever) {\n        try {\n          await handler.handleRetrieverError?.(err, this.runId, this._parentRunId, this.tags);\n        } catch (error) {\n          console.error(`Error in handler ${handler.constructor.name}, handleRetrieverError: ${error}`);\n        }\n      }\n    }, handler.awaitHandlers)));\n  }\n}\nexport class CallbackManagerForLLMRun extends BaseRunManager {\n  async handleLLMNewToken(token, idx, _runId, _parentRunId, _tags, fields) {\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      if (!handler.ignoreLLM) {\n        try {\n          await handler.handleLLMNewToken?.(token, idx ?? {\n            prompt: 0,\n            completion: 0\n          }, this.runId, this._parentRunId, this.tags, fields);\n        } catch (err) {\n          console.error(`Error in handler ${handler.constructor.name}, handleLLMNewToken: ${err}`);\n        }\n      }\n    }, handler.awaitHandlers)));\n  }\n  async handleLLMError(err) {\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      if (!handler.ignoreLLM) {\n        try {\n          await handler.handleLLMError?.(err, this.runId, this._parentRunId, this.tags);\n        } catch (err) {\n          console.error(`Error in handler ${handler.constructor.name}, handleLLMError: ${err}`);\n        }\n      }\n    }, handler.awaitHandlers)));\n  }\n  async handleLLMEnd(output) {\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      if (!handler.ignoreLLM) {\n        try {\n          await handler.handleLLMEnd?.(output, this.runId, this._parentRunId, this.tags);\n        } catch (err) {\n          console.error(`Error in handler ${handler.constructor.name}, handleLLMEnd: ${err}`);\n        }\n      }\n    }, handler.awaitHandlers)));\n  }\n}\nexport class CallbackManagerForChainRun extends BaseRunManager {\n  getChild(tag) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const manager = new CallbackManager(this.runId);\n    manager.setHandlers(this.inheritableHandlers);\n    manager.addTags(this.inheritableTags);\n    manager.addMetadata(this.inheritableMetadata);\n    if (tag) {\n      manager.addTags([tag], false);\n    }\n    return manager;\n  }\n  async handleChainError(err, _runId, _parentRunId, _tags, kwargs) {\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      if (!handler.ignoreChain) {\n        try {\n          await handler.handleChainError?.(err, this.runId, this._parentRunId, this.tags, kwargs);\n        } catch (err) {\n          console.error(`Error in handler ${handler.constructor.name}, handleChainError: ${err}`);\n        }\n      }\n    }, handler.awaitHandlers)));\n  }\n  async handleChainEnd(output, _runId, _parentRunId, _tags, kwargs) {\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      if (!handler.ignoreChain) {\n        try {\n          await handler.handleChainEnd?.(output, this.runId, this._parentRunId, this.tags, kwargs);\n        } catch (err) {\n          console.error(`Error in handler ${handler.constructor.name}, handleChainEnd: ${err}`);\n        }\n      }\n    }, handler.awaitHandlers)));\n  }\n  async handleAgentAction(action) {\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      if (!handler.ignoreAgent) {\n        try {\n          await handler.handleAgentAction?.(action, this.runId, this._parentRunId, this.tags);\n        } catch (err) {\n          console.error(`Error in handler ${handler.constructor.name}, handleAgentAction: ${err}`);\n        }\n      }\n    }, handler.awaitHandlers)));\n  }\n  async handleAgentEnd(action) {\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      if (!handler.ignoreAgent) {\n        try {\n          await handler.handleAgentEnd?.(action, this.runId, this._parentRunId, this.tags);\n        } catch (err) {\n          console.error(`Error in handler ${handler.constructor.name}, handleAgentEnd: ${err}`);\n        }\n      }\n    }, handler.awaitHandlers)));\n  }\n}\nexport class CallbackManagerForToolRun extends BaseRunManager {\n  getChild(tag) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const manager = new CallbackManager(this.runId);\n    manager.setHandlers(this.inheritableHandlers);\n    manager.addTags(this.inheritableTags);\n    manager.addMetadata(this.inheritableMetadata);\n    if (tag) {\n      manager.addTags([tag], false);\n    }\n    return manager;\n  }\n  async handleToolError(err) {\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      if (!handler.ignoreAgent) {\n        try {\n          await handler.handleToolError?.(err, this.runId, this._parentRunId, this.tags);\n        } catch (err) {\n          console.error(`Error in handler ${handler.constructor.name}, handleToolError: ${err}`);\n        }\n      }\n    }, handler.awaitHandlers)));\n  }\n  async handleToolEnd(output) {\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      if (!handler.ignoreAgent) {\n        try {\n          await handler.handleToolEnd?.(output, this.runId, this._parentRunId, this.tags);\n        } catch (err) {\n          console.error(`Error in handler ${handler.constructor.name}, handleToolEnd: ${err}`);\n        }\n      }\n    }, handler.awaitHandlers)));\n  }\n}\nexport class CallbackManager extends BaseCallbackManager {\n  constructor(parentRunId) {\n    super();\n    Object.defineProperty(this, \"handlers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"inheritableHandlers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"tags\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, \"inheritableTags\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, \"metadata\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"inheritableMetadata\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"callback_manager\"\n    });\n    Object.defineProperty(this, \"_parentRunId\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.handlers = [];\n    this.inheritableHandlers = [];\n    this._parentRunId = parentRunId;\n  }\n  async handleLLMStart(llm, prompts, _runId = undefined, _parentRunId = undefined, extraParams = undefined) {\n    return Promise.all(prompts.map(async prompt => {\n      const runId = uuidv4();\n      await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n        if (!handler.ignoreLLM) {\n          try {\n            await handler.handleLLMStart?.(llm, [prompt], runId, this._parentRunId, extraParams, this.tags, this.metadata);\n          } catch (err) {\n            console.error(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`);\n          }\n        }\n      }, handler.awaitHandlers)));\n      return new CallbackManagerForLLMRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }));\n  }\n  async handleChatModelStart(llm, messages, _runId = undefined, _parentRunId = undefined, extraParams = undefined) {\n    return Promise.all(messages.map(async messageGroup => {\n      const runId = uuidv4();\n      await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n        if (!handler.ignoreLLM) {\n          try {\n            if (handler.handleChatModelStart) await handler.handleChatModelStart?.(llm, [messageGroup], runId, this._parentRunId, extraParams, this.tags, this.metadata);else if (handler.handleLLMStart) {\n              const messageString = getBufferString(messageGroup);\n              await handler.handleLLMStart?.(llm, [messageString], runId, this._parentRunId, extraParams, this.tags, this.metadata);\n            }\n          } catch (err) {\n            console.error(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`);\n          }\n        }\n      }, handler.awaitHandlers)));\n      return new CallbackManagerForLLMRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }));\n  }\n  async handleChainStart(chain, inputs, runId = uuidv4(), runType = undefined) {\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      if (!handler.ignoreChain) {\n        try {\n          await handler.handleChainStart?.(chain, inputs, runId, this._parentRunId, this.tags, this.metadata, runType);\n        } catch (err) {\n          console.error(`Error in handler ${handler.constructor.name}, handleChainStart: ${err}`);\n        }\n      }\n    }, handler.awaitHandlers)));\n    return new CallbackManagerForChainRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n  }\n  async handleToolStart(tool, input, runId = uuidv4()) {\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      if (!handler.ignoreAgent) {\n        try {\n          await handler.handleToolStart?.(tool, input, runId, this._parentRunId, this.tags, this.metadata);\n        } catch (err) {\n          console.error(`Error in handler ${handler.constructor.name}, handleToolStart: ${err}`);\n        }\n      }\n    }, handler.awaitHandlers)));\n    return new CallbackManagerForToolRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n  }\n  async handleRetrieverStart(retriever, query, runId = uuidv4(), _parentRunId = undefined) {\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      if (!handler.ignoreRetriever) {\n        try {\n          await handler.handleRetrieverStart?.(retriever, query, runId, this._parentRunId, this.tags, this.metadata);\n        } catch (err) {\n          console.error(`Error in handler ${handler.constructor.name}, handleRetrieverStart: ${err}`);\n        }\n      }\n    }, handler.awaitHandlers)));\n    return new CallbackManagerForRetrieverRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n  }\n  addHandler(handler, inherit = true) {\n    this.handlers.push(handler);\n    if (inherit) {\n      this.inheritableHandlers.push(handler);\n    }\n  }\n  removeHandler(handler) {\n    this.handlers = this.handlers.filter(_handler => _handler !== handler);\n    this.inheritableHandlers = this.inheritableHandlers.filter(_handler => _handler !== handler);\n  }\n  setHandlers(handlers, inherit = true) {\n    this.handlers = [];\n    this.inheritableHandlers = [];\n    for (const handler of handlers) {\n      this.addHandler(handler, inherit);\n    }\n  }\n  addTags(tags, inherit = true) {\n    this.removeTags(tags); // Remove duplicates\n    this.tags.push(...tags);\n    if (inherit) {\n      this.inheritableTags.push(...tags);\n    }\n  }\n  removeTags(tags) {\n    this.tags = this.tags.filter(tag => !tags.includes(tag));\n    this.inheritableTags = this.inheritableTags.filter(tag => !tags.includes(tag));\n  }\n  addMetadata(metadata, inherit = true) {\n    this.metadata = {\n      ...this.metadata,\n      ...metadata\n    };\n    if (inherit) {\n      this.inheritableMetadata = {\n        ...this.inheritableMetadata,\n        ...metadata\n      };\n    }\n  }\n  removeMetadata(metadata) {\n    for (const key of Object.keys(metadata)) {\n      delete this.metadata[key];\n      delete this.inheritableMetadata[key];\n    }\n  }\n  copy(additionalHandlers = [], inherit = true) {\n    const manager = new CallbackManager(this._parentRunId);\n    for (const handler of this.handlers) {\n      const inheritable = this.inheritableHandlers.includes(handler);\n      manager.addHandler(handler, inheritable);\n    }\n    for (const tag of this.tags) {\n      const inheritable = this.inheritableTags.includes(tag);\n      manager.addTags([tag], inheritable);\n    }\n    for (const key of Object.keys(this.metadata)) {\n      const inheritable = Object.keys(this.inheritableMetadata).includes(key);\n      manager.addMetadata({\n        [key]: this.metadata[key]\n      }, inheritable);\n    }\n    for (const handler of additionalHandlers) {\n      if (\n      // Prevent multiple copies of console_callback_handler\n      manager.handlers.filter(h => h.name === \"console_callback_handler\").some(h => h.name === handler.name)) {\n        continue;\n      }\n      manager.addHandler(handler, inherit);\n    }\n    return manager;\n  }\n  static fromHandlers(handlers) {\n    class Handler extends BaseCallbackHandler {\n      constructor() {\n        super();\n        Object.defineProperty(this, \"name\", {\n          enumerable: true,\n          configurable: true,\n          writable: true,\n          value: uuidv4()\n        });\n        Object.assign(this, handlers);\n      }\n    }\n    const manager = new this();\n    manager.addHandler(new Handler());\n    return manager;\n  }\n  static async configure(inheritableHandlers, localHandlers, inheritableTags, localTags, inheritableMetadata, localMetadata, options) {\n    let callbackManager;\n    if (inheritableHandlers || localHandlers) {\n      if (Array.isArray(inheritableHandlers) || !inheritableHandlers) {\n        callbackManager = new CallbackManager();\n        callbackManager.setHandlers(inheritableHandlers?.map(ensureHandler) ?? [], true);\n      } else {\n        callbackManager = inheritableHandlers;\n      }\n      callbackManager = callbackManager.copy(Array.isArray(localHandlers) ? localHandlers.map(ensureHandler) : localHandlers?.handlers, false);\n    }\n    const verboseEnabled = getEnvironmentVariable(\"LANGCHAIN_VERBOSE\") || options?.verbose;\n    const tracingV2Enabled = getEnvironmentVariable(\"LANGCHAIN_TRACING_V2\") === \"true\";\n    const tracingEnabled = tracingV2Enabled || (getEnvironmentVariable(\"LANGCHAIN_TRACING\") ?? false);\n    if (verboseEnabled || tracingEnabled) {\n      if (!callbackManager) {\n        callbackManager = new CallbackManager();\n      }\n      if (verboseEnabled && !callbackManager.handlers.some(handler => handler.name === ConsoleCallbackHandler.prototype.name)) {\n        const consoleHandler = new ConsoleCallbackHandler();\n        callbackManager.addHandler(consoleHandler, true);\n      }\n      if (tracingEnabled && !callbackManager.handlers.some(handler => handler.name === \"langchain_tracer\")) {\n        if (tracingV2Enabled) {\n          callbackManager.addHandler(await getTracingV2CallbackHandler(), true);\n        } else {\n          const session = getEnvironmentVariable(\"LANGCHAIN_PROJECT\") && getEnvironmentVariable(\"LANGCHAIN_SESSION\");\n          callbackManager.addHandler(await getTracingCallbackHandler(session), true);\n        }\n      }\n    }\n    if (inheritableTags || localTags) {\n      if (callbackManager) {\n        callbackManager.addTags(inheritableTags ?? []);\n        callbackManager.addTags(localTags ?? [], false);\n      }\n    }\n    if (inheritableMetadata || localMetadata) {\n      if (callbackManager) {\n        callbackManager.addMetadata(inheritableMetadata ?? {});\n        callbackManager.addMetadata(localMetadata ?? {}, false);\n      }\n    }\n    return callbackManager;\n  }\n}\nfunction ensureHandler(handler) {\n  if (\"name\" in handler) {\n    return handler;\n  }\n  return BaseCallbackHandler.fromMethods(handler);\n}\nexport class TraceGroup {\n  constructor(groupName, options) {\n    Object.defineProperty(this, \"groupName\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: groupName\n    });\n    Object.defineProperty(this, \"options\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: options\n    });\n    Object.defineProperty(this, \"runManager\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n  }\n  async getTraceGroupCallbackManager(group_name, inputs, options) {\n    const cb = new LangChainTracer(options);\n    const cm = await CallbackManager.configure([cb]);\n    const runManager = await cm?.handleChainStart({\n      lc: 1,\n      type: \"not_implemented\",\n      id: [\"langchain\", \"callbacks\", \"groups\", group_name]\n    }, inputs ?? {});\n    if (!runManager) {\n      throw new Error(\"Failed to create run group callback manager.\");\n    }\n    return runManager;\n  }\n  async start(inputs) {\n    if (!this.runManager) {\n      this.runManager = await this.getTraceGroupCallbackManager(this.groupName, inputs, this.options);\n    }\n    return this.runManager.getChild();\n  }\n  async error(err) {\n    if (this.runManager) {\n      await this.runManager.handleChainError(err);\n      this.runManager = undefined;\n    }\n  }\n  async end(output) {\n    if (this.runManager) {\n      await this.runManager.handleChainEnd(output ?? {});\n      this.runManager = undefined;\n    }\n  }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _coerceToDict(value, defaultKey) {\n  return value && !Array.isArray(value) && typeof value === \"object\" ? value : {\n    [defaultKey]: value\n  };\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport async function traceAsGroup(groupOptions, enclosedCode, ...args) {\n  const traceGroup = new TraceGroup(groupOptions.name, groupOptions);\n  const callbackManager = await traceGroup.start({\n    ...args\n  });\n  try {\n    const result = await enclosedCode(callbackManager, ...args);\n    await traceGroup.end(_coerceToDict(result, \"output\"));\n    return result;\n  } catch (err) {\n    await traceGroup.error(err);\n    throw err;\n  }\n}","map":{"version":3,"names":["v4","uuidv4","BaseCallbackHandler","ConsoleCallbackHandler","getTracingCallbackHandler","getTracingV2CallbackHandler","getBufferString","getEnvironmentVariable","LangChainTracer","consumeCallback","parseCallbackConfigArg","arg","Array","isArray","callbacks","BaseCallbackManager","setHandler","handler","setHandlers","BaseRunManager","constructor","runId","handlers","inheritableHandlers","tags","inheritableTags","metadata","inheritableMetadata","_parentRunId","Object","defineProperty","enumerable","configurable","writable","value","handleText","text","Promise","all","map","err","console","error","name","awaitHandlers","CallbackManagerForRetrieverRun","getChild","tag","manager","CallbackManager","addTags","addMetadata","handleRetrieverEnd","documents","ignoreRetriever","handleRetrieverError","CallbackManagerForLLMRun","handleLLMNewToken","token","idx","_runId","_tags","fields","ignoreLLM","prompt","completion","handleLLMError","handleLLMEnd","output","CallbackManagerForChainRun","handleChainError","kwargs","ignoreChain","handleChainEnd","handleAgentAction","action","ignoreAgent","handleAgentEnd","CallbackManagerForToolRun","handleToolError","handleToolEnd","parentRunId","handleLLMStart","llm","prompts","undefined","extraParams","handleChatModelStart","messages","messageGroup","messageString","handleChainStart","chain","inputs","runType","handleToolStart","tool","input","handleRetrieverStart","retriever","query","addHandler","inherit","push","removeHandler","filter","_handler","removeTags","includes","removeMetadata","key","keys","copy","additionalHandlers","inheritable","h","some","fromHandlers","Handler","assign","configure","localHandlers","localTags","localMetadata","options","callbackManager","ensureHandler","verboseEnabled","verbose","tracingV2Enabled","tracingEnabled","prototype","consoleHandler","session","fromMethods","TraceGroup","groupName","getTraceGroupCallbackManager","group_name","cb","cm","runManager","lc","type","id","Error","start","end","_coerceToDict","defaultKey","traceAsGroup","groupOptions","enclosedCode","args","traceGroup","result"],"sources":["/Users/mayamagavi/instalily/case-study/node_modules/langchain/dist/callbacks/manager.js"],"sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\nimport { BaseCallbackHandler, } from \"./base.js\";\nimport { ConsoleCallbackHandler } from \"./handlers/console.js\";\nimport { getTracingCallbackHandler, getTracingV2CallbackHandler, } from \"./handlers/initialize.js\";\nimport { getBufferString } from \"../memory/base.js\";\nimport { getEnvironmentVariable } from \"../util/env.js\";\nimport { LangChainTracer, } from \"./handlers/tracer_langchain.js\";\nimport { consumeCallback } from \"./promises.js\";\nexport function parseCallbackConfigArg(arg) {\n    if (!arg) {\n        return {};\n    }\n    else if (Array.isArray(arg) || \"name\" in arg) {\n        return { callbacks: arg };\n    }\n    else {\n        return arg;\n    }\n}\n/**\n * Manage callbacks from different components of LangChain.\n */\nexport class BaseCallbackManager {\n    setHandler(handler) {\n        return this.setHandlers([handler]);\n    }\n}\n/**\n * Base class for run manager in LangChain.\n */\nclass BaseRunManager {\n    constructor(runId, handlers, inheritableHandlers, tags, inheritableTags, metadata, inheritableMetadata, _parentRunId) {\n        Object.defineProperty(this, \"runId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: runId\n        });\n        Object.defineProperty(this, \"handlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: handlers\n        });\n        Object.defineProperty(this, \"inheritableHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableHandlers\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: tags\n        });\n        Object.defineProperty(this, \"inheritableTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableTags\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: metadata\n        });\n        Object.defineProperty(this, \"inheritableMetadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableMetadata\n        });\n        Object.defineProperty(this, \"_parentRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _parentRunId\n        });\n    }\n    async handleText(text) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            try {\n                await handler.handleText?.(text, this.runId, this._parentRunId, this.tags);\n            }\n            catch (err) {\n                console.error(`Error in handler ${handler.constructor.name}, handleText: ${err}`);\n            }\n        }, handler.awaitHandlers)));\n    }\n}\n/**\n * Manages callbacks for retriever runs.\n */\nexport class CallbackManagerForRetrieverRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleRetrieverEnd(documents) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreRetriever) {\n                try {\n                    await handler.handleRetrieverEnd?.(documents, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleRetriever`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleRetrieverError(err) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreRetriever) {\n                try {\n                    await handler.handleRetrieverError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (error) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleRetrieverError: ${error}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForLLMRun extends BaseRunManager {\n    async handleLLMNewToken(token, idx, _runId, _parentRunId, _tags, fields) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMNewToken?.(token, idx ?? { prompt: 0, completion: 0 }, this.runId, this._parentRunId, this.tags, fields);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleLLMNewToken: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleLLMError(err) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleLLMError: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleLLMEnd(output) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMEnd?.(output, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleLLMEnd: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForChainRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleChainError(err, _runId, _parentRunId, _tags, kwargs) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreChain) {\n                try {\n                    await handler.handleChainError?.(err, this.runId, this._parentRunId, this.tags, kwargs);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleChainError: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleChainEnd(output, _runId, _parentRunId, _tags, kwargs) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreChain) {\n                try {\n                    await handler.handleChainEnd?.(output, this.runId, this._parentRunId, this.tags, kwargs);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleChainEnd: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleAgentAction(action) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleAgentAction?.(action, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleAgentAction: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleAgentEnd(action) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleAgentEnd?.(action, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleAgentEnd: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForToolRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleToolError(err) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleToolError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleToolError: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleToolEnd(output) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleToolEnd?.(output, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleToolEnd: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManager extends BaseCallbackManager {\n    constructor(parentRunId) {\n        super();\n        Object.defineProperty(this, \"handlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inheritableHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"inheritableTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"inheritableMetadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"callback_manager\"\n        });\n        Object.defineProperty(this, \"_parentRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.handlers = [];\n        this.inheritableHandlers = [];\n        this._parentRunId = parentRunId;\n    }\n    async handleLLMStart(llm, prompts, _runId = undefined, _parentRunId = undefined, extraParams = undefined) {\n        return Promise.all(prompts.map(async (prompt) => {\n            const runId = uuidv4();\n            await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n                if (!handler.ignoreLLM) {\n                    try {\n                        await handler.handleLLMStart?.(llm, [prompt], runId, this._parentRunId, extraParams, this.tags, this.metadata);\n                    }\n                    catch (err) {\n                        console.error(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`);\n                    }\n                }\n            }, handler.awaitHandlers)));\n            return new CallbackManagerForLLMRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n        }));\n    }\n    async handleChatModelStart(llm, messages, _runId = undefined, _parentRunId = undefined, extraParams = undefined) {\n        return Promise.all(messages.map(async (messageGroup) => {\n            const runId = uuidv4();\n            await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n                if (!handler.ignoreLLM) {\n                    try {\n                        if (handler.handleChatModelStart)\n                            await handler.handleChatModelStart?.(llm, [messageGroup], runId, this._parentRunId, extraParams, this.tags, this.metadata);\n                        else if (handler.handleLLMStart) {\n                            const messageString = getBufferString(messageGroup);\n                            await handler.handleLLMStart?.(llm, [messageString], runId, this._parentRunId, extraParams, this.tags, this.metadata);\n                        }\n                    }\n                    catch (err) {\n                        console.error(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`);\n                    }\n                }\n            }, handler.awaitHandlers)));\n            return new CallbackManagerForLLMRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n        }));\n    }\n    async handleChainStart(chain, inputs, runId = uuidv4(), runType = undefined) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreChain) {\n                try {\n                    await handler.handleChainStart?.(chain, inputs, runId, this._parentRunId, this.tags, this.metadata, runType);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleChainStart: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n        return new CallbackManagerForChainRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    async handleToolStart(tool, input, runId = uuidv4()) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleToolStart?.(tool, input, runId, this._parentRunId, this.tags, this.metadata);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleToolStart: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n        return new CallbackManagerForToolRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    async handleRetrieverStart(retriever, query, runId = uuidv4(), _parentRunId = undefined) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreRetriever) {\n                try {\n                    await handler.handleRetrieverStart?.(retriever, query, runId, this._parentRunId, this.tags, this.metadata);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleRetrieverStart: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n        return new CallbackManagerForRetrieverRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    addHandler(handler, inherit = true) {\n        this.handlers.push(handler);\n        if (inherit) {\n            this.inheritableHandlers.push(handler);\n        }\n    }\n    removeHandler(handler) {\n        this.handlers = this.handlers.filter((_handler) => _handler !== handler);\n        this.inheritableHandlers = this.inheritableHandlers.filter((_handler) => _handler !== handler);\n    }\n    setHandlers(handlers, inherit = true) {\n        this.handlers = [];\n        this.inheritableHandlers = [];\n        for (const handler of handlers) {\n            this.addHandler(handler, inherit);\n        }\n    }\n    addTags(tags, inherit = true) {\n        this.removeTags(tags); // Remove duplicates\n        this.tags.push(...tags);\n        if (inherit) {\n            this.inheritableTags.push(...tags);\n        }\n    }\n    removeTags(tags) {\n        this.tags = this.tags.filter((tag) => !tags.includes(tag));\n        this.inheritableTags = this.inheritableTags.filter((tag) => !tags.includes(tag));\n    }\n    addMetadata(metadata, inherit = true) {\n        this.metadata = { ...this.metadata, ...metadata };\n        if (inherit) {\n            this.inheritableMetadata = { ...this.inheritableMetadata, ...metadata };\n        }\n    }\n    removeMetadata(metadata) {\n        for (const key of Object.keys(metadata)) {\n            delete this.metadata[key];\n            delete this.inheritableMetadata[key];\n        }\n    }\n    copy(additionalHandlers = [], inherit = true) {\n        const manager = new CallbackManager(this._parentRunId);\n        for (const handler of this.handlers) {\n            const inheritable = this.inheritableHandlers.includes(handler);\n            manager.addHandler(handler, inheritable);\n        }\n        for (const tag of this.tags) {\n            const inheritable = this.inheritableTags.includes(tag);\n            manager.addTags([tag], inheritable);\n        }\n        for (const key of Object.keys(this.metadata)) {\n            const inheritable = Object.keys(this.inheritableMetadata).includes(key);\n            manager.addMetadata({ [key]: this.metadata[key] }, inheritable);\n        }\n        for (const handler of additionalHandlers) {\n            if (\n            // Prevent multiple copies of console_callback_handler\n            manager.handlers\n                .filter((h) => h.name === \"console_callback_handler\")\n                .some((h) => h.name === handler.name)) {\n                continue;\n            }\n            manager.addHandler(handler, inherit);\n        }\n        return manager;\n    }\n    static fromHandlers(handlers) {\n        class Handler extends BaseCallbackHandler {\n            constructor() {\n                super();\n                Object.defineProperty(this, \"name\", {\n                    enumerable: true,\n                    configurable: true,\n                    writable: true,\n                    value: uuidv4()\n                });\n                Object.assign(this, handlers);\n            }\n        }\n        const manager = new this();\n        manager.addHandler(new Handler());\n        return manager;\n    }\n    static async configure(inheritableHandlers, localHandlers, inheritableTags, localTags, inheritableMetadata, localMetadata, options) {\n        let callbackManager;\n        if (inheritableHandlers || localHandlers) {\n            if (Array.isArray(inheritableHandlers) || !inheritableHandlers) {\n                callbackManager = new CallbackManager();\n                callbackManager.setHandlers(inheritableHandlers?.map(ensureHandler) ?? [], true);\n            }\n            else {\n                callbackManager = inheritableHandlers;\n            }\n            callbackManager = callbackManager.copy(Array.isArray(localHandlers)\n                ? localHandlers.map(ensureHandler)\n                : localHandlers?.handlers, false);\n        }\n        const verboseEnabled = getEnvironmentVariable(\"LANGCHAIN_VERBOSE\") || options?.verbose;\n        const tracingV2Enabled = getEnvironmentVariable(\"LANGCHAIN_TRACING_V2\") === \"true\";\n        const tracingEnabled = tracingV2Enabled ||\n            (getEnvironmentVariable(\"LANGCHAIN_TRACING\") ?? false);\n        if (verboseEnabled || tracingEnabled) {\n            if (!callbackManager) {\n                callbackManager = new CallbackManager();\n            }\n            if (verboseEnabled &&\n                !callbackManager.handlers.some((handler) => handler.name === ConsoleCallbackHandler.prototype.name)) {\n                const consoleHandler = new ConsoleCallbackHandler();\n                callbackManager.addHandler(consoleHandler, true);\n            }\n            if (tracingEnabled &&\n                !callbackManager.handlers.some((handler) => handler.name === \"langchain_tracer\")) {\n                if (tracingV2Enabled) {\n                    callbackManager.addHandler(await getTracingV2CallbackHandler(), true);\n                }\n                else {\n                    const session = getEnvironmentVariable(\"LANGCHAIN_PROJECT\") &&\n                        getEnvironmentVariable(\"LANGCHAIN_SESSION\");\n                    callbackManager.addHandler(await getTracingCallbackHandler(session), true);\n                }\n            }\n        }\n        if (inheritableTags || localTags) {\n            if (callbackManager) {\n                callbackManager.addTags(inheritableTags ?? []);\n                callbackManager.addTags(localTags ?? [], false);\n            }\n        }\n        if (inheritableMetadata || localMetadata) {\n            if (callbackManager) {\n                callbackManager.addMetadata(inheritableMetadata ?? {});\n                callbackManager.addMetadata(localMetadata ?? {}, false);\n            }\n        }\n        return callbackManager;\n    }\n}\nfunction ensureHandler(handler) {\n    if (\"name\" in handler) {\n        return handler;\n    }\n    return BaseCallbackHandler.fromMethods(handler);\n}\nexport class TraceGroup {\n    constructor(groupName, options) {\n        Object.defineProperty(this, \"groupName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: groupName\n        });\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: options\n        });\n        Object.defineProperty(this, \"runManager\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    async getTraceGroupCallbackManager(group_name, inputs, options) {\n        const cb = new LangChainTracer(options);\n        const cm = await CallbackManager.configure([cb]);\n        const runManager = await cm?.handleChainStart({\n            lc: 1,\n            type: \"not_implemented\",\n            id: [\"langchain\", \"callbacks\", \"groups\", group_name],\n        }, inputs ?? {});\n        if (!runManager) {\n            throw new Error(\"Failed to create run group callback manager.\");\n        }\n        return runManager;\n    }\n    async start(inputs) {\n        if (!this.runManager) {\n            this.runManager = await this.getTraceGroupCallbackManager(this.groupName, inputs, this.options);\n        }\n        return this.runManager.getChild();\n    }\n    async error(err) {\n        if (this.runManager) {\n            await this.runManager.handleChainError(err);\n            this.runManager = undefined;\n        }\n    }\n    async end(output) {\n        if (this.runManager) {\n            await this.runManager.handleChainEnd(output ?? {});\n            this.runManager = undefined;\n        }\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _coerceToDict(value, defaultKey) {\n    return value && !Array.isArray(value) && typeof value === \"object\"\n        ? value\n        : { [defaultKey]: value };\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport async function traceAsGroup(groupOptions, enclosedCode, ...args) {\n    const traceGroup = new TraceGroup(groupOptions.name, groupOptions);\n    const callbackManager = await traceGroup.start({ ...args });\n    try {\n        const result = await enclosedCode(callbackManager, ...args);\n        await traceGroup.end(_coerceToDict(result, \"output\"));\n        return result;\n    }\n    catch (err) {\n        await traceGroup.error(err);\n        throw err;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}